Index: src/rail_cmd.cpp
===================================================================
--- src/rail_cmd.cpp	(Revision 22728)
+++ src/rail_cmd.cpp	(Arbeitskopie)
@@ -2440,79 +2440,48 @@
 	if (IsPlainRail(tile) && old_ground != RAIL_GROUND_BARREN) { // wait until bottom is green
 		/* determine direction of fence */
 		TrackBits rail = GetTrackBits(tile);
+		Owner owner = GetTileOwner(tile);
+		byte neighbours = 0;
 
-		switch (rail) {
-			case TRACK_BIT_UPPER: new_ground = RAIL_GROUND_FENCE_HORIZ1; break;
-			case TRACK_BIT_LOWER: new_ground = RAIL_GROUND_FENCE_HORIZ2; break;
-			case TRACK_BIT_LEFT:  new_ground = RAIL_GROUND_FENCE_VERT1;  break;
-			case TRACK_BIT_RIGHT: new_ground = RAIL_GROUND_FENCE_VERT2;  break;
+		for (DiagDirection d = DIAGDIR_BEGIN; d < DIAGDIR_END; d++) {
+			TrackBits tb;
+			
+			switch (d) {
+				case DIAGDIR_NE: tb = TRACK_BIT_3WAY_NE; break;
+				case DIAGDIR_SE: tb = TRACK_BIT_3WAY_SE; break;
+				case DIAGDIR_SW: tb = TRACK_BIT_3WAY_SW; break;
+				case DIAGDIR_NW: tb = TRACK_BIT_3WAY_NW; break;
+				default: NOT_REACHED();
+			}
 
-			default: {
-				Owner owner = GetTileOwner(tile);
+			if ((rail & tb) != 0) continue; // track bit on this edge => no fence
 
-				if (rail == (TRACK_BIT_LOWER | TRACK_BIT_RIGHT) || (
-							(rail & TRACK_BIT_3WAY_NW) == 0 &&
-							(rail & TRACK_BIT_X)
-						)) {
-					TileIndex n = tile + TileDiffXY(0, -1);
-					TrackBits nrail = (IsPlainRailTile(n) ? GetTrackBits(n) : TRACK_BIT_NONE);
+			TileIndex tile2 = tile + TileOffsByDiagDir(d);
 
-					if (!IsTileType(n, MP_RAILWAY) ||
-							!IsTileOwner(n, owner) ||
-							nrail == TRACK_BIT_UPPER ||
-							nrail == TRACK_BIT_LEFT) {
-						new_ground = RAIL_GROUND_FENCE_NW;
-					}
-				}
+			if (IsValidTile(tile2) &&
+					!IsTileType(tile2, MP_HOUSE) &&
+					!IsTileType(tile2, MP_INDUSTRY) &&
+					!IsTileType(tile2, MP_ROAD) &&
+					IsTileOwner(tile2, owner)) {
+				continue;
+			}
 
-				if (rail == (TRACK_BIT_UPPER | TRACK_BIT_LEFT) || (
-							(rail & TRACK_BIT_3WAY_SE) == 0 &&
-							(rail & TRACK_BIT_X)
-						)) {
-					TileIndex n = tile + TileDiffXY(0, 1);
-					TrackBits nrail = (IsPlainRailTile(n) ? GetTrackBits(n) : TRACK_BIT_NONE);
+			neighbours |= 1 << d;
+		}
 
-					if (!IsTileType(n, MP_RAILWAY) ||
-							!IsTileOwner(n, owner) ||
-							nrail == TRACK_BIT_LOWER ||
-							nrail == TRACK_BIT_RIGHT) {
-						new_ground = (new_ground == RAIL_GROUND_FENCE_NW) ?
-							RAIL_GROUND_FENCE_SENW : RAIL_GROUND_FENCE_SE;
-					}
-				}
-
-				if (rail == (TRACK_BIT_LOWER | TRACK_BIT_LEFT) || (
-							(rail & TRACK_BIT_3WAY_NE) == 0 &&
-							(rail & TRACK_BIT_Y)
-						)) {
-					TileIndex n = tile + TileDiffXY(-1, 0);
-					TrackBits nrail = (IsPlainRailTile(n) ? GetTrackBits(n) : TRACK_BIT_NONE);
-
-					if (!IsTileType(n, MP_RAILWAY) ||
-							!IsTileOwner(n, owner) ||
-							nrail == TRACK_BIT_UPPER ||
-							nrail == TRACK_BIT_RIGHT) {
-						new_ground = RAIL_GROUND_FENCE_NE;
-					}
-				}
-
-				if (rail == (TRACK_BIT_UPPER | TRACK_BIT_RIGHT) || (
-							(rail & TRACK_BIT_3WAY_SW) == 0 &&
-							(rail & TRACK_BIT_Y)
-						)) {
-					TileIndex n = tile + TileDiffXY(1, 0);
-					TrackBits nrail = (IsPlainRailTile(n) ? GetTrackBits(n) : TRACK_BIT_NONE);
-
-					if (!IsTileType(n, MP_RAILWAY) ||
-							!IsTileOwner(n, owner) ||
-							nrail == TRACK_BIT_LOWER ||
-							nrail == TRACK_BIT_LEFT) {
-						new_ground = (new_ground == RAIL_GROUND_FENCE_NE) ?
-							RAIL_GROUND_FENCE_NESW : RAIL_GROUND_FENCE_SW;
-					}
-				}
-				break;
-			}
+		switch (neighbours) {
+			case 0: break;
+			case (1 << DIAGDIR_NE): new_ground = RAIL_GROUND_FENCE_NE; break;
+			case (1 << DIAGDIR_SE): new_ground = RAIL_GROUND_FENCE_SE; break;
+			case (1 << DIAGDIR_SW): new_ground = RAIL_GROUND_FENCE_SW; break;
+			case (1 << DIAGDIR_NW): new_ground = RAIL_GROUND_FENCE_NW; break;
+			case (1 << DIAGDIR_NE) | (1 << DIAGDIR_SW): new_ground = RAIL_GROUND_FENCE_NESW; break;
+			case (1 << DIAGDIR_SE) | (1 << DIAGDIR_NW): new_ground = RAIL_GROUND_FENCE_SENW; break;
+			case (1 << DIAGDIR_NE) | (1 << DIAGDIR_SE): new_ground = RAIL_GROUND_FENCE_VERT1; break;
+			case (1 << DIAGDIR_NE) | (1 << DIAGDIR_NW): new_ground = RAIL_GROUND_FENCE_HORIZ2; break;
+			case (1 << DIAGDIR_SE) | (1 << DIAGDIR_SW): new_ground = RAIL_GROUND_FENCE_HORIZ1; break;
+			case (1 << DIAGDIR_SW) | (1 << DIAGDIR_NW): new_ground = RAIL_GROUND_FENCE_VERT2; break;
+			default: NOT_REACHED();
 		}
 	}
 
