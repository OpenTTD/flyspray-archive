# HG changeset patch
# Parent dba5e699d261bedcca4edbdbdb336687ca584600
-Codechange: Build the Help toolbar with DropdownListStringItem instead of relying to a range of strings.

Discoupling the dropdown strings from the range order allow more flexibility to customize the dropdown content.

diff --git a/src/lang/english.txt b/src/lang/english.txt
--- a/src/lang/english.txt
+++ b/src/lang/english.txt
@@ -455,7 +455,7 @@ STR_NEWS_MENU_LAST_MESSAGE_NEWS_REPORT  
 STR_NEWS_MENU_MESSAGE_HISTORY_MENU                              :Message history
 ############ range ends here
 
-############ range for about menu starts
+############ about menu entries starts
 STR_ABOUT_MENU_LAND_BLOCK_INFO                                  :Land area information
 STR_ABOUT_MENU_SEPARATOR                                        :
 STR_ABOUT_MENU_TOGGLE_CONSOLE                                   :Toggle console
@@ -468,7 +468,7 @@ STR_ABOUT_MENU_ABOUT_OPENTTD            
 STR_ABOUT_MENU_SPRITE_ALIGNER                                   :Sprite aligner
 STR_ABOUT_MENU_TOGGLE_BOUNDING_BOXES                            :Toggle bounding boxes
 STR_ABOUT_MENU_TOGGLE_DIRTY_BLOCKS                              :Toggle colouring of dirty blocks
-############ range ends here
+############ about menu entries ends here
 
 ############ range for days starts (also used for the place in the highscore window)
 STR_ORDINAL_NUMBER_1ST                                          :1st
diff --git a/src/toolbar_gui.cpp b/src/toolbar_gui.cpp
--- a/src/toolbar_gui.cpp
+++ b/src/toolbar_gui.cpp
@@ -1019,9 +1019,39 @@ static CallBackFunction PlaceLandBlockIn
 	}
 }
 
+enum HelpMenuEntries {
+	HME_LAND_BLOCK_INFO,
+	HME_TOGGLE_CONSOLE,
+	HME_AI_DEBUG,
+	HME_SCREENSHOT,
+	HME_ZOOMIN_SCREENSHOT,
+	HME_DEFAULT_ZOOM_SCREENSHOT,
+	HME_GIANT_SCREENSHOT,
+	HME_ABOUT_OPENTTD,
+	HME_SPRITE_ALIGNER,
+	HME_TOGGLE_BOUNDING_BOXES,
+	HME_TOGGLE_DIRTY_BLOCKS,
+};
+
 static CallBackFunction ToolbarHelpClick(Window *w)
 {
-	PopupMainToolbMenu(w, WID_TN_HELP, STR_ABOUT_MENU_LAND_BLOCK_INFO, _settings_client.gui.newgrf_developer_tools ? 12 : 9);
+	DropDownList *list = new DropDownList();
+	list->push_back(new DropDownListStringItem(STR_ABOUT_MENU_LAND_BLOCK_INFO,        HME_LAND_BLOCK_INFO, false));
+	list->push_back(new DropDownListStringItem(STR_ABOUT_MENU_SEPARATOR,              -1, false));
+	list->push_back(new DropDownListStringItem(STR_ABOUT_MENU_TOGGLE_CONSOLE,         HME_TOGGLE_CONSOLE, false));
+	list->push_back(new DropDownListStringItem(STR_ABOUT_MENU_AI_DEBUG,               HME_AI_DEBUG, false));
+	list->push_back(new DropDownListStringItem(STR_ABOUT_MENU_SCREENSHOT,             HME_SCREENSHOT, false));
+	list->push_back(new DropDownListStringItem(STR_ABOUT_MENU_ZOOMIN_SCREENSHOT,      HME_ZOOMIN_SCREENSHOT, false));
+	list->push_back(new DropDownListStringItem(STR_ABOUT_MENU_DEFAULTZOOM_SCREENSHOT, HME_DEFAULT_ZOOM_SCREENSHOT, false));
+	list->push_back(new DropDownListStringItem(STR_ABOUT_MENU_GIANT_SCREENSHOT,       HME_GIANT_SCREENSHOT, false));
+	list->push_back(new DropDownListStringItem(STR_ABOUT_MENU_ABOUT_OPENTTD,          HME_ABOUT_OPENTTD, false));
+	if (_settings_client.gui.newgrf_developer_tools) {
+		list->push_back(new DropDownListStringItem(STR_ABOUT_MENU_SPRITE_ALIGNER,        HME_SPRITE_ALIGNER, false));
+		list->push_back(new DropDownListStringItem(STR_ABOUT_MENU_TOGGLE_BOUNDING_BOXES, HME_TOGGLE_BOUNDING_BOXES, false));
+		list->push_back(new DropDownListStringItem(STR_ABOUT_MENU_TOGGLE_DIRTY_BLOCKS,   HME_TOGGLE_DIRTY_BLOCKS, false));
+	}
+
+	ShowDropDownList(w, list, 0, WID_TN_HELP, 140, true, true);
 	return CBF_NONE;
 }
 
@@ -1103,17 +1133,17 @@ void ToggleDirtyBlocks()
 static CallBackFunction MenuClickHelp(int index)
 {
 	switch (index) {
-		case  0: return PlaceLandBlockInfo();
-		case  2: IConsoleSwitch();                 break;
-		case  3: ShowAIDebugWindow();              break;
-		case  4: MenuClickSmallScreenshot();       break;
-		case  5: MenuClickLargeWorldScreenshot(SC_ZOOMEDIN);    break;
-		case  6: MenuClickLargeWorldScreenshot(SC_DEFAULTZOOM); break;
-		case  7: MenuClickLargeWorldScreenshot(SC_WORLD);       break;
-		case  8: ShowAboutWindow();                break;
-		case  9: ShowSpriteAlignerWindow();        break;
-		case 10: ToggleBoundingBoxes();            break;
-		case 11: ToggleDirtyBlocks();              break;
+		case HME_LAND_BLOCK_INFO:         return PlaceLandBlockInfo();
+		case HME_TOGGLE_CONSOLE:          IConsoleSwitch();                              break;
+		case HME_AI_DEBUG:                ShowAIDebugWindow();                           break;
+		case HME_SCREENSHOT:              MenuClickSmallScreenshot();                    break;
+		case HME_ZOOMIN_SCREENSHOT:       MenuClickLargeWorldScreenshot(SC_ZOOMEDIN);    break;
+		case HME_DEFAULT_ZOOM_SCREENSHOT: MenuClickLargeWorldScreenshot(SC_DEFAULTZOOM); break;
+		case HME_GIANT_SCREENSHOT:        MenuClickLargeWorldScreenshot(SC_WORLD);       break;
+		case HME_ABOUT_OPENTTD:           ShowAboutWindow();                             break;
+		case HME_SPRITE_ALIGNER:          ShowSpriteAlignerWindow();                     break;
+		case HME_TOGGLE_BOUNDING_BOXES:   ToggleBoundingBoxes();                         break;
+		case HME_TOGGLE_DIRTY_BLOCKS:     ToggleDirtyBlocks();                           break;
 	}
 	return CBF_NONE;
 }
