=== modified file 'src/order_gui.cpp'
--- src/order_gui.cpp	2008-06-13 10:44:30 +0000
+++ src/order_gui.cpp	2008-07-15 15:10:19 +0000
@@ -1039,10 +1039,7 @@
 	{
 		/* unclick all buttons except for the 'goto' button (ORDER_WIDGET_GOTO), which is 'persistent' */
 		for (uint i = 0; i < this->widget_count; i++) {
-			if (this->IsWidgetLowered(i) && i != ORDER_WIDGET_GOTO) {
-				this->RaiseWidget(i);
-				this->InvalidateWidget(i);
-			}
+			if (i != ORDER_WIDGET_GOTO) this->RaiseButton(i);
 		}
 	}
 };

=== modified file 'src/terraform_gui.cpp'
--- src/terraform_gui.cpp	2008-06-27 15:37:53 +0000
+++ src/terraform_gui.cpp	2008-07-15 15:10:19 +0000
@@ -651,10 +651,7 @@
 	{
 		for (uint i = ETTW_START; i < this->widget_count; i++) {
 			if (i == ETTW_BUTTONS_START) i = ETTW_BUTTONS_END; // skip the buttons
-			if (this->IsWidgetLowered(i)) {
-				this->RaiseWidget(i);
-				this->InvalidateWidget(i);
-			}
+			this->RaiseButton(i);
 		}
 	}
 

=== modified file 'src/toolbar_gui.cpp'
--- src/toolbar_gui.cpp	2008-07-05 07:25:37 +0000
+++ src/toolbar_gui.cpp	2008-07-15 15:10:19 +0000
@@ -993,10 +993,7 @@
 	virtual void OnTimeout()
 	{
 		for (uint i = TBN_SETTINGS; i < this->widget_count - 1; i++) {
-			if (this->IsWidgetLowered(i)) {
-				this->RaiseWidget(i);
-				this->InvalidateWidget(i);
-			}
+			this->RaiseButton(i);
 		}
 	}
 

=== modified file 'src/widget.cpp'
--- src/widget.cpp	2008-07-15 13:27:58 +0000
+++ src/widget.cpp	2008-07-15 15:10:19 +0000
@@ -617,3 +617,14 @@
 	SetDirtyBlocks(w->left + left, w->top + top, w->left + right + 1, w->top + bottom + 1);
 }
 
+/**
+ * If lowered, raise the button
+ * @param w  Window that the widget is in
+ */
+void Widget::RaiseButton(const Window *w)
+{
+	if (IsLowered()) {
+		Raise();
+		SetDirty(w);
+	}
+}

=== modified file 'src/window.cpp'
--- src/window.cpp	2008-07-15 13:27:58 +0000
+++ src/window.cpp	2008-07-15 15:10:19 +0000
@@ -92,13 +92,11 @@
 	va_end(wdg_list);
 }
 
+/** Raise all buttons of the window */
 void Window::RaiseButtons()
 {
 	for (uint i = 0; i < this->widget_count; i++) {
-		if (this->IsWidgetLowered(i)) {
-			this->RaiseWidget(i);
-			this->InvalidateWidget(i);
-		}
+		this->RaiseButton(i);
 	}
 }
 

=== modified file 'src/window_gui.h'
--- src/window_gui.h	2008-07-15 13:27:58 +0000
+++ src/window_gui.h	2008-07-15 15:10:19 +0000
@@ -103,6 +103,8 @@
 	void Lower();
 	void Raise();
 	bool IsLowered() const;
+
+	void RaiseButton(const Window *w);
 };
 
 /**
@@ -256,6 +258,7 @@
 	void LowerWidget(byte widget_index);
 	void RaiseWidget(byte widget_index);
 	bool IsWidgetLowered(byte widget_index) const;
+	void RaiseButton(byte widget_index);
 
 	void RaiseButtons();
 	void CDECL SetWidgetsDisabledState(bool disab_stat, int widgets, ...);
@@ -832,4 +835,14 @@
 	return this->widget[widget_index].IsLowered();
 }
 
+/**
+ * If lowered, raise button \a widget_index.
+ * @param widget_index  Index of button widget to raise
+ */
+inline void Window::RaiseButton(byte widget_index)
+{
+	assert(widget_index < this->widget_count);
+	this->widget[widget_index].RaiseButton(this);
+}
+
 #endif /* WINDOW_GUI_H */

