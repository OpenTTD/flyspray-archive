Index: src/blitter/8bpp_base.cpp
===================================================================
--- src/blitter/8bpp_base.cpp	(revision 11158)
+++ src/blitter/8bpp_base.cpp	(working copy)
@@ -60,7 +60,7 @@
 		stepx = 1;
 	}
 
-	if (x > 0 && y > 0 && x < screen_width && y < screen_height) this->SetPixel(video, x, y, color);
+	if (x >= 0 && y >= 0 && x < screen_width && y < screen_height) this->SetPixel(video, x, y, color);
 	if (dx > dy) {
 		frac = dy - (dx / 2);
 		while (x != x2) {
@@ -70,7 +70,7 @@
 			}
 			x += stepx;
 			frac += dy;
-			if (x > 0 && y > 0 && x < screen_width && y < screen_height) this->SetPixel(video, x, y, color);
+			if (x >= 0 && y >= 0 && x < screen_width && y < screen_height) this->SetPixel(video, x, y, color);
 		}
 	} else {
 		frac = dx - (dy / 2);
@@ -81,7 +81,7 @@
 			}
 			y += stepy;
 			frac += dx;
-			if (x > 0 && y > 0 && x < screen_width && y < screen_height) this->SetPixel(video, x, y, color);
+			if (x >= 0 && y >= 0 && x < screen_width && y < screen_height) this->SetPixel(video, x, y, color);
 		}
 	}
 }
Index: src/blitter/32bpp_base.cpp
===================================================================
--- src/blitter/32bpp_base.cpp	(revision 11158)
+++ src/blitter/32bpp_base.cpp	(working copy)
@@ -56,7 +56,7 @@
 		stepx = 1;
 	}
 
-	if (x > 0 && y > 0 && x < screen_width && y < screen_height) this->SetPixel(video, x, y, color);
+	if (x >= 0 && y >= 0 && x < screen_width && y < screen_height) this->SetPixel(video, x, y, color);
 	if (dx > dy) {
 		frac = dy - (dx / 2);
 		while (x != x2) {
@@ -66,7 +66,7 @@
 			}
 			x += stepx;
 			frac += dy;
-			if (x > 0 && y > 0 && x < screen_width && y < screen_height) this->SetPixel(video, x, y, color);
+			if (x >= 0 && y >= 0 && x < screen_width && y < screen_height) this->SetPixel(video, x, y, color);
 		}
 	} else {
 		frac = dx - (dy / 2);
@@ -77,7 +77,7 @@
 			}
 			y += stepy;
 			frac += dx;
-			if (x > 0 && y > 0 && x < screen_width && y < screen_height) this->SetPixel(video, x, y, color);
+			if (x >= 0 && y >= 0 && x < screen_width && y < screen_height) this->SetPixel(video, x, y, color);
 		}
 	}
 }
