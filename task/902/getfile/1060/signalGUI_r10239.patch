Index: src/lang/english.txt
===================================================================
--- src/lang/english.txt	(Revision 10239)
+++ src/lang/english.txt	(Arbeitskopie)
@@ -1136,6 +1136,7 @@
 STR_CONFIG_PATCHES_ENDING_YEAR                                  :{LTBLUE}End game in: {ORANGE}{STRING1}
 STR_CONFIG_PATCHES_SMOOTH_ECONOMY                               :{LTBLUE}Enable smooth economy (more, smaller changes)
 STR_CONFIG_PATCHES_ALLOW_SHARES                                 :{LTBLUE}Allow buying shares from other companies
+STR_CONFIG_PATCHES_ENABLE_SIGNAL_GUI                            :{LTBLUE}Enable the signal GUI: {ORANGE}{STRING1}
 STR_CONFIG_PATCHES_DRAG_SIGNALS_DENSITY                         :{LTBLUE}When dragging, place signals every: {ORANGE}{STRING1} tile(s)
 STR_CONFIG_PATCHES_SEMAPHORE_BUILD_BEFORE_DATE                  :{LTBLUE}Automatically build semaphores before: {ORANGE}{STRING1}
 
@@ -1221,6 +1222,22 @@
 STR_CANT_BUILD_TRAIN_WAYPOINT                                   :{WHITE}Can't build train waypoint here...
 STR_CANT_REMOVE_TRAIN_WAYPOINT                                  :{WHITE}Can't remove train waypoint here...
 
+STR_SIGNAL_SELECTION                                            :{WHITE}Signal Type Selection
+STR_SIGNAL_TYPE_COMBO                                           :{BLACK}{SKIP}{SKIP}{SKIP}{SKIP}{SKIP}{SKIP}{SKIP}{STRING}
+STR_SIGNAL_NORMAL                                               :Normal Signals
+STR_SIGNAL_ENTRANCE                                             :Entrance Presignals
+STR_SIGNAL_COMBO                                                :Combo Presignals
+STR_SIGNAL_EXIT                                                 :Exit Presignals
+STR_SIGNAL_DENSITY_DESC                                         :{BLACK}Signal Density:
+STR_SIGNAL_DENSITY_TILES                                        :{GOLD}{NUM} tile{P "" s}
+############ Leave those lines in this order!!
+STR_SIGNAL_VARIANT_ELECTRIC                                     :{GOLD}Electric Signals
+STR_SIGNAL_VARIANT_SEMAPHORES                                   :{GOLD}Semaphores
+############ End of leave-in-this-order
+STR_SIGNAL_VARIANT_TIP                                          :{BLACK}Select signal variant
+STR_SIGNAL_DENSITY_TIP                                          :{BLACK}Select signal density for dragging
+STR_SIGNAL_TYPE_TIP                                             :{BLACK}Select the type of signal
+
 STR_BUILD_AUTORAIL_TIP                                          :{BLACK}Build railway track using the Autorail mode
 
 STR_NO_TOWN_IN_SCENARIO                                         :{WHITE}...there is no town in this scenario
Index: src/lang/german.txt
===================================================================
--- src/lang/german.txt	(Revision 10239)
+++ src/lang/german.txt	(Arbeitskopie)
@@ -1135,6 +1135,7 @@
 STR_CONFIG_PATCHES_ENDING_YEAR                                  :{LTBLUE}Spiel beenden: {ORANGE}{STRING}
 STR_CONFIG_PATCHES_SMOOTH_ECONOMY                               :{LTBLUE}Feinere Wirtschaft aktivieren (mehrere, kleinere Ver채nderungen)
 STR_CONFIG_PATCHES_ALLOW_SHARES                                 :{LTBLUE}Erlaube Anteile an anderen Firmen zu kaufen
+STR_CONFIG_PATCHES_ENABLE_SIGNAL_GUI                            :{LTBLUE}Signal GUI einschalten: {ORANGE}{STRING}
 STR_CONFIG_PATCHES_DRAG_SIGNALS_DENSITY                         :{LTBLUE}Errichte Signale alle {ORANGE}{STRING} Felder beim Ziehen mit der Maus
 STR_CONFIG_PATCHES_SEMAPHORE_BUILD_BEFORE_DATE                  :{LTBLUE}Automatischer Bau von Formsignalen bis: {ORANGE}{STRING}
 
@@ -1220,6 +1221,22 @@
 STR_CANT_BUILD_TRAIN_WAYPOINT                                   :{WHITE}Kann Wegpunkt hier nicht bauen...
 STR_CANT_REMOVE_TRAIN_WAYPOINT                                  :{WHITE}Kann Wegpunkt hier nicht entfernen...
 
+STR_SIGNAL_SELECTION                                            :{WHITE}Signaltyp Auswahl
+STR_SIGNAL_TYPE_COMBO                                           :{BLACK}{SKIP}{SKIP}{SKIP}{SKIP}{SKIP}{SKIP}{SKIP}{STRING}
+STR_SIGNAL_NORMAL                                               :Normale Signale
+STR_SIGNAL_ENTRANCE                                             :Einfahrvorsignal
+STR_SIGNAL_COMBO                                                :Kombinationsvorsignal
+STR_SIGNAL_EXIT                                                 :Ausgangsvorsignal
+STR_SIGNAL_DENSITY_DESC                                         :{BLACK}Signaldichte:
+STR_SIGNAL_DENSITY_TILES                                        :{GOLD}{NUM} Feld{P "" er}
+############ Leave those lines in this order!!
+STR_SIGNAL_VARIANT_ELECTRIC                                     :{GOLD}Lichtsignale
+STR_SIGNAL_VARIANT_SEMAPHORES                                   :{GOLD}Formsignale
+############ End of leave-in-this-order
+STR_SIGNAL_VARIANT_TIP                                          :{BLACK}Signalart ausw채hlen
+STR_SIGNAL_DENSITY_TIP                                          :{BLACK}Signaldichte beim Ziehen ausw채hlen
+STR_SIGNAL_TYPE_TIP                                             :{BLACK}Signaltyp ausw채hlen
+
 STR_BUILD_AUTORAIL_TIP                                          :{BLACK}Bauen von Schienen unter Verwendung des Autoschienenmodus
 
 STR_NO_TOWN_IN_SCENARIO                                         :{WHITE}...in diesem Szenario gibt es keine Stadt
Index: src/openttd.h
===================================================================
--- src/openttd.h	(Revision 10239)
+++ src/openttd.h	(Arbeitskopie)
@@ -571,6 +571,7 @@
 	WC_CONFIRM_POPUP_QUERY,
 	WC_TRANSPARENCY_TOOLBAR,
 	WC_VEHICLE_TIMETABLE,
+	WC_BUILD_SIGNALS,
 };
 
 
Index: src/rail_cmd.cpp
===================================================================
--- src/rail_cmd.cpp	(Revision 10239)
+++ src/rail_cmd.cpp	(Arbeitskopie)
@@ -649,6 +649,7 @@
  * - p1 = (bit 0-2) - track-orientation, valid values: 0-5 (Track enum)
  * - p1 = (bit 3)   - 1 = override signal/semaphore, or pre/exit/combo signal (CTRL-toggle)
  * - p1 = (bit 4)   - 0 = signals, 1 = semaphores
+ * - p1 = (bit 5-7) - choose signal type (only aplies when no signals already exist) normal/pre/exit/combo depending on context
  * @param p2 used for CmdBuildManySignals() to copy direction of first signal
  * TODO: p2 should be replaced by two bits for "along" and "against" the track.
  */
@@ -657,6 +658,7 @@
 	Track track = (Track)GB(p1, 0, 3);
 	bool pre_signal = HASBIT(p1, 3);
 	SignalVariant sigvar = (pre_signal ^ HASBIT(p1, 4)) ? SIG_SEMAPHORE : SIG_ELECTRIC;
+	SignalType sigtype = (SignalType)GB(p1, 5, 3);
 	CommandCost cost;
 
 	if (!ValParamTrackOrientation(track) || !IsTileType(tile, MP_RAILWAY) || !EnsureNoVehicleOnGround(tile))
@@ -703,7 +705,7 @@
 			SetHasSignals(tile, true);
 			SetSignalStates(tile, 0xF); // all signals are on
 			SetPresentSignals(tile, 0); // no signals built by default
-			SetSignalType(tile, track, SIGTYPE_NORMAL);
+			SetSignalType(tile, track, sigtype);
 			SetSignalVariant(tile, track, sigvar);
 		}
 
@@ -711,14 +713,14 @@
 			if (!HasSignalOnTrack(tile, track)) {
 				/* build new signals */
 				SetPresentSignals(tile, GetPresentSignals(tile) | SignalOnTrack(track));
-				SetSignalType(tile, track, SIGTYPE_NORMAL);
+				SetSignalType(tile, track, sigtype);
 				SetSignalVariant(tile, track, sigvar);
 			} else {
 				if (pre_signal) {
 					/* cycle between normal -> pre -> exit -> combo -> ... */
-					SignalType type = GetSignalType(tile, track);
+					sigtype = GetSignalType(tile, track);
 
-					SetSignalType(tile, track, type == SIGTYPE_COMBO ? SIGTYPE_NORMAL : (SignalType)(type + 1));
+					SetSignalType(tile, track, sigtype == SIGTYPE_COMBO ? SIGTYPE_NORMAL : (SignalType)(sigtype + 1));
 				} else {
 					CycleSignalSide(tile, track);
 				}
Index: src/rail_gui.cpp
===================================================================
--- src/rail_gui.cpp	(Revision 10239)
+++ src/rail_gui.cpp	(Arbeitskopie)
@@ -31,6 +31,8 @@
 static DiagDirection _build_depot_direction;
 static byte _waypoint_count = 1;
 static byte _cur_waypoint_type;
+static SignalVariant _cur_signal_variant;
+static SignalType _cur_signal_type;
 
 static struct {
 	byte orientation;
@@ -44,11 +46,19 @@
 	byte station_count;
 } _railstation;
 
+static const StringID _signal_types_dropdown[] = {
+	STR_SIGNAL_NORMAL,
+	STR_SIGNAL_ENTRANCE,
+	STR_SIGNAL_EXIT,
+	STR_SIGNAL_COMBO,
+	INVALID_STRING_ID,
+};
 
 static void HandleStationPlacement(TileIndex start, TileIndex end);
 static void ShowBuildTrainDepotPicker();
 static void ShowBuildWaypointPicker();
 static void ShowStationBuilder();
+static void ShowSignalBuilder();
 
 void CcPlaySound1E(bool success, TileIndex tile, uint32 p1, uint32 p2)
 {
@@ -180,7 +190,8 @@
 	if (!_remove_button_clicked) {
 		uint32 p1 = track;
 		SB(p1, 3, 1, _ctrl_pressed);
-		SB(p1, 4, 1, _cur_year < _patches.semaphore_build_before);
+		SB(p1, 4, 1, _cur_signal_variant);
+		SB(p1, 5, 3, _cur_signal_type);
 
 		DoCommandP(tile, p1, 0, CcPlaySound1E,
 			CMD_BUILD_SIGNALS | CMD_AUTO | CMD_MSG(STR_1010_CAN_T_BUILD_SIGNALS_HERE));
@@ -300,7 +311,10 @@
 
 static void BuildRailClick_AutoSignals(Window *w)
 {
-	HandlePlacePushButton(w, RTW_BUILD_SIGNALS, ANIMCURSOR_BUILDSIGNALS, VHM_RECT, PlaceRail_AutoSignals);
+	if (_patches.enable_signal_gui) {
+		if (HandlePlacePushButton(w, RTW_BUILD_SIGNALS, ANIMCURSOR_BUILDSIGNALS, VHM_RECT, PlaceRail_AutoSignals))
+			ShowSignalBuilder();
+	} else HandlePlacePushButton(w, RTW_BUILD_SIGNALS, ANIMCURSOR_BUILDSIGNALS, VHM_RECT, PlaceRail_AutoSignals);
 }
 
 static void BuildRailClick_Bridge(Window *w)
@@ -543,6 +557,8 @@
 		DisableWindowWidget(w, RTW_REMOVE);
 		InvalidateWidget(w, RTW_REMOVE);
 
+		w = FindWindowById(WC_BUILD_SIGNALS, 0);
+		if (w != NULL) WP(w,def_d).close = true;
 		w = FindWindowById(WC_BUILD_STATION, 0);
 		if (w != NULL) WP(w,def_d).close = true;
 		w = FindWindowById(WC_BUILD_DEPOT, 0);
@@ -1200,6 +1216,104 @@
 }
 
 
+static void BuildSignalWndProc(Window *w, WindowEvent *e)
+{
+	switch (e->event) {
+	case WE_PAINT: {
+		/* lower the choosen signal variant */
+		LowerWindowWidget(w, 3 + _cur_signal_variant);
+
+		/* dropdown menu: normal / entrance / exit / combo */
+		SetDParam(7, _signal_types_dropdown[_cur_signal_type]);
+		SetDParam(8, _signal_types_dropdown[_cur_signal_type]);
+		DrawWindowWidgets(w);
+
+		/* Draw the string for current signal variant */
+		DrawStringCentered(64, 41, STR_SIGNAL_VARIANT_ELECTRIC + _cur_signal_variant, 0);
+
+		/* Draw the strings for drag density */
+		DrawStringCentered(64, 52, STR_SIGNAL_DENSITY_DESC, 0);
+		SetDParam(0, _patches.drag_signals_density);
+		DrawString( 55, 63, STR_SIGNAL_DENSITY_TILES , 0);
+		break;
+		}
+
+	case WE_CLICK: {
+		switch(e->we.click.widget) {
+			case 3: case 4: /* select signal type */
+				RaiseWindowWidget(w, 3 + _cur_signal_variant);
+				_cur_signal_variant = (SignalVariant)(e->we.click.widget - 3);
+				LowerWindowWidget(w, 3 + _cur_signal_variant);
+				SndPlayFx(SND_15_BEEP);
+				SetWindowDirty(w);
+				break;
+			case 5: /* decrease drag density */
+				if (_patches.drag_signals_density > 1) {
+					_patches.drag_signals_density--;
+					SndPlayFx(SND_15_BEEP);
+					SetWindowDirty(w);
+				};
+				break;
+			case 6: /* increase drag density */
+				if (_patches.drag_signals_density < 20) {
+					_patches.drag_signals_density++;
+					SndPlayFx(SND_15_BEEP);
+					SetWindowDirty(w);
+				};
+				break;
+			case 7: case 8: /* presignal-type dropdown list */
+				ShowDropDownMenu(w, _signal_types_dropdown, _cur_signal_type, 8, 0, 0);
+				break;
+		}
+		break;
+
+	case WE_DROPDOWN_SELECT: /* change presignal type */
+		_cur_signal_type = SignalType(e->we.dropdown.index);
+		SetWindowDirty(w);
+		break;
+	}
+
+	case WE_MOUSELOOP:
+		if (WP(w,def_d).close)
+			DeleteWindow(w);
+		return;
+
+	case WE_DESTROY:
+		if (!WP(w,def_d).close)
+			ResetObjectToPlace();
+		break;
+	}
+}
+
+static const Widget _build_signal_widgets[] = {
+{   WWT_CLOSEBOX, RESIZE_NONE,    7,    0,   10,    0,   13, STR_00C5                 , STR_018B_CLOSE_WINDOW},
+{   WWT_CAPTION,  RESIZE_NONE,    7,   11,  129,    0,   13, STR_SIGNAL_SELECTION     , STR_018C_WINDOW_TITLE_DRAG_THIS},
+{   WWT_PANEL,    RESIZE_NONE,    7,    0,  129,   14,   89, 0x0                      , STR_NULL},
+{   WWT_IMGBTN,   RESIZE_NONE,    7,   38,   59,   16,   37, 0x50B                    , STR_SIGNAL_VARIANT_TIP},
+{   WWT_IMGBTN,   RESIZE_NONE,    7,   70,   91,   16,   37, SPR_SEMA                 , STR_SIGNAL_VARIANT_TIP},
+{   WWT_TEXTBTN,  RESIZE_NONE,    3,   30,   39,   63,   72, STR_6819                 , STR_SIGNAL_DENSITY_TIP},
+{   WWT_TEXTBTN,  RESIZE_NONE,    3,   40,   49,   63,   72, STR_681A                 , STR_SIGNAL_DENSITY_TIP},
+{   WWT_INSET,    RESIZE_NONE,    7,    5,  124,   74,   85, STR_SIGNAL_TYPE_COMBO    , STR_SIGNAL_TYPE_TIP},
+{   WWT_TEXTBTN,  RESIZE_NONE,    7,  113,  123,   75,   84, STR_0225                 , STR_SIGNAL_TYPE_TIP},
+{   WIDGETS_END},
+};
+
+static const WindowDesc _build_signal_desc = {
+	WDP_AUTO, WDP_AUTO, 130, 90,
+	WC_BUILD_SIGNALS, WC_BUILD_TOOLBAR,
+	WDF_STD_TOOLTIPS | WDF_STD_BTN | WDF_DEF_WIDGET,
+	_build_signal_widgets,
+	BuildSignalWndProc
+};
+
+static void ShowSignalBuilder()
+{
+	_cur_signal_variant = (SignalVariant)(_cur_year < _patches.semaphore_build_before);
+	_cur_signal_type = SIGTYPE_NORMAL;
+	AllocateWindowDesc(&_build_signal_desc);
+}
+
+
 void InitializeRailGui()
 {
 	_build_depot_direction = DIAGDIR_NW;
Index: src/saveload.cpp
===================================================================
--- src/saveload.cpp	(Revision 10239)
+++ src/saveload.cpp	(Arbeitskopie)
@@ -29,7 +29,7 @@
 #include <setjmp.h>
 #include <list>
 
-extern const uint16 SAVEGAME_VERSION = 67;
+extern const uint16 SAVEGAME_VERSION = 68;
 uint16 _sl_version;       ///< the major savegame version identifier
 byte   _sl_minor_version; ///< the minor savegame version, DO NOT USE!
 
Index: src/settings.cpp
===================================================================
--- src/settings.cpp	(Revision 10239)
+++ src/settings.cpp	(Arbeitskopie)
@@ -1358,6 +1358,7 @@
 	SDT_BOOL(Patches, longbridges,                   0, 0,  true,        STR_CONFIG_PATCHES_LONGBRIDGES,         NULL),
 	SDT_BOOL(Patches, signal_side,                   N, 0,  true,        STR_CONFIG_PATCHES_SIGNALSIDE,          RedrawScreen),
 	SDT_BOOL(Patches, always_small_airport,          0, 0, false,        STR_CONFIG_PATCHES_SMALL_AIRPORTS,      NULL),
+	SDT_CONDBOOL(Patches, enable_signal_gui,       68, SL_MAX_VERSION, 0, 0, false,  STR_CONFIG_PATCHES_ENABLE_SIGNAL_GUI, NULL),
 	 SDT_VAR(Patches, drag_signals_density,SLE_UINT8,S, 0,  4, 1, 20, 0, STR_CONFIG_PATCHES_DRAG_SIGNALS_DENSITY,NULL),
 	 SDT_VAR(Patches, semaphore_build_before,SLE_INT32, S, NC, 1975, MIN_YEAR, MAX_YEAR, 1, STR_CONFIG_PATCHES_SEMAPHORE_BUILD_BEFORE_DATE, NULL),
 	SDT_CONDVAR(Patches, town_layout, SLE_UINT8, 59, SL_MAX_VERSION, 0, MS, TL_ORIGINAL, TL_NO_ROADS, NUM_TLS - 1, 1, STR_CONFIG_PATCHES_TOWN_LAYOUT, CheckTownLayout),
Index: src/settings_gui.cpp
===================================================================
--- src/settings_gui.cpp	(Revision 10239)
+++ src/settings_gui.cpp	(Arbeitskopie)
@@ -661,6 +661,7 @@
 	"longbridges",
 	"signal_side",
 	"always_small_airport",
+	"enable_signal_gui",
 	"drag_signals_density",
 	"oil_refinery_limit",
 	"semaphore_build_before",
Index: src/table/sprites.h
===================================================================
--- src/table/sprites.h	(Revision 10239)
+++ src/table/sprites.h	(Arbeitskopie)
@@ -56,6 +56,8 @@
 	SPR_2CCMAP_BASE   = SPR_ELRAIL_BASE + 53,
 	SPR_OPENTTD_BASE  = SPR_2CCMAP_BASE + 256,
 
+	SPR_SEMA          = SPR_OPENTTD_BASE + 21,   // semaphore icon for the signal GUI
+
 	SPR_BLOT = SPR_OPENTTD_BASE + 29, // colored circle (mainly used as vehicle profit marker and for sever compatibility)
 
 	SPR_PIN_UP        = SPR_OPENTTD_BASE + 55,   // pin icon
Index: src/variables.h
===================================================================
--- src/variables.h	(Revision 10239)
+++ src/variables.h	(Arbeitskopie)
@@ -187,6 +187,7 @@
 	uint8 map_x;                        // Size of map
 	uint8 map_y;
 
+	bool enable_signal_gui;             // Show the signal GUI when the signal button is pressed
 	byte drag_signals_density;          // many signals density
 	Year semaphore_build_before;        // Build semaphore signals automatically before this year
 	bool ainew_active;                  // Is the new AI active?
