Index: src/network/network_content_gui.cpp
===================================================================
--- src/network/network_content_gui.cpp	(revision 15372)
+++ src/network/network_content_gui.cpp	(working copy)
@@ -279,15 +279,18 @@
 	{
 		if (!this->content.Filter(this->edit_str_buf)) return;
 
-		this->selected = NULL;
-		this->list_pos = 0;
-
+		/* update list position */
 		for (ConstContentIterator iter = this->content.Begin(); iter != this->content.End(); iter++) {
 			if (*iter == this->selected) {
 				this->list_pos = iter - this->content.Begin();
-				break;
+				this->ScrollToSelected();
+				return;
 			}
 		}
+
+		/* previously selected item not in list anymore */
+		this->selected = NULL;
+		this->list_pos = 0;
 	}
 
 	/** Make sure that the currently selected content info is within the visible part of the matrix */
Index: src/sortlist_type.h
===================================================================
--- src/sortlist_type.h	(revision 15372)
+++ src/sortlist_type.h	(working copy)
@@ -321,16 +321,18 @@
 		/* Do not filter if the filter bit is not set */
 		if (!HASBITS(this->flags, VL_FILTER)) return false;
 
+		bool changed = false;
 		for (uint iter = 0; iter < this->items;) {
 			T *item = &this->data[iter];
 			if (!decide(item, filter_data)) {
 				this->Erase(item);
+				changed = true;
 			} else {
 				iter++;
 			}
 		}
 
-		return true;
+		return changed;
 	}
 
 	/**
