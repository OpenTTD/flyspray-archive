Updated to revision 21666.
Capella:OpenTTD-svn msikma$ ./configure --without-lzma
checking awk... awk
detecting OS... OSX
checking build system type... powerpc-apple-darwin9
checking host system type... powerpc-apple-darwin9
checking universal build... no
checking build cc... gcc
checking host cc... gcc
checking build c++... g++
checking host c++... g++
checking strip... disabled
checking builtin depend... yes
checking makedepend... disabled
detecting cpu-type... 32 bits
checking static... no
checking unicode... no
using debug level... no
using desync debug level... no
using link time optimization... no
checking OSX sysroot... no (use system default)
checking Allegro... OSX, skipping
checking SDL... OSX, skipping
checking COCOA... found
checking whether to enable the Quartz window subdriver... yes
checking Quickdraw window subdriver... found
checking GDI video driver... not Windows, skipping
checking dedicated... not selected
checking console application... not Windows, skipping
checking network... found
checking ai... found
checking translator... no
checking assert... enabled
checking zlib... found
checking liblzma... disabled
WARNING: lzma was not detected or disabled
WARNING: OpenTTD doesn't require lzma, but it does mean that many features
WARNING: (like loading most savegames/scenarios and joining most servers)
WARNING: will be disabled.
WARNING: We strongly suggest you to install liblzma.
configure: error: no liblzma detected
checking lzo2... found
checking libpng... found
checking libfreetype... found
checking libfontconfig... OSX, skipping
checking libicu... not found
checking psp-config... not PSP, skipping
checking libtimidity... not found
checking direct-music... not Windows, skipping
checking sort... sort
checking endianess... PREPROCESSOR
suppress language errors... no
checking stripping... skipped
checking distcc... no (only used when forced)
checking ccache... no (only used when forced)
detecting ppc970 (G5)... no
checking revision... svn detection
checking iconv... found
checking if iconv has non-const inbuf... yes
checking whether to link to iconv... yes
personal home directory... Documents/OpenTTD
shared data directory... /Library/Application\ Support/OpenTTD
installation directory... /
icon theme directory... none
manual page directory... share/man/man6
menu item directory... none
using CFLAGS...  -O2 -fomit-frame-pointer  -Wall -Wno-multichar -Wsign-compare -Wundef -Wwrite-strings -Wpointer-arith -W -Wno-unused-parameter -Wformat=2 -Wredundant-decls -Winit-self -fno-strict-aliasing -Wcast-qual -DOSX -fno-expensive-optimizations -isystem/opt/local/include -mmacosx-version-min=10.3 -DUNIX -DWITH_COCOA -DENABLE_COCOA_QUARTZ -DENABLE_COCOA_QUICKDRAW -DWITH_ZLIB -DWITH_LZO -I/Volumes/Snipe/Games/OpenTTD-svn/src/3rdparty/squirrel/include -DENABLE_AI -DWITH_PNG  -I/usr/X11/include  -DWITH_FREETYPE -I/usr/X11/include/freetype2 -I/usr/X11/include  -DWITH_ICONV -DHAVE_NON_CONST_ICONV -DENABLE_NETWORK -DWITH_PERSONAL_DIR -DPERSONAL_DIR=\"Documents/OpenTTD\" -DWITH_SHARED_DIR -DSHARED_DIR=\"/Library/Application\ Support/OpenTTD\" -DGLOBAL_DATA_DIR=\"/usr/local/share/games/openttd\"
using CXXFLAGS... 
using LDFLAGS... -lstdc++ -lc -framework QuickTime -F/System/Library/Frameworks -framework Cocoa -framework Carbon -framework AudioUnit -framework AudioToolbox -lz -llzo2 -L/usr/X11/lib -Wl,-rpath,/usr/X11/lib -lpng12 -lz -lm  -L/usr/X11/lib -lfreetype -lz -Wl,-framework,CoreServices -Wl,-framework,ApplicationServices  -liconv   -framework Cocoa
Generating Makefile...
Generating lang/Makefile...
Generating grf/Makefile...
Generating objs/Makefile...
Capella:OpenTTD-svn msikma$ make
[LANG] Compiling and Linking endian_check
[LANG] Testing endianness for host
[LANG] Compiling core/alloc_func.cpp
[LANG] Compiling string.cpp
[LANG] Compiling strgen/strgen.cpp
[LANG] Compiling and Linking strgen
[LANG] Generating table/strings.h
[LANG] Compiling language afrikaans
[LANG] Compiling language arabic_egypt
[LANG] Compiling language belarusian
[LANG] Compiling language brazilian_portuguese
[LANG] Compiling language bulgarian
[LANG] Compiling language catalan
[LANG] Compiling language croatian
[LANG] Compiling language czech
[LANG] Compiling language danish
[LANG] Compiling language dutch
[LANG] Compiling language english
[LANG] Compiling language english_US
[LANG] Compiling language esperanto
[LANG] Compiling language estonian
[LANG] Compiling language finnish
[LANG] Compiling language french
[LANG] Compiling language galician
[LANG] Compiling language german
[LANG] Compiling language greek
[LANG] Compiling language hebrew
[LANG] Compiling language hungarian
[LANG] Compiling language icelandic
[LANG] Compiling language indonesian
[LANG] Compiling language irish
[LANG] Compiling language italian
[LANG] Compiling language japanese
[LANG] Compiling language korean
[LANG] Compiling language latvian
[LANG] Compiling language lithuanian
[LANG] Compiling language luxembourgish
[LANG] Compiling language malay
[LANG] Compiling language norwegian_bokmal
[LANG] Compiling language norwegian_nynorsk
[LANG] Compiling language polish
[LANG] Compiling language portuguese
[LANG] Compiling language romanian
[LANG] Compiling language russian
[LANG] Compiling language serbian
[LANG] Compiling language simplified_chinese
[LANG] Compiling language slovak
[LANG] Compiling language slovenian
[LANG] Compiling language spanish
[LANG] Compiling language swedish
[LANG] Compiling language traditional_chinese
[LANG] Compiling language turkish
[LANG] Compiling language ukrainian
[LANG] Compiling language vietnamese
[LANG] Compiling language welsh
make[1]: Nothing to be done for `all'.
[SRC] Compiling and Linking endian_check
[SRC] Testing endianness for target
[SRC] Compiling and linking depend
[SRC] DEP CHECK (all files)
[SRC] Compiling 3rdparty/md5/md5.cpp
[SRC] Compiling 3rdparty/squirrel/sqstdlib/sqstdaux.cpp
[SRC] Compiling 3rdparty/squirrel/sqstdlib/sqstdmath.cpp
[SRC] Compiling 3rdparty/squirrel/squirrel/sqapi.cpp
[SRC] Compiling 3rdparty/squirrel/squirrel/sqbaselib.cpp
[SRC] Compiling 3rdparty/squirrel/squirrel/sqclass.cpp
[SRC] Compiling 3rdparty/squirrel/squirrel/sqcompiler.cpp
[SRC] Compiling 3rdparty/squirrel/squirrel/sqdebug.cpp
[SRC] Compiling 3rdparty/squirrel/squirrel/sqfuncstate.cpp
[SRC] Compiling 3rdparty/squirrel/squirrel/sqlexer.cpp
[SRC] Compiling 3rdparty/squirrel/squirrel/sqmem.cpp
[SRC] Compiling 3rdparty/squirrel/squirrel/sqobject.cpp
[SRC] Compiling 3rdparty/squirrel/squirrel/sqstate.cpp
[SRC] Compiling 3rdparty/squirrel/squirrel/sqtable.cpp
[SRC] Compiling 3rdparty/squirrel/squirrel/sqvm.cpp
[SRC] Compiling ai/ai_config.cpp
[SRC] Compiling ai/ai_core.cpp
[SRC] Compiling ai/ai_gui.cpp
[SRC] Compiling ai/ai_info.cpp
[SRC] Compiling ai/ai_info_dummy.cpp
[SRC] Compiling ai/ai_instance.cpp
[SRC] Compiling ai/ai_scanner.cpp
[SRC] Compiling ai/api/ai_accounting.cpp
[SRC] Compiling ai/api/ai_airport.cpp
[SRC] Compiling ai/api/ai_base.cpp
[SRC] Compiling ai/api/ai_basestation.cpp
[SRC] Compiling ai/api/ai_bridge.cpp
[SRC] Compiling ai/api/ai_bridgelist.cpp
[SRC] Compiling ai/api/ai_cargo.cpp
[SRC] Compiling ai/api/ai_cargolist.cpp
[SRC] Compiling ai/api/ai_company.cpp
[SRC] Compiling ai/api/ai_controller.cpp
[SRC] Compiling ai/api/ai_date.cpp
[SRC] Compiling ai/api/ai_depotlist.cpp
[SRC] Compiling ai/api/ai_engine.cpp
[SRC] Compiling ai/api/ai_enginelist.cpp
[SRC] Compiling ai/api/ai_error.cpp
[SRC] Compiling ai/api/ai_event.cpp
[SRC] Compiling ai/api/ai_event_types.cpp
[SRC] Compiling ai/api/ai_execmode.cpp
[SRC] Compiling ai/api/ai_gamesettings.cpp
[SRC] Compiling ai/api/ai_group.cpp
[SRC] Compiling ai/api/ai_grouplist.cpp
[SRC] Compiling ai/api/ai_industry.cpp
[SRC] Compiling ai/api/ai_industrylist.cpp
[SRC] Compiling ai/api/ai_industrytype.cpp
[SRC] Compiling ai/api/ai_industrytypelist.cpp
[SRC] Compiling ai/api/ai_list.cpp
[SRC] Compiling ai/api/ai_log.cpp
[SRC] Compiling ai/api/ai_map.cpp
[SRC] Compiling ai/api/ai_marine.cpp
[SRC] Compiling ai/api/ai_object.cpp
[SRC] Compiling ai/api/ai_order.cpp
[SRC] Compiling ai/api/ai_rail.cpp
[SRC] Compiling ai/api/ai_railtypelist.cpp
[SRC] Compiling ai/api/ai_road.cpp
[SRC] Compiling ai/api/ai_sign.cpp
[SRC] Compiling ai/api/ai_signlist.cpp
[SRC] Compiling ai/api/ai_station.cpp
[SRC] Compiling ai/api/ai_stationlist.cpp
[SRC] Compiling ai/api/ai_subsidy.cpp
[SRC] Compiling ai/api/ai_subsidylist.cpp
[SRC] Compiling ai/api/ai_testmode.cpp
[SRC] Compiling ai/api/ai_tile.cpp
[SRC] Compiling ai/api/ai_tilelist.cpp
[SRC] Compiling ai/api/ai_town.cpp
[SRC] Compiling ai/api/ai_townlist.cpp
[SRC] Compiling ai/api/ai_tunnel.cpp
[SRC] Compiling ai/api/ai_vehicle.cpp
[SRC] Compiling ai/api/ai_vehiclelist.cpp
[SRC] Compiling ai/api/ai_waypoint.cpp
[SRC] Compiling ai/api/ai_waypointlist.cpp
[SRC] Compiling aircraft_cmd.cpp
[SRC] Compiling aircraft_gui.cpp
[SRC] Compiling airport.cpp
[SRC] Compiling airport_gui.cpp
[SRC] Compiling animated_tile.cpp
[SRC] Compiling articulated_vehicles.cpp
[SRC] Compiling autoreplace.cpp
[SRC] Compiling autoreplace_cmd.cpp
[SRC] Compiling autoreplace_gui.cpp
[SRC] Compiling blitter/32bpp_anim.cpp
[SRC] Compiling blitter/32bpp_base.cpp
[SRC] Compiling blitter/32bpp_optimized.cpp
[SRC] Compiling blitter/32bpp_simple.cpp
[SRC] Compiling blitter/8bpp_base.cpp
[SRC] Compiling blitter/8bpp_debug.cpp
[SRC] Compiling blitter/8bpp_optimized.cpp
[SRC] Compiling blitter/8bpp_simple.cpp
[SRC] Compiling blitter/null.cpp
[SRC] Compiling bmp.cpp
[SRC] Compiling bridge_gui.cpp
[SRC] Compiling bridge_map.cpp
[SRC] Compiling build_vehicle_gui.cpp
[SRC] Compiling cargopacket.cpp
[SRC] Compiling cargotype.cpp
[SRC] Compiling cheat.cpp
[SRC] Compiling cheat_gui.cpp
[SRC] Compiling clear_cmd.cpp
[SRC] Compiling command.cpp
[SRC] Compiling company_cmd.cpp
[SRC] Compiling company_gui.cpp
[SRC] Compiling console.cpp
[SRC] Compiling console_cmds.cpp
[SRC] Compiling console_gui.cpp
[SRC] Compiling core/alloc_func.cpp
[SRC] Compiling core/bitmath_func.cpp
[SRC] Compiling core/geometry_func.cpp
[SRC] Compiling core/math_func.cpp
[SRC] Compiling core/random_func.cpp
[SRC] Compiling crashlog.cpp
[SRC] Compiling currency.cpp
[SRC] Compiling date.cpp
[SRC] Compiling date_gui.cpp
[SRC] Compiling debug.cpp
[SRC] Compiling dedicated.cpp
[SRC] Compiling depot.cpp
[SRC] Compiling depot_cmd.cpp
[SRC] Compiling depot_gui.cpp
[SRC] Compiling disaster_cmd.cpp
[SRC] Compiling dock_gui.cpp
[SRC] Compiling driver.cpp
[SRC] Compiling economy.cpp
[SRC] Compiling effectvehicle.cpp
[SRC] Compiling elrail.cpp
[SRC] Compiling engine.cpp
[SRC] Compiling engine_gui.cpp
[SRC] Compiling fileio.cpp
[SRC] Compiling fios.cpp
[SRC] Compiling fios_gui.cpp
[SRC] Compiling fontcache.cpp
[SRC] Compiling gamelog.cpp
[SRC] Compiling genworld.cpp
[SRC] Compiling genworld_gui.cpp
[SRC] Compiling gfx.cpp
[SRC] Compiling gfxinit.cpp
[SRC] Compiling graph_gui.cpp
[SRC] Compiling ground_vehicle.cpp
[SRC] Compiling group_cmd.cpp
[SRC] Compiling group_gui.cpp
[address=491cbe08 pc=001d03dc]
/Volumes/Snipe/Games/OpenTTD-svn/src/group_gui.cpp: In function ‘void __static_initialization_and_destruction_0(int, int)’:
/Volumes/Snipe/Games/OpenTTD-svn/src/group_gui.cpp:711: internal compiler error: Segmentation Fault
Please submit a full bug report,
with preprocessed source if appropriate.
See <URL:http://developer.apple.com/bugreporter> for instructions.
make[1]: *** [group_gui.o] Error 1
make: *** [all] Error 1
Capella:OpenTTD-svn msikma$ 
