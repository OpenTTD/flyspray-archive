diff -r e16bdc0054ce src/gfx_layout.cpp
--- a/src/gfx_layout.cpp	Sat Apr 02 02:55:17 2016 +0300
+++ b/src/gfx_layout.cpp	Tue May 31 01:56:14 2016 +0300
@@ -596,6 +596,10 @@
 			state.SetColour((TextColour)(c - SCC_BLUE));
 		} else if (c == SCC_PREVIOUS_COLOUR) { // Revert to the previous colour.
 			state.SetPreviousColour();
+		} else if (c == SCC_NORMALFONT) {
+			state.SetFontSize(FS_NORMAL);
+		} else if (c == SCC_MONOFONT) {
+			state.SetFontSize(FS_MONO);
 		} else if (c == SCC_TINYFONT) {
 			state.SetFontSize(FS_SMALL);
 		} else if (c == SCC_BIGFONT) {
diff -r e16bdc0054ce src/rev.cpp
--- a/src/strings.cpp	Sat Apr 02 02:55:17 2016 +0300
+++ b/src/strings.cpp	Tue May 31 01:56:14 2016 +0300
@@ -2016,7 +2016,12 @@
 		FontSize size = this->DefaultSize();
 		if (str != NULL) *str = text;
 		for (WChar c = Utf8Consume(&text); c != '\0'; c = Utf8Consume(&text)) {
-			if (c == SCC_TINYFONT) {
+
+			if (c == SCC_NORMALFONT) {
+				size = FS_NORMAL;
+			} else if (c == SCC_MONOFONT) {
+				size = FS_MONO;
+			} else if (c == SCC_TINYFONT) {
 				size = FS_SMALL;
 			} else if (c == SCC_BIGFONT) {
 				size = FS_LARGE;
diff -r e16bdc0054ce src/table/control_codes.h
--- a/src/table/control_codes.h	Sat Apr 02 02:55:17 2016 +0300
+++ b/src/table/control_codes.h	Tue May 31 01:56:14 2016 +0300
@@ -27,8 +27,10 @@
 	SCC_ENCODED = SCC_CONTROL_START,

 	/* Display control codes */
-	SCC_TINYFONT,  ///< Switch to small font
-	SCC_BIGFONT,   ///< Switch to large font
+	SCC_NORMALFONT, ///< Switch to normal size font
+	SCC_MONOFONT,   ///< Switch to monospaced font
+	SCC_TINYFONT,   ///< Switch to small font
+	SCC_BIGFONT,    ///< Switch to large font

 	/* Formatting control codes */
 	SCC_REVISION,
diff -r e16bdc0054ce src/table/strgen_tables.h
--- a/src/table/strgen_tables.h	Sat Apr 02 02:55:17 2016 +0300
+++ b/src/table/strgen_tables.h	Tue May 31 01:56:14 2016 +0300
@@ -37,6 +37,8 @@

 static const CmdStruct _cmd_structs[] = {
 	/* Font size */
+	{"NORMAL_FONT",       EmitSingleChar, SCC_NORMALFONT,         0, -1, C_NONE},
+	{"MONO_FONT",         EmitSingleChar, SCC_MONOFONT,           0, -1, C_NONE},
 	{"TINY_FONT",         EmitSingleChar, SCC_TINYFONT,           0, -1, C_NONE},
 	{"BIG_FONT",          EmitSingleChar, SCC_BIGFONT,            0, -1, C_NONE},
