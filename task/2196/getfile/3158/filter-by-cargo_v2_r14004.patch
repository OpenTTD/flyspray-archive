diff -r 28606a486c52 src/build_vehicle_gui.cpp
--- src/build_vehicle_gui.cpp	Wed Aug 06 07:10:40 2008 +0000
+++ src/build_vehicle_gui.cpp	Wed Aug 06 23:27:06 2008 +0800
@@ -39,27 +39,40 @@
 	BUILD_VEHICLE_WIDGET_CAPTION,
 	BUILD_VEHICLE_WIDGET_SORT_ASSENDING_DESCENDING,
 	BUILD_VEHICLE_WIDGET_SORT_DROPDOWN,
+	BUILD_VEHICLE_WIDGET_PAN_LEFT,
+	BUILD_VEHICLE_WIDGET_FILTER_BY_CARGO_LABEL,
+	BUILD_VEHICLE_WIDGET_NOT_TAKING_CARGO,
+	BUILD_VEHICLE_WIDGET_TAKING_ANY_CARGO,
+	BUILD_VEHICLE_WIDGET_PAN_RIGHT,
 	BUILD_VEHICLE_WIDGET_LIST,
 	BUILD_VEHICLE_WIDGET_SCROLLBAR,
 	BUILD_VEHICLE_WIDGET_PANEL,
 	BUILD_VEHICLE_WIDGET_BUILD,
 	BUILD_VEHICLE_WIDGET_RENAME,
 	BUILD_VEHICLE_WIDGET_RESIZE,
-	BUILD_VEHICLE_WIDGET_END
+	BUILD_VEHICLE_WIDGET_CARGO_START
 };
 
 static const Widget _build_vehicle_widgets[] = {
 	{   WWT_CLOSEBOX,   RESIZE_NONE,  COLOUR_GREY,     0,    10,     0,    13, STR_00C5,                STR_018B_CLOSE_WINDOW },
-	{    WWT_CAPTION,  RESIZE_RIGHT,  COLOUR_GREY,    11,   239,     0,    13, 0x0,                     STR_018C_WINDOW_TITLE_DRAG_THIS },
+	{    WWT_CAPTION,  RESIZE_RIGHT,  COLOUR_GREY,    11,   264,     0,    13, 0x0,                     STR_018C_WINDOW_TITLE_DRAG_THIS },
 	{ WWT_PUSHTXTBTN,   RESIZE_NONE,  COLOUR_GREY,     0,    80,    14,    25, STR_SORT_BY,             STR_SORT_ORDER_TIP},
-	{   WWT_DROPDOWN,  RESIZE_RIGHT,  COLOUR_GREY,    81,   239,    14,    25, 0x0,                     STR_SORT_CRITERIA_TIP},
-	{     WWT_MATRIX,     RESIZE_RB,  COLOUR_GREY,     0,   227,    26,    39, 0x101,                   STR_NULL },
-	{  WWT_SCROLLBAR,    RESIZE_LRB,  COLOUR_GREY,   228,   239,    26,    39, 0x0,                     STR_0190_SCROLL_BAR_SCROLLS_LIST },
-	{      WWT_PANEL,    RESIZE_RTB,  COLOUR_GREY,     0,   239,    40,   161, 0x0,                     STR_NULL },
+	{   WWT_DROPDOWN,  RESIZE_RIGHT,  COLOUR_GREY,    81,   264,    14,    25, 0x0,                     STR_SORT_CRITERIA_TIP},
+	
+	{      WWT_PANEL,   RESIZE_NONE,  COLOUR_GREY,     0,    80,    26,    36, 0x0,                     STR_NULL},
+	{      WWT_LABEL,   RESIZE_NONE,  COLOUR_GREY,     2,    78,    30,    36, STR_FILTER_BY_CARGO,     STR_NULL},
+	{      WWT_PANEL,   RESIZE_NONE,  COLOUR_GREY,    81,    94,    26,    36, 0x0,                     STR_NOT_TAKING_CARGO_TIP},         // BUILD_VEHICLE_WIDGET_NO_CARGO_WAITING
+	{      WWT_PANEL,   RESIZE_NONE,  COLOUR_GREY,    95,   108,    26,    36, 0x0,                     STR_TAKING_ANY_CARGO_TIP},         // BUILD_VEHICLE_WIDGET_CARGO_ALL
+	{      WWT_PANEL,  RESIZE_RIGHT,  COLOUR_GREY,   109,   264,    26,    36, 0x0,                     STR_NULL},                         // BUILD_VEHICLE_WIDGET_PAN_RIGHT
 
-	{ WWT_PUSHTXTBTN,     RESIZE_TB,  COLOUR_GREY,     0,   114,   162,   173, 0x0,                     STR_NULL },
-	{ WWT_PUSHTXTBTN,    RESIZE_RTB,  COLOUR_GREY,   115,   227,   162,   173, 0x0,                     STR_NULL },
-	{  WWT_RESIZEBOX,   RESIZE_LRTB,  COLOUR_GREY,   228,   239,   162,   173, 0x0,                     STR_RESIZE_BUTTON },
+	{     WWT_MATRIX,     RESIZE_RB,  COLOUR_GREY,     0,   252,    37,    50, 0x101,                   STR_NULL },
+	{  WWT_SCROLLBAR,    RESIZE_LRB,  COLOUR_GREY,   253,   264,    37,    50, 0x0,                     STR_0190_SCROLL_BAR_SCROLLS_LIST },
+	{      WWT_PANEL,    RESIZE_RTB,  COLOUR_GREY,     0,   264,    51,   172, 0x0,                     STR_NULL },
+
+	{ WWT_PUSHTXTBTN,     RESIZE_TB,  COLOUR_GREY,     0,   114,   173,   184, 0x0,                     STR_NULL },
+	{ WWT_PUSHTXTBTN,    RESIZE_RTB,  COLOUR_GREY,   115,   252,   173,   184, 0x0,                     STR_NULL },
+	{  WWT_RESIZEBOX,   RESIZE_LRTB,  COLOUR_GREY,   253,   264,   173,   184, 0x0,                     STR_RESIZE_BUTTON },
+
 	{   WIDGETS_END},
 };
 
@@ -802,15 +815,104 @@
 	EngineID rename_engine;
 	GUIEngineList eng_list;
 
+	bool include_empty;
+
+	static bool include_empty_train;
+	static bool include_empty_road;
+	static bool include_empty_ship;
+	static bool include_empty_aircraft;
+
+	uint32 cargo_filter;
+
+	static uint32 cargo_filter_train;
+	static uint32 cargo_filter_road;
+	static uint32 cargo_filter_ship;
+	static uint32 cargo_filter_aircraft;
+
+	static const uint32 cargo_filter_max;
+
 	BuildVehicleWindow(const WindowDesc *desc, TileIndex tile, VehicleType type) : Window(desc, tile == 0 ? (int)type : tile)
 	{
 		this->vehicle_type = type;
+
+		switch (this->vehicle_type) {
+			default: NOT_REACHED();
+			case VEH_TRAIN:
+				this->cargo_filter = this->cargo_filter_train;
+				this->include_empty = this->include_empty_train;
+				break;
+
+			case VEH_ROAD:
+				this->cargo_filter = this->cargo_filter_road;
+				this->include_empty = this->include_empty_road;
+				break;
+
+			case VEH_SHIP:
+				this->cargo_filter = this->cargo_filter_ship;
+				this->include_empty = this->include_empty_ship;
+				break;
+
+			case VEH_AIRCRAFT:
+				this->cargo_filter = this->cargo_filter_aircraft;
+				this->include_empty = this->include_empty_aircraft;
+				break;
+		}
+
+		this->SetWidgetLoweredState(BUILD_VEHICLE_WIDGET_NOT_TAKING_CARGO, this->include_empty);
+		this->SetWidgetLoweredState(BUILD_VEHICLE_WIDGET_TAKING_ANY_CARGO, this->cargo_filter == _cargo_mask && this->include_empty);
+
 		int vlh = GetVehicleListHeight(this->vehicle_type);
 
 		ResizeWindow(this, 0, vlh - 14);
 		this->resize.step_height = vlh;
 		this->vscroll.cap = 1;
 		this->widget[BUILD_VEHICLE_WIDGET_LIST].data = 0x101;
+
+		/* Add cargo filter buttons */
+		/* hacked from station_gui.cpp; how to share the same codebase? */
+
+		uint num_active = 0;
+		for (CargoID c = 0; c < NUM_CARGO; c++) {
+			if (GetCargo(c)->IsValid()) num_active++;
+		}
+
+		this->widget_count += num_active;
+		this->widget = ReallocT(this->widget, this->widget_count + 1);
+		this->widget[this->widget_count].type = WWT_LAST;
+
+		uint i = 0;
+		for (CargoID c = 0; c < NUM_CARGO; c++) {
+			if (!GetCargo(c)->IsValid()) continue;
+
+			Widget *wi = &this->widget[BUILD_VEHICLE_WIDGET_CARGO_START + i];
+			wi->type     = WWT_PANEL;
+			wi->display_flags = RESIZE_NONE;
+			wi->color    = 14;
+			wi->left     = 81 + i * 14;
+			wi->right    = wi->left + 13;
+			wi->top      = 26;
+			wi->bottom   = 36;
+			wi->data     = 0;
+			wi->tooltips = STR_USE_CTRL_TO_SELECT_MORE;
+
+			if (HasBit(cargo_filter, c)) this->LowerWidget(BUILD_VEHICLE_WIDGET_CARGO_START + i);
+			i++;
+		}
+
+		this->widget[BUILD_VEHICLE_WIDGET_NOT_TAKING_CARGO].left  += num_active * 14;
+		this->widget[BUILD_VEHICLE_WIDGET_NOT_TAKING_CARGO].right += num_active * 14;
+		this->widget[BUILD_VEHICLE_WIDGET_TAKING_ANY_CARGO].left  += num_active * 14;
+		this->widget[BUILD_VEHICLE_WIDGET_TAKING_ANY_CARGO].right += num_active * 14;
+		this->widget[BUILD_VEHICLE_WIDGET_PAN_RIGHT].left         += num_active * 14;
+
+		if (num_active > 11) {
+			/* Resize and fix the minimum width, if necessary */
+			ResizeWindow(this, (num_active - 11) * 14, 0);
+		}
+
+		if (cargo_filter == this->cargo_filter_max) cargo_filter = _cargo_mask;
+
+		/* end of cargo filter buttons */
 
 		this->resize.width  = this->width;
 		this->resize.height = this->height;
@@ -924,6 +1026,21 @@
 			if (this->filter.railtype != RAILTYPE_END && !HasPowerOnRail(rvi->railtype, this->filter.railtype)) continue;
 			if (!IsEngineBuildable(eid, VEH_TRAIN, _local_player)) continue;
 
+			uint32 cmask = EngInfo(eid)->refit_mask;
+
+			bool display = (HasBit(this->cargo_filter, rvi->cargo_type) && rvi->capacity > 0) || (this->include_empty && rvi->capacity == 0);
+
+			if (!display) {
+				for (CargoID j = 0; j < NUM_CARGO; j++) {
+					if (HasBit(cmask, j) && HasBit(this->cargo_filter, j)) {
+						display = true;
+						break;
+					}
+				}
+			}
+
+			if (!display) continue;
+
 			*this->eng_list.Append() = eid;
 
 			if (rvi->railveh_type != RAILVEH_WAGON) {
@@ -961,6 +1078,24 @@
 			EngineID eid = e->index;
 			if (!IsEngineBuildable(eid, VEH_ROAD, _local_player)) continue;
 			if (!HasBit(this->filter.roadtypes, HasBit(EngInfo(eid)->misc_flags, EF_ROAD_TRAM) ? ROADTYPE_TRAM : ROADTYPE_ROAD)) continue;
+
+			const RoadVehicleInfo *rvi = RoadVehInfo(eid);
+			uint32 cmask = EngInfo(eid)->refit_mask;
+
+			// assume there are no road vehicles taking no cargo
+			bool display = HasBit(this->cargo_filter, rvi->cargo_type);
+
+			if (!display) {
+				for (CargoID j = 0; j < NUM_CARGO; j++) {
+					if (HasBit(cmask, j) && HasBit(this->cargo_filter, j)) {
+						display = true;
+						break;
+					}
+				}
+			}
+
+			if (!display) continue;
+
 			*this->eng_list.Append() = eid;
 
 			if (eid == this->sel_engine) sel_id = eid;
@@ -978,6 +1113,24 @@
 		FOR_ALL_ENGINES_OF_TYPE(e, VEH_SHIP) {
 			EngineID eid = e->index;
 			if (!IsEngineBuildable(eid, VEH_SHIP, _local_player)) continue;
+
+			const ShipVehicleInfo *svi = ShipVehInfo(eid);
+			uint32 cmask = EngInfo(eid)->refit_mask;
+
+			// assume there are no ships taking no cargo
+			bool display = HasBit(this->cargo_filter, svi->cargo_type);
+
+			if (!display) {
+				for (CargoID j = 0; j < NUM_CARGO; j++) {
+					if (HasBit(cmask, j) && HasBit(this->cargo_filter, j)) {
+						display = true;
+						break;
+					}
+				}
+			}
+
+			if (!display) continue;
+
 			*this->eng_list.Append() = eid;
 
 			if (eid == this->sel_engine) sel_id = eid;
@@ -1002,6 +1155,23 @@
 			if (!IsEngineBuildable(eid, VEH_AIRCRAFT, _local_player)) continue;
 			/* First VEH_END window_numbers are fake to allow a window open for all different types at once */
 			if (!this->listview_mode && !CanAircraftUseStation(eid, this->window_number)) continue;
+
+			const AircraftVehicleInfo *avi = AircraftVehInfo(eid);
+			uint32 cmask = EngInfo(eid)->refit_mask;
+
+			// assume there are no ships taking no cargo
+			bool display = (HasBit(this->cargo_filter, CT_PASSENGERS) && avi->passenger_capacity > 0) || (HasBit(this->cargo_filter, CT_MAIL) && avi->mail_capacity > 0);
+
+			if (!display) {
+				for (CargoID j = 0; j < NUM_CARGO; j++) {
+					if (HasBit(cmask, j) && HasBit(this->cargo_filter, j)) {
+						display = true;
+						break;
+					}
+				}
+			}
+
+			if (!display) continue;
 
 			*this->eng_list.Append() = eid;
 			if (eid == this->sel_engine) sel_id = eid;
@@ -1030,6 +1200,34 @@
 		}
 		_internal_sort_order = this->descending_sort_order;
 		EngList_Sort(&this->eng_list, _sorter[this->vehicle_type][this->sort_criteria]);
+	}
+
+	void SaveDefaultCargoFilter()
+	{
+		switch (this->vehicle_type) {
+			default:
+				NOT_REACHED();
+
+			case VEH_TRAIN:
+				this->cargo_filter_train  = this->cargo_filter;
+				this->include_empty_train = this->include_empty;
+				break;
+
+			case VEH_ROAD:
+				this->cargo_filter_road  = this->cargo_filter;
+				this->include_empty_road = this->include_empty;
+				break;
+
+			case VEH_SHIP:
+				this->cargo_filter_ship  = this->cargo_filter;
+				this->include_empty_ship = this->include_empty;
+				break;
+
+			case VEH_AIRCRAFT:
+				this->cargo_filter_aircraft  = this->cargo_filter;
+				this->include_empty_aircraft = this->include_empty;
+				break;
+		}
 	}
 
 	void OnClick(Point pt, int widget)
@@ -1095,6 +1293,78 @@
 				}
 				break;
 			}
+
+			case BUILD_VEHICLE_WIDGET_TAKING_ANY_CARGO: {
+				uint i = 0;
+				for (CargoID c = 0; c < NUM_CARGO; c++) {
+					if (!GetCargo(c)->IsValid()) continue;
+					this->LowerWidget(i + BUILD_VEHICLE_WIDGET_CARGO_START);
+					i++;
+				}
+				this->LowerWidget(BUILD_VEHICLE_WIDGET_NOT_TAKING_CARGO);
+				this->LowerWidget(BUILD_VEHICLE_WIDGET_TAKING_ANY_CARGO);
+
+				this->cargo_filter = _cargo_mask;
+				this->include_empty = true;
+				this->regenerate_list = true;
+				this->SaveDefaultCargoFilter();
+				this->SetDirty();
+				break;
+			}
+
+			case BUILD_VEHICLE_WIDGET_NOT_TAKING_CARGO: {
+				if (_ctrl_pressed) {
+					this->include_empty = !this->include_empty;
+					this->ToggleWidgetLoweredState(BUILD_VEHICLE_WIDGET_NOT_TAKING_CARGO);
+				} else {
+					for (uint i = BUILD_VEHICLE_WIDGET_CARGO_START; i < this->widget_count; i++) {
+						this->RaiseWidget(i);
+					}
+
+					this->cargo_filter = 0;
+					this->include_empty = true;
+
+					this->LowerWidget(BUILD_VEHICLE_WIDGET_NOT_TAKING_CARGO);
+				}
+				this->SetWidgetLoweredState(BUILD_VEHICLE_WIDGET_TAKING_ANY_CARGO, this->cargo_filter == _cargo_mask && this->include_empty);
+				this->regenerate_list = true;
+				this->SaveDefaultCargoFilter();
+				this->SetDirty();
+				break;
+			}
+
+			default:
+				if (widget >= BUILD_VEHICLE_WIDGET_CARGO_START) { // change cargo_filter
+					/* Determine the selected cargo type */
+					CargoID c;
+					int i = 0;
+					for (c = 0; c < NUM_CARGO; c++) {
+						if (!GetCargo(c)->IsValid()) continue;
+						if (widget - BUILD_VEHICLE_WIDGET_CARGO_START == i) break;
+						i++;
+					}
+
+					if (_ctrl_pressed) {
+						ToggleBit(this->cargo_filter, c);
+						this->ToggleWidgetLoweredState(widget);
+					} else {
+						for (uint i = BUILD_VEHICLE_WIDGET_CARGO_START; i < this->widget_count; i++) {
+							this->RaiseWidget(i);
+						}
+						this->RaiseWidget(BUILD_VEHICLE_WIDGET_NOT_TAKING_CARGO);
+
+						this->cargo_filter = 0;
+						this->include_empty = false;
+
+						SetBit(this->cargo_filter, c);
+						this->LowerWidget(widget);
+					}
+					this->SetWidgetLoweredState(BUILD_VEHICLE_WIDGET_TAKING_ANY_CARGO, this->cargo_filter == _cargo_mask && this->include_empty);
+					this->regenerate_list = true;
+					this->SaveDefaultCargoFilter();
+					this->SetDirty();
+				}
+				break;
 		}
 	}
 
@@ -1119,6 +1389,36 @@
 		this->widget[BUILD_VEHICLE_WIDGET_SORT_DROPDOWN].data = _sort_listing[this->vehicle_type][this->sort_criteria];
 
 		this->DrawWidgets();
+
+		/* draw cargo filter buttons */
+		/* hacked from station_gui.cpp; how to share code? */
+		/* put after DrawWidgets() to draw the label ABOVE buttons */
+
+		int cg_ofst;
+		int x = 81;
+		int y = 26;
+		int xb = 2; ///< offset from left of widget
+
+		uint i = 0;
+		for (CargoID c = 0; c < NUM_CARGO; c++) {
+			const CargoSpec *cs = GetCargo(c);
+			if (!cs->IsValid()) continue;
+
+			cg_ofst = HasBit(this->cargo_filter, c) ? 2 : 1;
+			GfxFillRect(x + cg_ofst, y + cg_ofst, x + cg_ofst + 10 , y + cg_ofst + 7, cs->rating_colour);
+			DrawStringCentered(x + 6 + cg_ofst, y + cg_ofst, cs->abbrev, TC_BLACK);
+			x += 14;
+			i++;
+		}
+
+		x += 6;
+		cg_ofst = this->IsWidgetLowered(BUILD_VEHICLE_WIDGET_NOT_TAKING_CARGO) ? 2 : 1;
+		DrawStringCentered(x + cg_ofst, y + cg_ofst, STR_ABBREV_NONE, TC_BLACK);
+		x += 14;
+		cg_ofst = this->IsWidgetLowered(BUILD_VEHICLE_WIDGET_TAKING_ANY_CARGO) ? 2 : 1;
+		DrawStringCentered(x + cg_ofst, y + cg_ofst, STR_ABBREV_ALL, TC_BLACK);
+
+		/* end of cargo filter buttons */
 
 		DrawEngineList(this->vehicle_type, this->widget[BUILD_VEHICLE_WIDGET_LIST].left + 2, this->widget[BUILD_VEHICLE_WIDGET_LIST].right, this->widget[BUILD_VEHICLE_WIDGET_LIST].top + 1, &this->eng_list, this->vscroll.pos, max, this->sel_engine, 0, DEFAULT_GROUP);
 
@@ -1183,11 +1483,23 @@
 };
 
 static const WindowDesc _build_vehicle_desc = {
-	WDP_AUTO, WDP_AUTO, 240, 174, 240, 256,
+	WDP_AUTO, WDP_AUTO, 265, 185, 265, 267,
 	WC_BUILD_VEHICLE, WC_NONE,
 	WDF_STD_TOOLTIPS | WDF_STD_BTN | WDF_DEF_WIDGET | WDF_UNCLICK_BUTTONS | WDF_RESIZABLE,
 	_build_vehicle_widgets,
 };
+
+bool BuildVehicleWindow::include_empty_train    = true;
+bool BuildVehicleWindow::include_empty_road     = true;
+bool BuildVehicleWindow::include_empty_ship     = true;
+bool BuildVehicleWindow::include_empty_aircraft = true;
+
+uint32 BuildVehicleWindow::cargo_filter_train    = UINT32_MAX;
+uint32 BuildVehicleWindow::cargo_filter_road     = UINT32_MAX;
+uint32 BuildVehicleWindow::cargo_filter_ship     = UINT32_MAX;
+uint32 BuildVehicleWindow::cargo_filter_aircraft = UINT32_MAX;
+
+const uint32 BuildVehicleWindow::cargo_filter_max = UINT32_MAX;
 
 void ShowBuildVehicleWindow(TileIndex tile, VehicleType type)
 {
diff -r 28606a486c52 src/lang/english.txt
--- src/lang/english.txt	Wed Aug 06 07:10:40 2008 +0000
+++ src/lang/english.txt	Wed Aug 06 23:27:06 2008 +0800
@@ -361,7 +361,6 @@
 STR_SORT_ORDER_TIP                                              :{BLACK}Select sorting order (descending/ascending)
 STR_SORT_CRITERIA_TIP                                           :{BLACK}Select sorting criteria
 STR_SORT_BY                                                     :{BLACK}Sort by
-
 STR_SORT_BY_POPULATION                                          :{BLACK}Population
 STR_SORT_BY_PRODUCTION                                          :Production
 STR_SORT_BY_TYPE                                                :Type
@@ -389,6 +388,9 @@
 STR_ENGINE_SORT_RUNNING_COST                                    :Running Cost
 STR_ENGINE_SORT_POWER_VS_RUNNING_COST                           :Power/Running Cost
 STR_ENGINE_SORT_CARGO_CAPACITY                                  :Cargo Capacity
+STR_FILTER_BY_CARGO                                             :{TINYFONT}{BLACK}Filter by cargo
+STR_NOT_TAKING_CARGO_TIP                                        :{BLACK}Show vehicles that won't take any cargo
+STR_TAKING_ANY_CARGO_TIP                                        :{BLACK}Show all vehicles
 STR_NO_WAITING_CARGO                                            :{BLACK}No cargo of any type is waiting
 STR_SELECT_ALL_FACILITIES                                       :{BLACK}Select all facilities
 STR_SELECT_ALL_TYPES                                            :{BLACK}Select all cargo types (including no waiting cargo)
