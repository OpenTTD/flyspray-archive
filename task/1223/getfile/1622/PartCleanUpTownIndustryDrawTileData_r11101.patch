Index: src/table/industry_land.h
===================================================================
--- src/table/industry_land.h	(revision 11101)
+++ src/table/industry_land.h	(working copy)
@@ -39,7 +39,7 @@
  * @param dz virtual height of the sprite
  * @param p this allows to specify a special drawing procedure.
  * @see DrawBuildingsTileStruct */
-#define M(s1, p1, s2, p2, sx, sy, w, h, dz, p) { { s1, p1 }, { s2, p2 }, sx, sy, w - 1, h - 1, dz, p }
+#define M(s1, p1, s2, p2, sx, sy, w, h, dz, p) { { s1, p1 }, { s2, p2 }, sx, sy, w, h, dz, p }
 
 /** Structure for industry tiles drawing */
 static const DrawBuildingsTileStruct _industry_draw_tile_data[NEW_INDUSTRYTILEOFFSET * 4] = {
Index: src/table/town_land.h
===================================================================
--- src/table/town_land.h	(revision 11101)
+++ src/table/town_land.h	(working copy)
@@ -15,7 +15,7 @@
  * @param dz the virtual height of the sprite
  * @param p set to 1 if a lift is present ()
  * @see DrawBuildingsTileStruct */
-#define M(s1, p1, s2, p2, sx, sy, w, h, dz, p) { { s1, p1 }, { s2, p2 }, sx, sy, w - 1, h - 1, dz, p}
+#define M(s1, p1, s2, p2, sx, sy, w, h, dz, p) { { s1, p1 }, { s2, p2 }, sx, sy, w, h, dz, p}
 
 /** structure of houses graphics*/
 static const DrawBuildingsTileStruct _town_draw_tile_data[] = {
Index: src/town_cmd.cpp
===================================================================
--- src/town_cmd.cpp	(revision 11101)
+++ src/town_cmd.cpp	(working copy)
@@ -182,8 +182,8 @@
 		AddSortableSpriteToDraw(image, dcts->building.pal,
 			ti->x + dcts->subtile_x,
 			ti->y + dcts->subtile_y,
-			dcts->width + 1,
-			dcts->height + 1,
+			dcts->width,
+			dcts->height,
 			dcts->dz,
 			ti->z,
 			HASBIT(_transparent_opt, TO_HOUSES)
Index: src/industry_cmd.cpp
===================================================================
--- src/industry_cmd.cpp	(revision 11101)
+++ src/industry_cmd.cpp	(working copy)
@@ -299,8 +299,8 @@
 			(HASBIT(image, PALETTE_MODIFIER_COLOR) && dits->building.pal == PAL_NONE) ? GENERAL_SPRITE_COLOR(ind->random_color) : dits->building.pal,
 			ti->x + dits->subtile_x,
 			ti->y + dits->subtile_y,
-			dits->width  + 1,
-			dits->height + 1,
+			dits->width,
+			dits->height,
 			dits->dz,
 			ti->z,
 			HASBIT(_transparent_opt, TO_INDUSTRIES));
