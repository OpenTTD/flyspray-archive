Index: src/economy.cpp
===================================================================
--- src/economy.cpp	(revision 22836)
+++ src/economy.cpp	(working copy)
@@ -925,6 +925,7 @@
 
 		uint amount = min(num_pieces, 0xFFFFU - ind->incoming_cargo_waiting[cargo_index]);
 		ind->incoming_cargo_waiting[cargo_index] += amount;
+		ind->total_cargo_accept[cargo_index] += amount; //Add the amount of deliered cargo to the total accepted
 		num_pieces -= amount;
 		accepted += amount;
 	}
Index: src/industry.h
===================================================================
--- src/industry.h	(revision 22836)
+++ src/industry.h	(working copy)
@@ -52,6 +52,7 @@
 	uint16 last_month_production[2];    ///< total units produced per cargo in the last full month
 	uint16 last_month_transported[2];   ///< total units transported per cargo in the last full month
 	uint16 counter;                     ///< used for animation and/or production (if available cargo)
+	uint16 total_cargo_accept[3];       ///< the total cargo accepted per type
 
 	IndustryType type;                  ///< type of industry.
 	OwnerByte owner;                    ///< owner of the industry.  Which SHOULD always be (imho) OWNER_NONE
Index: src/industry_cmd.cpp
===================================================================
--- src/industry_cmd.cpp	(revision 22836)
+++ src/industry_cmd.cpp	(working copy)
@@ -1585,6 +1585,11 @@
 	i->last_month_pct_transported[1] = 0;
 	i->last_month_transported[0] = 0;
 	i->last_month_transported[1] = 0;
+
+	i->total_cargo_accept[0] = 0;
+	i->total_cargo_accept[1] = 0;
+	i->total_cargo_accept[2] = 0;
+	
 	i->was_cargo_delivered = false;
 	i->last_prod_year = _cur_year;
 	i->last_month_production[0] = i->production_rate[0] * 8;
Index: src/industry_gui.cpp
===================================================================
--- src/industry_gui.cpp	(revision 22836)
+++ src/industry_gui.cpp	(working copy)
@@ -714,6 +714,7 @@
 			for (byte j = 0; j < lengthof(i->accepts_cargo); j++) {
 				if (i->accepts_cargo[j] == CT_INVALID) continue;
 				has_accept = true;
+
 				if (first) {
 					DrawString(left + WD_FRAMERECT_LEFT, right - WD_FRAMERECT_RIGHT, y, STR_INDUSTRY_VIEW_WAITING_FOR_PROCESSING);
 					y += FONT_HEIGHT_NORMAL;
@@ -731,7 +732,18 @@
 			byte p = 0;
 			for (byte j = 0; j < lengthof(i->accepts_cargo); j++) {
 				if (i->accepts_cargo[j] == CT_INVALID) continue;
-				has_accept = true;
+				has_accept = true;			
+				
+				/// Start
+				/** KNOWN BUGS
+				*  (1) Currently causes crash on industries accepting more than one cargo.
+				*/
+				SetDParam(0, CargoSpec::Get(i->accepts_cargo[j])->name); //Get's the accepted cargo name
+				SetDParam(1, i->total_cargo_accept[j]); // Get's the total accepted
+				DrawString(left + WD_FRAMERECT_LEFT, right - WD_FRAMERECT_RIGHT, y, STR_TESTING); //Draw it to screen
+				y += FONT_HEIGHT_NORMAL;
+				// End 
+				
 				if (p > 0) str++;
 				SetDParam(p++, CargoSpec::Get(i->accepts_cargo[j])->name);
 				SetDParamStr(p++, cargo_suffix[j]);
@@ -740,6 +752,7 @@
 				DrawString(left + WD_FRAMERECT_LEFT, right - WD_FRAMERECT_RIGHT, y, str);
 				y += FONT_HEIGHT_NORMAL;
 			}
+
 		}
 
 		GetAllCargoSuffixes(3, CST_VIEW, i, i->type, ind, i->produced_cargo, cargo_suffix);
Index: src/lang/english.txt
===================================================================
--- src/lang/english.txt	(revision 22836)
+++ src/lang/english.txt	(working copy)
@@ -23,6 +23,7 @@
 STR_EMPTY                                                       :
 STR_UNDEFINED                                                   :(undefined string)
 STR_JUST_NOTHING                                                :Nothing
+STR_TESTING                                                     :{BLACK}Cargo accepted: {STRING} {COMMA}
 
 # Cargo related strings
 # Plural cargo name
