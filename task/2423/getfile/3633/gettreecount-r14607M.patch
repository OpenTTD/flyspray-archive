Index: src/tree_map.h
===================================================================
--- src/tree_map.h	(revision 14607)
+++ src/tree_map.h	(working copy)
@@ -144,7 +144,7 @@
 static inline uint GetTreeCount(TileIndex t)
 {
 	assert(IsTileType(t, MP_TREES));
-	return GB(_m[t].m5, 6, 2);
+	return GB(_m[t].m5, 6, 2) + 1;
 }
 
 /**
Index: src/tree_cmd.cpp
===================================================================
--- src/tree_cmd.cpp	(revision 14607)
+++ src/tree_cmd.cpp	(working copy)
@@ -350,7 +350,7 @@
 			switch (GetTileType(tile)) {
 				case MP_TREES:
 					/* no more space for trees? */
-					if (_game_mode != GM_EDITOR && GetTreeCount(tile) == 3) {
+					if (_game_mode != GM_EDITOR && GetTreeCount(tile) == 4) {
 						msg = STR_2803_TREE_ALREADY_HERE;
 						continue;
 					}
@@ -478,7 +478,7 @@
 	TreeListEnt te[4];
 
 	/* put the trees to draw in a list */
-	uint trees = GetTreeCount(ti->tile) + 1;
+	uint trees = GetTreeCount(ti->tile);
 
 	for (uint i = 0; i < trees; i++) {
 		SpriteID image = s[0].sprite + (i == trees - 1 ? GetTreeGrowth(ti->tile) : 3);
@@ -538,7 +538,7 @@
 		if (t != NULL) ChangeTownRating(t, RATING_TREE_DOWN_STEP, RATING_TREE_MINIMUM);
 	}
 
-	num = GetTreeCount(tile) + 1;
+	num = GetTreeCount(tile);
 	if (IsInsideMM(GetTreeType(tile), TREE_RAINFOREST, TREE_CACTUS)) num *= 4;
 
 	if (flags & DC_EXEC) DoClearSquare(tile);
@@ -664,7 +664,7 @@
 						break;
 
 					case 1: /* add a tree */
-						if (GetTreeCount(tile) < 3) {
+						if (GetTreeCount(tile) < 4) {
 							AddTreeCount(tile, 1);
 							SetTreeGrowth(tile, 0);
 							break;
@@ -694,7 +694,7 @@
 			break;
 
 		case 6: /* final stage of tree destruction */
-			if (GetTreeCount(tile) > 0) {
+			if (GetTreeCount(tile) > 1) {
 				/* more than one tree, delete it */
 				AddTreeCount(tile, -1);
 				SetTreeGrowth(tile, 3);
