Index: src/town.h
===================================================================
--- src/town.h	(revision 19817)
+++ src/town.h	(working copy)
@@ -292,8 +292,8 @@
 
 		/* check only valid waypoints... */
 		if (lobj != NULL && obj != lobj) {
-			/* only objects with 'generic' name within the same city and with the same type*/
-			if (lobj->name == NULL && lobj->town == obj->town && lobj->IsOfType(obj)) {
+			/* only objects within the same city and with the same type */
+			if (lobj->town == obj->town && lobj->IsOfType(obj)) {
 				/* if lobj->town_cn < next, uint will overflow to '+inf' */
 				uint i = (uint)lobj->town_cn - next;
 
Index: src/waypoint_base.h
===================================================================
--- src/waypoint_base.h	(revision 19817)
+++ src/waypoint_base.h	(working copy)
@@ -15,7 +15,7 @@
 #include "base_station_base.h"
 
 struct Waypoint : SpecializedStation<Waypoint, true> {
-	uint16 town_cn;    ///< The Nth waypoint for this town (consecutive number)
+	uint16 town_cn;    ///< The N-1th waypoint for this town (consecutive number)
 
 	Waypoint(TileIndex tile = INVALID_TILE) : SpecializedStation<Waypoint, true>(tile) { }
 	~Waypoint();
Index: src/depot_base.h
===================================================================
--- src/depot_base.h	(revision 19817)
+++ src/depot_base.h	(working copy)
@@ -23,7 +23,7 @@
 	char *name;
 
 	TileIndex xy;
-	uint16 town_cn;    ///< The Nth depot for this town (consecutive number)
+	uint16 town_cn;    ///< The N-1th depot for this town (consecutive number)
 
 	Depot(TileIndex xy = INVALID_TILE) : xy(xy) {}
 	~Depot();
