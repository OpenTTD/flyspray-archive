diff -r 7500e2e4c8ab src/build_vehicle_gui.cpp
--- a/src/build_vehicle_gui.cpp	Thu Nov 13 20:26:06 2008 +0000
+++ b/src/build_vehicle_gui.cpp	Sun Nov 16 00:06:58 2008 +0100
@@ -39,6 +39,7 @@
 	BUILD_VEHICLE_WIDGET_CAPTION,
 	BUILD_VEHICLE_WIDGET_SORT_ASSENDING_DESCENDING,
 	BUILD_VEHICLE_WIDGET_SORT_DROPDOWN,
+	BUILD_VEHICLE_WIDGET_CARGO_DROPDOWN,
 	BUILD_VEHICLE_WIDGET_LIST,
 	BUILD_VEHICLE_WIDGET_SCROLLBAR,
 	BUILD_VEHICLE_WIDGET_PANEL,
@@ -50,17 +51,23 @@
 
 static const Widget _build_vehicle_widgets[] = {
 	{   WWT_CLOSEBOX,   RESIZE_NONE,  COLOUR_GREY,     0,    10,     0,    13, STR_00C5,                STR_018B_CLOSE_WINDOW },
-	{    WWT_CAPTION,  RESIZE_RIGHT,  COLOUR_GREY,    11,   239,     0,    13, 0x0,                     STR_018C_WINDOW_TITLE_DRAG_THIS },
-	{ WWT_PUSHTXTBTN,   RESIZE_NONE,  COLOUR_GREY,     0,    80,    14,    25, STR_SORT_BY,             STR_SORT_ORDER_TIP},
-	{   WWT_DROPDOWN,  RESIZE_RIGHT,  COLOUR_GREY,    81,   239,    14,    25, 0x0,                     STR_SORT_CRITERIA_TIP},
-	{     WWT_MATRIX,     RESIZE_RB,  COLOUR_GREY,     0,   227,    26,    39, 0x101,                   STR_NULL },
-	{  WWT_SCROLLBAR,    RESIZE_LRB,  COLOUR_GREY,   228,   239,    26,    39, 0x0,                     STR_0190_SCROLL_BAR_SCROLLS_LIST },
-	{      WWT_PANEL,    RESIZE_RTB,  COLOUR_GREY,     0,   239,    40,   161, 0x0,                     STR_NULL },
+	{    WWT_CAPTION,  RESIZE_RIGHT,  COLOUR_GREY,    11,   293,     0,    13, 0x0,                     STR_018C_WINDOW_TITLE_DRAG_THIS },
+	{ WWT_PUSHTXTBTN,   RESIZE_NONE,  COLOUR_GREY,     0,    60,    14,    25, STR_SORT_BY,             STR_SORT_ORDER_TIP},
+	{   WWT_DROPDOWN,   RESIZE_NONE,  COLOUR_GREY,    61,   190,    14,    25, 0x0,                     STR_SORT_CRITERIA_TIP},
+	{   WWT_DROPDOWN,  RESIZE_RIGHT,  COLOUR_GREY,   191,   293,    14,    25, 0x0,                     STR_SORT_CRITERIA_TIP},
+	{     WWT_MATRIX,     RESIZE_RB,  COLOUR_GREY,     0,   281,    26,    39, 0x101,                   STR_NULL },
+	{  WWT_SCROLLBAR,    RESIZE_LRB,  COLOUR_GREY,   282,   293,    26,    39, 0x0,                     STR_0190_SCROLL_BAR_SCROLLS_LIST },
+	{      WWT_PANEL,    RESIZE_RTB,  COLOUR_GREY,     0,   293,    40,   161, 0x0,                     STR_NULL },
 
-	{ WWT_PUSHTXTBTN,     RESIZE_TB,  COLOUR_GREY,     0,   114,   162,   173, 0x0,                     STR_NULL },
-	{ WWT_PUSHTXTBTN,    RESIZE_RTB,  COLOUR_GREY,   115,   227,   162,   173, 0x0,                     STR_NULL },
-	{  WWT_RESIZEBOX,   RESIZE_LRTB,  COLOUR_GREY,   228,   239,   162,   173, 0x0,                     STR_RESIZE_BUTTON },
+	{ WWT_PUSHTXTBTN,     RESIZE_TB,  COLOUR_GREY,     0,   114,   162,   173, 0x0,                         STR_NULL },
+	{ WWT_PUSHTXTBTN,    RESIZE_RTB,  COLOUR_GREY,   115,   281,   162,   173, 0x0,                         STR_NULL },
+	{  WWT_RESIZEBOX,   RESIZE_LRTB,  COLOUR_GREY,   282,   293,   162,   173, 0x0,                         STR_RESIZE_BUTTON },
 	{   WIDGETS_END},
+};
+
+enum cargo_filter {
+	CF_SHOW_ALL = -1,
+	CF_SHOW_NONE = (int) NUM_CARGO
 };
 
 static bool _internal_sort_order; // descending/ascending
@@ -797,6 +804,12 @@
 		AirportFTAClass::Flags flags;
 		RoadTypes roadtypes;
 	} filter;
+	int cargo_filter_train;
+	int cargo_filter_road;
+	int cargo_filter_ship;
+	int cargo_filter_aircraft;
+	StringID cargos_name_list[NUM_CARGO + 3];
+	int cargos_dropdown_pos[NUM_CARGO + 2];
 	bool descending_sort_order;
 	byte sort_criteria;
 	bool regenerate_list;
@@ -822,6 +835,31 @@
 
 		this->sel_engine      = INVALID_ENGINE;
 		this->regenerate_list = false;
+
+		this->cargo_filter_train = CF_SHOW_ALL;
+		this->cargo_filter_road = CF_SHOW_ALL;
+		this->cargo_filter_ship = CF_SHOW_ALL;
+		this->cargo_filter_aircraft = CF_SHOW_ALL;
+
+		/* Create cargo filter list  */
+		this->cargos_name_list[0] = STR_PURCHASE_INFO_ALL_TYPES;
+		*(this->cargos_dropdown_pos - CF_SHOW_ALL) = 0;
+
+		uint i = 1;
+		for (CargoID c = 0; c < NUM_CARGO; c++) {
+			if (!GetCargo(c)->IsValid()) continue;
+
+			this->cargos_name_list[i] = GetCargo(c)->name;
+			this->cargos_dropdown_pos[c] = i;
+
+			i++;
+		}
+		if (VEH_TRAIN == type) {
+			this->cargos_name_list[i] = STR_01A9_NONE;
+			this->cargos_dropdown_pos[CF_SHOW_NONE] = i;
+			i++;
+		}
+		this->cargos_name_list[i] = INVALID_STRING_ID;
 
 		this->sort_criteria         = _last_sort_criteria[type];
 		this->descending_sort_order = _last_sort_order[type];
@@ -927,6 +965,14 @@
 			if (this->filter.railtype != RAILTYPE_END && !HasPowerOnRail(rvi->railtype, this->filter.railtype)) continue;
 			if (!IsEngineBuildable(eid, VEH_TRAIN, _local_company)) continue;
 
+			uint32 cmask = GetUnionOfArticulatedRefitMasks(eid, VEH_TRAIN, true);
+			if (this->cargo_filter_train != CF_SHOW_ALL) {
+				if (this->cargo_filter_train == CF_SHOW_NONE) {
+					if (rvi->capacity > 0) continue;
+				} else {
+					if (!((this->cargo_filter_train == rvi->cargo_type && rvi->capacity > 0) || (HasBit(cmask, this->cargo_filter_train)))) continue;
+				}
+			}
 			*this->eng_list.Append() = eid;
 
 			if (rvi->railveh_type != RAILVEH_WAGON) {
@@ -962,8 +1008,11 @@
 		const Engine *e;
 		FOR_ALL_ENGINES_OF_TYPE(e, VEH_ROAD) {
 			EngineID eid = e->index;
+			const RoadVehicleInfo *rvi = RoadVehInfo(eid);
 			if (!IsEngineBuildable(eid, VEH_ROAD, _local_company)) continue;
 			if (!HasBit(this->filter.roadtypes, HasBit(EngInfo(eid)->misc_flags, EF_ROAD_TRAM) ? ROADTYPE_TRAM : ROADTYPE_ROAD)) continue;
+			uint32 cmask = GetUnionOfArticulatedRefitMasks(eid, VEH_ROAD, true);
+			if (!((this->cargo_filter_road == rvi->cargo_type && rvi->capacity > 0) || (HasBit(cmask, this->cargo_filter_road))) && (this->cargo_filter_road > CF_SHOW_ALL )) continue;
 			*this->eng_list.Append() = eid;
 
 			if (eid == this->sel_engine) sel_id = eid;
@@ -980,7 +1029,10 @@
 		const Engine *e;
 		FOR_ALL_ENGINES_OF_TYPE(e, VEH_SHIP) {
 			EngineID eid = e->index;
+			const ShipVehicleInfo *svi = ShipVehInfo(eid);
 			if (!IsEngineBuildable(eid, VEH_SHIP, _local_company)) continue;
+			uint32 cmask = GetUnionOfArticulatedRefitMasks(eid, VEH_SHIP, true);
+			if (!((this->cargo_filter_ship == svi->cargo_type && svi->capacity > 0) || (HasBit(cmask, this->cargo_filter_ship))) && (this->cargo_filter_ship > CF_SHOW_ALL )) continue;
 			*this->eng_list.Append() = eid;
 
 			if (eid == this->sel_engine) sel_id = eid;
@@ -1002,10 +1054,13 @@
 		const Engine *e;
 		FOR_ALL_ENGINES_OF_TYPE(e, VEH_AIRCRAFT) {
 			EngineID eid = e->index;
+			const AircraftVehicleInfo *avi = AircraftVehInfo(eid);
 			if (!IsEngineBuildable(eid, VEH_AIRCRAFT, _local_company)) continue;
 			/* First VEH_END window_numbers are fake to allow a window open for all different types at once */
 			if (!this->listview_mode && !CanAircraftUseStation(eid, this->window_number)) continue;
 
+			uint32 cmask = GetUnionOfArticulatedRefitMasks(eid, VEH_AIRCRAFT, true);
+			if (!((this->cargo_filter_aircraft == CT_PASSENGERS && avi->passenger_capacity > 0) || (this->cargo_filter_aircraft == CT_MAIL && avi->mail_capacity > 0) || (HasBit(cmask, this->cargo_filter_aircraft))) && (this->cargo_filter_aircraft > CF_SHOW_ALL )) continue;
 			*this->eng_list.Append() = eid;
 			if (eid == this->sel_engine) sel_id = eid;
 		}
@@ -1056,6 +1111,19 @@
 			case BUILD_VEHICLE_WIDGET_SORT_DROPDOWN: // Select sorting criteria dropdown menu
 				ShowDropDownMenu(this, _sort_listing[this->vehicle_type], this->sort_criteria, BUILD_VEHICLE_WIDGET_SORT_DROPDOWN, 0, 0);
 				break;
+
+			case BUILD_VEHICLE_WIDGET_CARGO_DROPDOWN: { // Select cargo filter
+				int cargo_filter = CF_SHOW_ALL;
+				switch (this->vehicle_type) {
+					default: NOT_REACHED();
+					case VEH_TRAIN:    cargo_filter = this->cargo_filter_train;    break;
+					case VEH_ROAD:     cargo_filter = this->cargo_filter_road;     break;
+					case VEH_SHIP:     cargo_filter = this->cargo_filter_ship;     break;
+					case VEH_AIRCRAFT: cargo_filter = this->cargo_filter_aircraft; break;
+				}
+				ShowDropDownMenu(this, this->cargos_name_list, this->cargos_dropdown_pos[cargo_filter], BUILD_VEHICLE_WIDGET_CARGO_DROPDOWN, 0, 0);
+				break;
+			}
 
 			case BUILD_VEHICLE_WIDGET_BUILD: {
 				EngineID sel_eng = this->sel_engine;
@@ -1128,6 +1196,18 @@
 		/* Set text of sort by dropdown */
 		this->widget[BUILD_VEHICLE_WIDGET_SORT_DROPDOWN].data = _sort_listing[this->vehicle_type][this->sort_criteria];
 
+		/*Get selected cargo by vehicle type*/
+		int cargo_filter = CF_SHOW_ALL;
+		switch (this->vehicle_type) {
+			default: NOT_REACHED();
+			case VEH_TRAIN:    cargo_filter = this->cargo_filter_train;    break;
+			case VEH_ROAD:     cargo_filter = this->cargo_filter_road;     break;
+			case VEH_SHIP:     cargo_filter = this->cargo_filter_ship;     break;
+			case VEH_AIRCRAFT: cargo_filter = this->cargo_filter_aircraft; break;
+		}
+		/* Set text of cargo filter dropdown */
+		this->widget[BUILD_VEHICLE_WIDGET_CARGO_DROPDOWN].data = this->cargos_name_list[this->cargos_dropdown_pos[cargo_filter]];
+		
 		this->DrawWidgets();
 
 		DrawEngineList(this->vehicle_type, this->widget[BUILD_VEHICLE_WIDGET_LIST].left + 2, this->widget[BUILD_VEHICLE_WIDGET_LIST].right, this->widget[BUILD_VEHICLE_WIDGET_LIST].top + 1, &this->eng_list, this->vscroll.pos, max, this->sel_engine, 0, DEFAULT_GROUP);
@@ -1172,11 +1252,44 @@
 
 	virtual void OnDropdownSelect(int widget, int index)
 	{
-		if (this->sort_criteria != index) {
-			this->sort_criteria = index;
-			_last_sort_criteria[this->vehicle_type] = this->sort_criteria;
-			this->regenerate_list = true;
-		}
+		switch (widget) {
+			case BUILD_VEHICLE_WIDGET_SORT_DROPDOWN:
+				if (this->sort_criteria != index) {
+					this->sort_criteria = index;
+					_last_sort_criteria[this->vehicle_type] = this->sort_criteria;
+				}
+				break;
+
+			case BUILD_VEHICLE_WIDGET_CARGO_DROPDOWN:
+				CargoID c;
+				int cargo_filter;
+
+				if (index > 0) {
+					cargo_filter = CF_SHOW_NONE;
+
+					int i = 1;
+					for (c = 0; c < NUM_CARGO; c++) {
+						if (!GetCargo(c)->IsValid()) continue;
+						if (index == i) {
+							cargo_filter = c;
+							break;
+						}
+						i++;
+					}
+				} else {
+					cargo_filter = CF_SHOW_ALL;
+				}
+
+				switch (this->vehicle_type) {
+					default: NOT_REACHED();
+					case VEH_TRAIN:    this->cargo_filter_train = cargo_filter;    break;
+					case VEH_ROAD:     this->cargo_filter_road = cargo_filter;     break;
+					case VEH_SHIP:     this->cargo_filter_ship = cargo_filter;     break;
+					case VEH_AIRCRAFT: this->cargo_filter_aircraft = cargo_filter; break;
+				}				
+				break;
+		}	
+		this->regenerate_list = true;
 		this->SetDirty();
 	}
 
@@ -1193,7 +1306,7 @@
 };
 
 static const WindowDesc _build_vehicle_desc = {
-	WDP_AUTO, WDP_AUTO, 240, 174, 240, 256,
+	WDP_AUTO, WDP_AUTO, 294, 174, 294, 256,
 	WC_BUILD_VEHICLE, WC_NONE,
 	WDF_STD_TOOLTIPS | WDF_STD_BTN | WDF_DEF_WIDGET | WDF_UNCLICK_BUTTONS | WDF_RESIZABLE,
 	_build_vehicle_widgets,
