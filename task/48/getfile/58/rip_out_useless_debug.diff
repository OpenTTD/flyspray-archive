Index: viewport.c
===================================================================
--- viewport.c	(revision 3513)
+++ viewport.c	(working copy)
@@ -546,44 +546,6 @@
 	return ss;
 }
 
-
-#ifdef DEBUG_HILIGHT_MARKED_TILES
-
-static void DrawHighlighedTile(const TileInfo *ti)
-{
-	if (_m[ti->tile].extra & 0x80) {
-		DrawSelectionSprite(PALETTE_TILE_RED_PULSATING | (SPR_SELECT_TILE + _tileh_to_sprite[ti->tileh]), ti);
-	}
-}
-
-int _debug_marked_tiles, _debug_red_tiles;
-
-// Helper functions that allow you mark a tile as red.
-void DebugMarkTile(TileIndex tile) {
-	_debug_marked_tiles++;
-	if (_m[tile].extra & 0x80)
-		return;
-	_debug_red_tiles++;
-	MarkTileDirtyByTile(tile);
-	_m[tile].extra = (_m[tile].extra & ~0xE0) | 0x80;
-}
-
-void DebugClearMarkedTiles()
-{
-	uint size = MapSize(), i;
-	for (i = 0; i != size; i++) {
-		if (_m[i].extra & 0x80) {
-			_m[i].extra &= ~0x80;
-			MarkTileDirtyByTile(i);
-		}
-	}
-	_debug_red_tiles = 0;
-	_debug_red_tiles = 0;
-}
-
-
-#endif
-
 static void DrawSelectionSprite(uint32 image, const TileInfo *ti)
 {
 	if (_added_tile_sprite && !(_thd.drawstyle & HT_LINE)) { // draw on real ground
@@ -629,10 +591,6 @@
 {
 	uint32 image;
 
-#ifdef DEBUG_HILIGHT_MARKED_TILES
-	DrawHighlighedTile(ti);
-#endif
-
 	// Draw a red error square?
 	if (_thd.redsq != 0 && _thd.redsq == ti->tile) {
 		DrawSelectionSprite(PALETTE_TILE_RED_PULSATING | (SPR_SELECT_TILE + _tileh_to_sprite[ti->tileh]), ti);
Index: ai/default/default.c
===================================================================
--- ai/default/default.c	(revision 3513)
+++ ai/default/default.c	(working copy)
@@ -3423,17 +3423,6 @@
 			// check if the aircraft stuff can be built there.
 			rule = AiFindBestDefaultAirportBlock(aib->use_tile, aib->cargo, p->ai.build_kind, &cost);
 
-#if 0
-			if (!IsTileType(aib->use_tile, MP_STREET) &&
-					!IsTileType(aib->use_tile, MP_RAILWAY) &&
-					!IsTileType(aib->use_tile, MP_STATION)
-					) {
-
-				_m[aib->use_tile].type_height = 0xa1;
-				_m[aib->use_tile].m5 = 0x80;
-				MarkTileDirtyByTile(aib->use_tile);
-			}
-#endif
 //			SetRedErrorSquare(aib->use_tile);
 
 			if (rule == -1) {
