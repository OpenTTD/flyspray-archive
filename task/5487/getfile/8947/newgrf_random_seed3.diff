Index: src/newgrf_config.cpp
===================================================================
--- src/newgrf_config.cpp	(Revision 24958)
+++ src/newgrf_config.cpp	(Arbeitskopie)
@@ -21,6 +21,7 @@
 #include "video/video_driver.hpp"
 #include "strings_func.h"
 #include "textfile_gui.h"
+#include "core/random_func.hpp"
 
 #include "fileio_func.h"
 #include "fios.h"
@@ -144,7 +145,11 @@
 
 	for (uint i = 0; i < this->param_info.Length(); i++) {
 		if (this->param_info[i] == NULL) continue;
-		this->param_info[i]->SetValue(this, this->param_info[i]->def_value);
+		if (this->param_info[i]->type == PTYPE_RANDOM) {
+			this->param_info[i]->SetValue(this, _interactive_random.Next()); //TODO: Check for limits
+		} else {
+			this->param_info[i]->SetValue(this, this->param_info[i]->def_value);
+		}
 	}
 }
 
Index: src/newgrf.cpp
===================================================================
--- src/newgrf.cpp	(Revision 24958)
+++ src/newgrf.cpp	(Arbeitskopie)
@@ -7290,6 +7290,7 @@
 		GRFParameterType type = (GRFParameterType)buf->ReadByte();
 		if (type < PTYPE_END) {
 			_cur_parameter->type = type;
+			if (type == PTYPE_RANDOM) _cur.grfconfig->has_param_defaults = true;
 		} else {
 			grfmsg(3, "StaticGRFInfo: unknown parameter type %d, ignoring this field", type);
 		}
Index: src/newgrf_config.h
===================================================================
--- src/newgrf_config.h	(Revision 24958)
+++ src/newgrf_config.h	(Arbeitskopie)
@@ -115,6 +115,7 @@
 enum GRFParameterType {
 	PTYPE_UINT_ENUM, ///< The parameter allows a range of numbers, each of which can have a special name
 	PTYPE_BOOL,      ///< The parameter is either 0 or 1
+	PTYPE_RANDOM,    ///< The parameter is filled with random bits instead of set by the player
 	PTYPE_END,       ///< Invalid parameter type
 };
 
