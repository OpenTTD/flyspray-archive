Index: src/bridge_gui.cpp
===================================================================
--- src/bridge_gui.cpp	(revision 20511)
+++ src/bridge_gui.cpp	(working copy)
@@ -199,7 +199,7 @@
 				}
 				sprite_dim.height++; // Sprite is rendered one pixel down in the matrix field.
 				text_dim.height++; // Allowing the bottom row pixels to be rendered on the edge of the matrix field.
-				resize->height = max(sprite_dim.height, text_dim.height) + 2; // Max of both sizes + account for matrix edges.
+				fill->height = resize->height = max(sprite_dim.height, text_dim.height) + 2; // Max of both sizes + account for matrix edges.
 
 				this->bridgetext_offset = WD_MATRIX_LEFT + sprite_dim.width + 1; // Left edge of text, 1 pixel distance from the sprite.
 				size->width = this->bridgetext_offset + text_dim.width + WD_MATRIX_RIGHT;
Index: src/newgrf_debug_gui.cpp
===================================================================
--- src/newgrf_debug_gui.cpp	(revision 20511)
+++ src/newgrf_debug_gui.cpp	(working copy)
@@ -284,8 +284,8 @@
 	{
 		if (widget != NIW_MAINPANEL) return;
 
-		resize->height = max(11, FONT_HEIGHT_NORMAL + 1);
-		resize->width  = 1;
+		fill->height = resize->height = max(11, FONT_HEIGHT_NORMAL + 1);
+		fill->width = resize->width  = 1;
 
 		size->height = 5 * resize->height + TOP_OFFSET + BOTTOM_OFFSET;
 	}
@@ -600,8 +600,8 @@
 	{
 		if (widget != SAW_LIST) return;
 
-		resize->height = max(11, FONT_HEIGHT_NORMAL + 1);
-		resize->width  = 1;
+		fill->height = resize->height = max(11, FONT_HEIGHT_NORMAL + 1);
+		fill->width = resize->width  = 1;
 
 		/* Resize to about 200 pixels (for the preview) */
 		size->height = (1 + 200 / resize->height) * resize->height;
Index: src/fios_gui.cpp
===================================================================
--- src/fios_gui.cpp	(revision 20511)
+++ src/fios_gui.cpp	(working copy)
@@ -472,7 +472,7 @@
 				break;
 
 			case SLWW_DRIVES_DIRECTORIES_LIST:
-				resize->height = FONT_HEIGHT_NORMAL;
+				fill->height = resize->height = FONT_HEIGHT_NORMAL;
 				size->height = resize->height * 10 + WD_FRAMERECT_TOP + WD_FRAMERECT_BOTTOM;
 				break;
 		}
Index: src/settings_gui.cpp
===================================================================
--- src/settings_gui.cpp	(revision 20511)
+++ src/settings_gui.cpp	(working copy)
@@ -1534,8 +1534,8 @@
 	{
 		if (widget != SETTINGSEL_OPTIONSPANEL) return;
 
-		resize->height = SETTING_HEIGHT = max(11, FONT_HEIGHT_NORMAL + 1);
-		resize->width  = 1;
+		fill->height = resize->height = SETTING_HEIGHT = max(11, FONT_HEIGHT_NORMAL + 1);
+		fill->width = resize->width  = 1;
 
 		size->height = 5 * resize->height + SETTINGTREE_TOP_OFFSET + SETTINGTREE_BOTTOM_OFFSET;
 	}
Index: src/misc_gui.cpp
===================================================================
--- src/misc_gui.cpp	(revision 20511)
+++ src/misc_gui.cpp	(working copy)
@@ -1305,8 +1305,7 @@
 	{
 		if (widget == QUERY_STR_WIDGET_DEFAULT && (this->flags & QSF_ENABLE_DEFAULT) == 0) {
 			/* We don't want this widget to show! */
-			fill->width = 0;
-			resize->width = 0;
+			fill->width = resize->width = 0;
 			size->width = 0;
 		}
 	}
Index: src/industry_gui.cpp
===================================================================
--- src/industry_gui.cpp	(revision 20511)
+++ src/industry_gui.cpp	(working copy)
@@ -301,7 +301,7 @@
 					if (this->index[i] == INVALID_INDUSTRYTYPE) continue;
 					d = maxdim(d, GetStringBoundingBox(GetIndustrySpec(this->index[i])->name));
 				}
-				resize->height = FONT_HEIGHT_NORMAL + WD_MATRIX_TOP + WD_MATRIX_BOTTOM;
+				fill->height = resize->height = FONT_HEIGHT_NORMAL + WD_MATRIX_TOP + WD_MATRIX_BOTTOM;
 				d.width += MATRIX_TEXT_OFFSET + padding.width;
 				d.height = 5 * resize->height;
 				*size = maxdim(*size, d);
@@ -1190,7 +1190,7 @@
 				for (uint i = 0; i < this->industries.Length(); i++) {
 					d = maxdim(d, GetStringBoundingBox(this->GetIndustryString(this->industries[i])));
 				}
-				resize->height = d.height;
+				fill->height = resize->height = d.height;
 				d.width += padding.width + WD_FRAMERECT_LEFT + WD_FRAMERECT_RIGHT;
 				d.height += padding.height + WD_FRAMERECT_TOP + WD_FRAMERECT_BOTTOM;
 				*size = maxdim(*size, d);
Index: src/build_vehicle_gui.cpp
===================================================================
--- src/build_vehicle_gui.cpp	(revision 20511)
+++ src/build_vehicle_gui.cpp	(working copy)
@@ -1141,7 +1141,7 @@
 	{
 		switch (widget) {
 			case BUILD_VEHICLE_WIDGET_LIST:
-				resize->height = GetEngineListHeight(this->vehicle_type);
+				fill->height = resize->height = GetEngineListHeight(this->vehicle_type);
 				size->height = 3 * resize->height;
 				break;
 
Index: src/autoreplace_gui.cpp
===================================================================
--- src/autoreplace_gui.cpp	(revision 20511)
+++ src/autoreplace_gui.cpp	(working copy)
@@ -241,7 +241,7 @@
 		switch (widget) {
 			case RVW_WIDGET_LEFT_MATRIX:
 			case RVW_WIDGET_RIGHT_MATRIX:
-				resize->height = GetEngineListHeight((VehicleType)this->window_number);
+				fill->height = resize->height = GetEngineListHeight((VehicleType)this->window_number);
 				size->height = (this->window_number <= VEH_ROAD ? 8 : 4) * resize->height;
 				break;
 
Index: src/newgrf_gui.cpp
===================================================================
--- src/newgrf_gui.cpp	(revision 20511)
+++ src/newgrf_gui.cpp	(working copy)
@@ -173,8 +173,8 @@
 			case GRFPAR_WIDGET_BACKGROUND:
 				this->line_height = FONT_HEIGHT_NORMAL + WD_MATRIX_TOP + WD_MATRIX_BOTTOM;
 
-				resize->width = 1;
-				resize->height = this->line_height;
+				fill->width = resize->width = 1;
+				fill->height = resize->height = this->line_height;
 				size->height = GB(this->GetWidget<NWidgetCore>(widget)->widget_data, MAT_ROW_START, MAT_ROW_BITS) * this->line_height;
 				break;
 
@@ -484,12 +484,12 @@
 	{
 		switch (widget) {
 			case SNGRFS_FILE_LIST:
-				resize->height = max(12, FONT_HEIGHT_NORMAL + 2);
+				fill->height = resize->height = max(12, FONT_HEIGHT_NORMAL + 2);
 				size->height = max(size->height, WD_FRAMERECT_TOP + 6 * resize->height + WD_FRAMERECT_BOTTOM);
 				break;
 
 			case SNGRFS_AVAIL_LIST:
-				resize->height = max(12, FONT_HEIGHT_NORMAL + 2);
+				fill->height = resize->height = max(12, FONT_HEIGHT_NORMAL + 2);
 				size->height = max(size->height, WD_FRAMERECT_TOP + 8 * resize->height + WD_FRAMERECT_BOTTOM);
 				break;
 
Index: src/widget_type.h
===================================================================
--- src/widget_type.h	(revision 20511)
+++ src/widget_type.h	(working copy)
@@ -186,7 +186,7 @@
  */
 FORCEINLINE uint NWidgetBase::GetHorizontalStepSize(SizingType sizing) const
 {
-	return (sizing == ST_RESIZE) ? this->resize_x : this->fill_x;
+	return (sizing == ST_RESIZE || this->resize_x != 0) ? this->resize_x : this->fill_x;
 }
 
 /**
@@ -195,7 +195,7 @@
  */
 FORCEINLINE uint NWidgetBase::GetVerticalStepSize(SizingType sizing) const
 {
-	return (sizing == ST_RESIZE) ? this->resize_y : this->fill_y;
+	return (sizing == ST_RESIZE || this->resize_y != 0) ? this->resize_y : this->fill_y;
 }
 
 /**
Index: src/group_gui.cpp
===================================================================
--- src/group_gui.cpp	(revision 20511)
+++ src/group_gui.cpp	(working copy)
@@ -221,7 +221,7 @@
 		switch (widget) {
 			case GRP_WIDGET_LIST_GROUP:
 				this->tiny_step_height = FONT_HEIGHT_NORMAL + WD_MATRIX_TOP;
-				resize->height = this->tiny_step_height;
+				fill->height = resize->height = this->tiny_step_height;
 				/* Minimum height is the height of the list widget minus all and default vehicles and a bit for the bottom bar */
 				size->height =  4 * GetVehicleListHeight(this->vehicle_type, this->tiny_step_height) - (this->tiny_step_height > 25 ? 2 : 3) * this->tiny_step_height;
 				break;
@@ -234,7 +234,7 @@
 				break;
 
 			case GRP_WIDGET_LIST_VEHICLE:
-				resize->height = GetVehicleListHeight(this->vehicle_type, FONT_HEIGHT_NORMAL + WD_MATRIX_TOP);
+				fill->height = resize->height = GetVehicleListHeight(this->vehicle_type, FONT_HEIGHT_NORMAL + WD_MATRIX_TOP);
 				size->height = 4 * resize->height;
 				break;
 
Index: src/ai/ai_gui.cpp
===================================================================
--- src/ai/ai_gui.cpp	(revision 20511)
+++ src/ai/ai_gui.cpp	(working copy)
@@ -84,8 +84,8 @@
 		if (widget == AIL_WIDGET_LIST) {
 			this->line_height = FONT_HEIGHT_NORMAL + WD_MATRIX_TOP + WD_MATRIX_BOTTOM;
 
-			resize->width = 1;
-			resize->height = this->line_height;
+			fill->width = resize->width = 1;
+			fill->height = resize->height = this->line_height;
 			size->height = GB(this->GetWidget<NWidgetCore>(widget)->widget_data, MAT_ROW_START, MAT_ROW_BITS) * this->line_height;
 		}
 	}
@@ -272,8 +272,8 @@
 		if (widget == AIS_WIDGET_BACKGROUND) {
 			this->line_height = FONT_HEIGHT_NORMAL + WD_MATRIX_TOP + WD_MATRIX_BOTTOM;
 
-			resize->width = 1;
-			resize->height = this->line_height;
+			fill->width = resize->width = 1;
+			fill->height = resize->height = this->line_height;
 			size->height = GB(this->GetWidget<NWidgetCore>(widget)->widget_data, MAT_ROW_START, MAT_ROW_BITS) * this->line_height;
 		}
 	}
@@ -755,7 +755,7 @@
 	virtual void UpdateWidgetSize(int widget, Dimension *size, const Dimension &padding, Dimension *fill, Dimension *resize)
 	{
 		if (widget == AID_WIDGET_LOG_PANEL) {
-			resize->height = FONT_HEIGHT_NORMAL + WD_PAR_VSEP_NORMAL;
+			fill->height = resize->height = FONT_HEIGHT_NORMAL + WD_PAR_VSEP_NORMAL;
 			size->height = 14 * resize->height + this->top_offset + this->bottom_offset;
 		}
 	}
Index: src/timetable_gui.cpp
===================================================================
--- src/timetable_gui.cpp	(revision 20511)
+++ src/timetable_gui.cpp	(working copy)
@@ -217,7 +217,7 @@
 				/* FALL THROUGH */
 			case TTV_ARRIVAL_DEPARTURE_SELECTION:
 			case TTV_TIMETABLE_PANEL:
-				resize->height = FONT_HEIGHT_NORMAL;
+				fill->height = resize->height = FONT_HEIGHT_NORMAL;
 				size->height = WD_FRAMERECT_TOP + 8 * resize->height + WD_FRAMERECT_BOTTOM;
 				break;
 
Index: src/station_gui.cpp
===================================================================
--- src/station_gui.cpp	(revision 20511)
+++ src/station_gui.cpp	(working copy)
@@ -397,7 +397,7 @@
 			}
 
 			case SLW_LIST:
-				resize->height = FONT_HEIGHT_NORMAL;
+				fill->height = resize->height = FONT_HEIGHT_NORMAL;
 				size->height = WD_FRAMERECT_TOP + 5 * resize->height + WD_FRAMERECT_BOTTOM;
 				break;
 
@@ -916,7 +916,7 @@
 	{
 		switch (widget) {
 			case SVW_WAITING:
-				resize->height = FONT_HEIGHT_NORMAL;
+				fill->height = resize->height = FONT_HEIGHT_NORMAL;
 				size->height = WD_FRAMERECT_TOP + 5 * resize->height + WD_FRAMERECT_BOTTOM;
 				this->expand_shrink_width = max(GetStringBoundingBox("-").width, GetStringBoundingBox("+").width) + WD_FRAMERECT_LEFT + WD_FRAMERECT_RIGHT;
 				break;
@@ -1385,7 +1385,7 @@
 			d = maxdim(d, GetStringBoundingBox(T::EXPECTED_FACIL == FACIL_WAYPOINT ? STR_STATION_LIST_WAYPOINT : STR_STATION_LIST_STATION));
 		}
 
-		resize->height = d.height;
+		fill->height = resize->height = d.height;
 		d.height *= 5;
 		d.width += WD_FRAMERECT_RIGHT + WD_FRAMERECT_LEFT;
 		d.height += WD_FRAMERECT_TOP + WD_FRAMERECT_BOTTOM;
Index: src/town_gui.cpp
===================================================================
--- src/town_gui.cpp	(revision 20511)
+++ src/town_gui.cpp	(working copy)
@@ -249,7 +249,7 @@
 				break;
 
 			case TWA_RATING_INFO:
-				resize->height = FONT_HEIGHT_NORMAL;
+				fill->height = resize->height = FONT_HEIGHT_NORMAL;
 				size->height = WD_FRAMERECT_TOP + 9 * FONT_HEIGHT_NORMAL + WD_FRAMERECT_BOTTOM;
 				break;
 		}
@@ -794,7 +794,7 @@
 					SetDParam(1, 10000000); // 10^7
 					d = maxdim(d, GetStringBoundingBox(STR_TOWN_DIRECTORY_TOWN));
 				}
-				resize->height = d.height;
+				fill->height = resize->height = d.height;
 				d.height *= 5;
 				d.width += padding.width + WD_FRAMERECT_LEFT + WD_FRAMERECT_RIGHT;
 				d.height += padding.height + WD_FRAMERECT_TOP + WD_FRAMERECT_BOTTOM;
Index: src/order_gui.cpp
===================================================================
--- src/order_gui.cpp	(revision 20511)
+++ src/order_gui.cpp	(working copy)
@@ -740,7 +740,7 @@
 				break;
 
 			case ORDER_WIDGET_ORDER_LIST:
-				resize->height = FONT_HEIGHT_NORMAL;
+				fill->height = resize->height = FONT_HEIGHT_NORMAL;
 				size->height = 6 * resize->height + WD_FRAMERECT_TOP + WD_FRAMERECT_BOTTOM;
 				break;
 
Index: src/news_gui.cpp
===================================================================
--- src/news_gui.cpp	(revision 20511)
+++ src/news_gui.cpp	(working copy)
@@ -965,7 +965,7 @@
 	{
 		if (widget == MHW_BACKGROUND) {
 			this->line_height = FONT_HEIGHT_NORMAL + 2;
-			resize->height = this->line_height;
+			fill->height = resize->height = this->line_height;
 
 			SetDParam(0, ConvertYMDToDate(ORIGINAL_MAX_YEAR, 12, 30));
 			this->date_width = GetStringBoundingBox(STR_SHORT_DATE).width;
Index: src/vehicle_gui.cpp
===================================================================
--- src/vehicle_gui.cpp	(revision 20511)
+++ src/vehicle_gui.cpp	(working copy)
@@ -526,7 +526,7 @@
 	{
 		switch (widget) {
 			case VRW_MATRIX:
-				resize->height = WD_MATRIX_TOP + FONT_HEIGHT_NORMAL + WD_MATRIX_BOTTOM;
+				fill->height = resize->height = WD_MATRIX_TOP + FONT_HEIGHT_NORMAL + WD_MATRIX_BOTTOM;
 				size->height = resize->height * 8;
 				break;
 		}
@@ -1140,7 +1140,7 @@
 	{
 		switch (widget) {
 			case VLW_WIDGET_LIST:
-				resize->height = GetVehicleListHeight(this->vehicle_type, 1);
+				fill->height = resize->height = GetVehicleListHeight(this->vehicle_type, 1);
 
 				switch (this->vehicle_type) {
 					case VEH_TRAIN:
@@ -1608,7 +1608,7 @@
 			}
 
 			case VLD_WIDGET_MATRIX:
-				resize->height = WD_MATRIX_TOP + FONT_HEIGHT_NORMAL + WD_MATRIX_BOTTOM;
+				fill->height = resize->height = WD_MATRIX_TOP + FONT_HEIGHT_NORMAL + WD_MATRIX_BOTTOM;
 				size->height = 4 * resize->height;
 				break;
 
Index: src/network/network_content_gui.cpp
===================================================================
--- src/network/network_content_gui.cpp	(revision 20511)
+++ src/network/network_content_gui.cpp	(working copy)
@@ -396,7 +396,7 @@
 			}
 
 			case NCLWW_MATRIX:
-				resize->height = FONT_HEIGHT_NORMAL + WD_MATRIX_TOP + WD_MATRIX_BOTTOM;
+				fill->height = resize->height = FONT_HEIGHT_NORMAL + WD_MATRIX_TOP + WD_MATRIX_BOTTOM;
 				size->height = 10 * resize->height;
 				break;
 		}
Index: src/network/network_gui.cpp
===================================================================
--- src/network/network_gui.cpp	(revision 20511)
+++ src/network/network_gui.cpp	(working copy)
@@ -495,7 +495,7 @@
 				break;
 
 			case NGWW_MATRIX:
-				resize->height = WD_MATRIX_TOP + FONT_HEIGHT_NORMAL + WD_MATRIX_BOTTOM;
+				fill->height = resize->height = WD_MATRIX_TOP + FONT_HEIGHT_NORMAL + WD_MATRIX_BOTTOM;
 				size->height = 10 * resize->height;
 				break;
 
@@ -1115,7 +1115,7 @@
 				break;
 
 			case NSSW_SELMAP:
-				resize->height = FONT_HEIGHT_NORMAL;
+				fill->height = resize->height = FONT_HEIGHT_NORMAL;
 				size->height = 14 * resize->height + WD_FRAMERECT_TOP + WD_FRAMERECT_BOTTOM;
 				break;
 		}
@@ -1491,7 +1491,7 @@
 				break;
 
 			case NLWW_MATRIX:
-				resize->height = WD_MATRIX_TOP + FONT_HEIGHT_NORMAL + WD_MATRIX_BOTTOM;
+				fill->height = resize->height = WD_MATRIX_TOP + FONT_HEIGHT_NORMAL + WD_MATRIX_BOTTOM;
 				size->height = 10 * resize->height;
 				break;
 
Index: src/subsidy_gui.cpp
===================================================================
--- src/subsidy_gui.cpp	(revision 20511)
+++ src/subsidy_gui.cpp	(working copy)
@@ -142,7 +142,7 @@
 		if (widget != SLW_PANEL) return;
 		Dimension d = maxdim(GetStringBoundingBox(STR_SUBSIDIES_OFFERED_TITLE), GetStringBoundingBox(STR_SUBSIDIES_SUBSIDISED_TITLE));
 
-		resize->height = d.height;
+		fill->height = resize->height = d.height;
 
 		d.height *= 5;
 		d.width += padding.width + WD_FRAMERECT_RIGHT + WD_FRAMERECT_LEFT;
Index: src/signs_gui.cpp
===================================================================
--- src/signs_gui.cpp	(revision 20511)
+++ src/signs_gui.cpp	(working copy)
@@ -170,7 +170,7 @@
 			case SLW_LIST: {
 				Dimension spr_dim = GetSpriteSize(SPR_COMPANY_ICON);
 				this->text_offset = WD_FRAMETEXT_LEFT + spr_dim.width + 2; // 2 pixels space between icon and the sign text.
-				resize->height = max<uint>(FONT_HEIGHT_NORMAL, GetSpriteSize(SPR_COMPANY_ICON).height);
+				fill->height = resize->height = max<uint>(FONT_HEIGHT_NORMAL, GetSpriteSize(SPR_COMPANY_ICON).height);
 				Dimension d = {this->text_offset + MAX_LENGTH_SIGN_NAME_PIXELS + WD_FRAMETEXT_RIGHT, WD_FRAMERECT_TOP + 5 * resize->height + WD_FRAMERECT_BOTTOM};
 				*size = maxdim(*size, d);
 				break;
