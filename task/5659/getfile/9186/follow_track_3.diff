diff --git a/src/pathfinder/follow_track.hpp b/src/pathfinder/follow_track.hpp
index 501b442..c322d4c 100644
--- a/src/pathfinder/follow_track.hpp
+++ b/src/pathfinder/follow_track.hpp
@@ -291,54 +291,55 @@ protected:
 	/** return true if we can enter m_new_tile from m_exitdir */
 	inline bool CanEnterNewTile()
 	{
-		if (IsRoadTT() && IsStandardRoadStopTile(m_new_tile)) {
-			/* road stop can be entered from one direction only unless it's a drive-through stop */
-			DiagDirection exitdir = GetRoadStopDir(m_new_tile);
-			if (ReverseDiagDir(exitdir) != m_exitdir) {
-				m_err = EC_NO_WAY;
-				return false;
+		if (IsRoadTT()) {
+			if (IsStandardRoadStopTile(m_new_tile)) {
+				/* road stop can be entered from one direction only unless it's a drive-through stop */
+				DiagDirection exitdir = GetRoadStopDir(m_new_tile);
+				if (ReverseDiagDir(exitdir) != m_exitdir) {
+					m_err = EC_NO_WAY;
+					return false;
+				}
 			}
-		}

-		/* single tram bits can only be entered from one direction */
-		if (IsTram()) {
-			DiagDirection single_tram = GetSingleTramBit(m_new_tile);
-			if (single_tram != INVALID_DIAGDIR && single_tram != ReverseDiagDir(m_exitdir)) {
-				m_err = EC_NO_WAY;
-				return false;
+			/* single tram bits can only be entered from one direction */
+			if (IsTram()) {
+				DiagDirection single_tram = GetSingleTramBit(m_new_tile);
+				if (single_tram != INVALID_DIAGDIR && single_tram != ReverseDiagDir(m_exitdir)) {
+					m_err = EC_NO_WAY;
+					return false;
+				}
 			}
-		}

-		/* road and rail depots can also be entered from one direction only */
-		if (IsRoadTT() && IsRoadDepotTile(m_new_tile)) {
-			DiagDirection exitdir = GetRoadDepotDirection(m_new_tile);
-			if (ReverseDiagDir(exitdir) != m_exitdir) {
-				m_err = EC_NO_WAY;
-				return false;
+			/* road and rail depots can also be entered from one direction only */
+			if (IsRoadDepotTile(m_new_tile)) {
+				DiagDirection exitdir = GetRoadDepotDirection(m_new_tile);
+				if (ReverseDiagDir(exitdir) != m_exitdir) {
+					m_err = EC_NO_WAY;
+					return false;
+				}
+				/* don't try to enter other company's depots */
+				if (GetTileOwner(m_new_tile) != m_veh_owner) {
+					m_err = EC_OWNER;
+					return false;
+				}
 			}
-			/* don't try to enter other company's depots */
-			if (GetTileOwner(m_new_tile) != m_veh_owner) {
-				m_err = EC_OWNER;
-				return false;
+		} else if (IsRailTT()) {
+			if (IsRailDepotTile(m_new_tile)) {
+				DiagDirection exitdir = GetRailDepotDirection(m_new_tile);
+				if (ReverseDiagDir(exitdir) != m_exitdir) {
+					m_err = EC_NO_WAY;
+					return false;
+				}
 			}
-		}
-		if (IsRailTT() && IsRailDepotTile(m_new_tile)) {
-			DiagDirection exitdir = GetRailDepotDirection(m_new_tile);
-			if (ReverseDiagDir(exitdir) != m_exitdir) {
+
+			/* rail transport is possible only on tiles with the same owner as vehicle */
+			if (GetTileOwner(m_new_tile) != m_veh_owner) {
+				/* different owner */
 				m_err = EC_NO_WAY;
 				return false;
 			}
-		}

-		/* rail transport is possible only on tiles with the same owner as vehicle */
-		if (IsRailTT() && GetTileOwner(m_new_tile) != m_veh_owner) {
-			/* different owner */
-			m_err = EC_NO_WAY;
-			return false;
-		}
-
-		/* rail transport is possible only on compatible rail types */
-		if (IsRailTT()) {
+			/* rail transport is possible only on compatible rail types */
 			RailType rail_type = GetTileRailType(m_new_tile);
 			if (!HasBit(m_railtypes, rail_type)) {
 				/* incompatible rail type */
