diff -r 002f404319e9 -r c99ba0d75ce8 src/settings_gui.cpp
--- a/src/settings_gui.cpp	Sun Sep 28 11:39:50 2008 +0200
+++ b/src/settings_gui.cpp	Sun Sep 28 11:57:00 2008 +0200
@@ -718,13 +718,13 @@
  * Data structure describing one page of patches in the patch settings window.
  *
  * The names of the patches to display are statically defined, and from this
- * information, a dynamic array (with length \a num) of PatchEntry entries is
+ * information, a dynamic array (with length \a num_entries) of PatchEntry entries is
  * constructed.
  */
 struct PatchPage {
 	const char **names;  ///< Static list of strings with patch names that are settable at the tab
 	PatchEntry *entries; ///< Array of patch entries of the page. Initially \c NULL, filled in at run time
-	byte num;            ///< Number of entries at the page (statically filled).
+	byte num_entries;    ///< Number of entries at the page (statically filled).
 };
 
 /** Array of pages (tabs), where each page holds a number of advanced settings. */
@@ -770,10 +770,10 @@
 		if (first_time) {
 			PatchPage *page;
 			for (page = &_patches_page[0]; page != endof(_patches_page); page++) {
-				if (patches_max < page->num) patches_max = page->num;
+				if (patches_max < page->num_entries) patches_max = page->num_entries;
 
-				page->entries = MallocT<PatchEntry>(page->num);
-				for (uint i = 0; i != page->num; i++) {
+				page->entries = MallocT<PatchEntry>(page->num_entries);
+				for (uint i = 0; i != page->num_entries; i++) {
 					uint index;
 					const SettingDesc *sd = GetPatchFromName(page->names[i], &index);
 					assert(sd != NULL);
@@ -809,7 +809,7 @@
 
 		int x = config_patch_x_start;
 		int y = config_patch_y_start;
-		for (uint i = 0; i != page->num; i++) {
+		for (uint i = 0; i != page->num_entries; i++) {
 			const SettingDesc *sd = page->entries[i].setting;
 			const SettingDescBase *sdb = &sd->desc;
 			const void *var = GetVariableAddress(patches_ptr, &sd->save);
@@ -868,7 +868,7 @@
 
 				byte btn = y / setting_height;  // Compute which setting is selected
 				if (y % setting_height > (setting_height -2)) return;  // Clicked too low at the setting
-				if (btn >= page->num) return;  // Clicked below the last setting of the page
+				if (btn >= page->num_entries) return;  // Clicked below the last setting of the page
 
 				const SettingDesc *sd = page->entries[btn].setting;
 
