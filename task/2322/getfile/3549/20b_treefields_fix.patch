diff -r 1f7ed2fb10c5 src/settings_gui.cpp
--- a/src/settings_gui.cpp	Sun Nov 02 14:05:54 2008 +0100
+++ b/src/settings_gui.cpp	Sun Nov 02 14:09:44 2008 +0100
@@ -1054,36 +1054,36 @@
 
 /** Tree fields of the User interface section */
 static TreeField _treeview_ui_fields[] = {
-	"gui.vehicle_speed",
-	"gui.status_long_date",
-	"gui.show_finances",
-	"gui.autoscroll",
-	"gui.reverse_scroll",
-	"gui.smooth_scroll",
-	"gui.errmsg_duration",
-	"gui.toolbar_pos",
-	"gui.measure_tooltip",
-	"gui.window_snap_radius",
-	"gui.population_in_label",
-	"gui.link_terraform_toolbar",
-	"gui.liveries",
-	"gui.prefer_teamchat",
+	TreeField("gui.vehicle_speed"),
+	TreeField("gui.status_long_date"),
+	TreeField("gui.show_finances"),
+	TreeField("gui.autoscroll"),
+	TreeField("gui.reverse_scroll"),
+	TreeField("gui.smooth_scroll"),
+	TreeField("gui.errmsg_duration"),
+	TreeField("gui.toolbar_pos"),
+	TreeField("gui.measure_tooltip"),
+	TreeField("gui.window_snap_radius"),
+	TreeField("gui.population_in_label"),
+	TreeField("gui.link_terraform_toolbar"),
+	TreeField("gui.liveries"),
+	TreeField("gui.prefer_teamchat"),
 	/* While the horizontal scrollwheel scrolling is written as general code, only
 	 *  the cocoa (OSX) driver generates input for it.
 	 *  Since it's also able to completely disable the scrollwheel will we display it on all platforms anyway */
-	"gui.scrollwheel_scrolling",
-	"gui.scrollwheel_multiplier",
+	TreeField("gui.scrollwheel_scrolling"),
+	TreeField("gui.scrollwheel_multiplier"),
 #ifdef __APPLE__
 	/* We might need to emulate a right mouse button on mac */
-	"gui.right_mouse_btn_emulation",
+	TreeField("gui.right_mouse_btn_emulation"),
 #endif
-	"gui.pause_on_newgame",
-	"gui.advanced_vehicle_list",
-	"gui.loading_indicators",
-	"gui.timetable_in_ticks",
-	"gui.default_rail_type",
-	"gui.always_build_infrastructure",
-	"gui.show_track_reservation",
+	TreeField("gui.pause_on_newgame"),
+	TreeField("gui.advanced_vehicle_list"),
+	TreeField("gui.loading_indicators"),
+	TreeField("gui.timetable_in_ticks"),
+	TreeField("gui.default_rail_type"),
+	TreeField("gui.always_build_infrastructure"),
+	TreeField("gui.show_track_reservation"),
 };
 /** User interface treeview section */
 static TreeSection _treeview_ui = TreeSection(STR_TREEVIEW_USER_INTERFACE,
@@ -1092,18 +1092,18 @@
 
 /** Tree fields of the Construction section */
 static TreeField _treeview_construction_fields[] = {
-	"construction.build_on_slopes",
-	"construction.autoslope",
-	"construction.extra_dynamite",
-	"construction.longbridges",
-	"construction.signal_side",
-	"station.always_small_airport",
-	"gui.enable_signal_gui",
-	"gui.drag_signals_density",
-	"game_creation.oil_refinery_limit",
-	"gui.semaphore_build_before",
-	"gui.default_signal_type",
-	"gui.cycle_signal_types",
+	TreeField("construction.build_on_slopes"),
+	TreeField("construction.autoslope"),
+	TreeField("construction.extra_dynamite"),
+	TreeField("construction.longbridges"),
+	TreeField("construction.signal_side"),
+	TreeField("station.always_small_airport"),
+	TreeField("gui.enable_signal_gui"),
+	TreeField("gui.drag_signals_density"),
+	TreeField("game_creation.oil_refinery_limit"),
+	TreeField("gui.semaphore_build_before"),
+	TreeField("gui.default_signal_type"),
+	TreeField("gui.cycle_signal_types"),
 };
 /** Construction treeview section */
 static TreeSection _treeview_construction = TreeSection(STR_TREEVIEW_CONSTRUCTION,
@@ -1112,18 +1112,18 @@
 
 /** Tree fields of the Stations section */
 static TreeField _treeview_stations_fields[] = {
-	"station.join_stations",
-	"order.improved_load",
-	"order.selectgoods",
-	"gui.new_nonstop",
-	"station.nonuniform_stations",
-	"station.station_spread",
-	"order.serviceathelipad",
-	"station.modified_catchment",
-	"order.gradual_loading",
-	"construction.road_stop_on_town_road",
-	"station.adjacent_stations",
-	"economy.station_noise_level",
+	TreeField("station.join_stations"),
+	TreeField("order.improved_load"),
+	TreeField("order.selectgoods"),
+	TreeField("gui.new_nonstop"),
+	TreeField("station.nonuniform_stations"),
+	TreeField("station.station_spread"),
+	TreeField("order.serviceathelipad"),
+	TreeField("station.modified_catchment"),
+	TreeField("order.gradual_loading"),
+	TreeField("construction.road_stop_on_town_road"),
+	TreeField("station.adjacent_stations"),
+	TreeField("economy.station_noise_level"),
 };
 /** Stations treeview section */
 static TreeSection _treeview_stations = TreeSection(STR_TREEVIEW_STATIONS,
@@ -1132,22 +1132,22 @@
 
 /** Tree fields of the Economy section */
 static TreeField _treeview_economy_fields[] = {
-	"economy.inflation",
-	"construction.raw_industry_construction",
-	"economy.multiple_industry_per_town",
-	"economy.same_industry_close",
-	"economy.bribe",
-	"economy.exclusive_rights",
-	"economy.give_money",
-	"gui.colored_news_year",
-	"gui.ending_year",
-	"economy.smooth_economy",
-	"economy.allow_shares",
-	"economy.town_layout",
-	"economy.mod_road_rebuild",
-	"economy.town_growth_rate",
-	"economy.larger_towns",
-	"economy.initial_city_size",
+	TreeField("economy.inflation"),
+	TreeField("construction.raw_industry_construction"),
+	TreeField("economy.multiple_industry_per_town"),
+	TreeField("economy.same_industry_close"),
+	TreeField("economy.bribe"),
+	TreeField("economy.exclusive_rights"),
+	TreeField("economy.give_money"),
+	TreeField("gui.colored_news_year"),
+	TreeField("gui.ending_year"),
+	TreeField("economy.smooth_economy"),
+	TreeField("economy.allow_shares"),
+	TreeField("economy.town_layout"),
+	TreeField("economy.mod_road_rebuild"),
+	TreeField("economy.town_growth_rate"),
+	TreeField("economy.larger_towns"),
+	TreeField("economy.initial_city_size"),
 };
 /** Economy treeview section */
 static TreeSection _treeview_economy = TreeSection(STR_TREEVIEW_ECONOMY,
@@ -1156,12 +1156,12 @@
 
 /** Tree fields of the Competitors section */
 static TreeField _treeview_competitors_fields[] = {
-	"ai.ainew_active",
-	"ai.ai_in_multiplayer",
-	"ai.ai_disable_veh_train",
-	"ai.ai_disable_veh_roadveh",
-	"ai.ai_disable_veh_aircraft",
-	"ai.ai_disable_veh_ship",
+	TreeField("ai.ainew_active"),
+	TreeField("ai.ai_in_multiplayer"),
+	TreeField("ai.ai_disable_veh_train"),
+	TreeField("ai.ai_disable_veh_roadveh"),
+	TreeField("ai.ai_disable_veh_aircraft"),
+	TreeField("ai.ai_disable_veh_ship"),
 };
 /** Competitors treeview section */
 static TreeSection _treeview_competitors = TreeSection(STR_TREEVIEW_COMPETITORS,
@@ -1170,37 +1170,37 @@
 
 /** Tree fields of the Vehicles section */
 static TreeField _treeview_vehicles_fields[] = {
-	"vehicle.realistic_acceleration",
-	"pf.forbid_90_deg",
-	"vehicle.mammoth_trains",
-	"order.gotodepot",
-	"pf.roadveh_queue",
-	"pf.pathfinder_for_trains",
-	"pf.pathfinder_for_roadvehs",
-	"pf.pathfinder_for_ships",
-	"gui.train_income_warn",
-	"gui.order_review_system",
-	"vehicle.never_expire_vehicles",
-	"gui.lost_train_warn",
-	"gui.autorenew",
-	"gui.autorenew_months",
-	"gui.autorenew_money",
-	"vehicle.max_trains",
-	"vehicle.max_roadveh",
-	"vehicle.max_aircraft",
-	"vehicle.max_ships",
-	"vehicle.servint_ispercent",
-	"vehicle.servint_trains",
-	"vehicle.servint_roadveh",
-	"vehicle.servint_ships",
-	"vehicle.servint_aircraft",
-	"order.no_servicing_if_no_breakdowns",
-	"vehicle.wagon_speed_limits",
-	"vehicle.disable_elrails",
-	"vehicle.freight_trains",
-	"vehicle.plane_speed",
-	"order.timetabling",
-	"vehicle.dynamic_engines",
+	TreeField("vehicle.realistic_acceleration"),
+	TreeField("pf.forbid_90_deg"),
+	TreeField("vehicle.mammoth_trains"),
+	TreeField("order.gotodepot"),
+	TreeField("pf.roadveh_queue"),
+	TreeField("pf.pathfinder_for_trains"),
+	TreeField("pf.pathfinder_for_roadvehs"),
+	TreeField("pf.pathfinder_for_ships"),
+	TreeField("gui.train_income_warn"),
+	TreeField("gui.order_review_system"),
+	TreeField("vehicle.never_expire_vehicles"),
+	TreeField("gui.lost_train_warn"),
+	TreeField("gui.autorenew"),
+	TreeField("gui.autorenew_months"),
+	TreeField("gui.autorenew_money"),
+	TreeField("vehicle.max_trains"),
+	TreeField("vehicle.max_roadveh"),
+	TreeField("vehicle.max_aircraft"),
+	TreeField("vehicle.max_ships"),
+	TreeField("vehicle.servint_ispercent"),
+	TreeField("vehicle.servint_trains"),
+	TreeField("vehicle.servint_roadveh"),
+	TreeField("vehicle.servint_ships"),
+	TreeField("vehicle.servint_aircraft"),
+	TreeField("order.no_servicing_if_no_breakdowns"),
+	TreeField("vehicle.wagon_speed_limits"),
+	TreeField("vehicle.disable_elrails"),
+	TreeField("vehicle.freight_trains"),
+	TreeField("vehicle.plane_speed"),
+	TreeField("order.timetabling"),
+	TreeField("vehicle.dynamic_engines"),
 };
 /** Vehicles treeview section */
 static TreeSection _treeview_vehicles = TreeSection(STR_TREEVIEW_VEHICLES,
