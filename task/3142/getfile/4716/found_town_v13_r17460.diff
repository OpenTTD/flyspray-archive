Index: src/settings.cpp
===================================================================
--- src/settings.cpp	(revisi¢n: 17460)
+++ src/settings.cpp	(copia de trabajo)
@@ -680,6 +680,14 @@
 	return true;
 }

+static bool CloseFoundTownGUI(int32 p1)
+{
+	if (p1 == 0 && _game_mode != GM_EDITOR) {
+		DeleteWindowByClass(WC_FOUND_TOWN);
+	}
+	return true;
+}
+
 static bool CloseSignalGUI(int32 p1)
 {
 	if (p1 == 0) {
Index: src/toolbar_gui.cpp
===================================================================
--- src/toolbar_gui.cpp	(revisi¢n: 17460)
+++ src/toolbar_gui.cpp	(copia de trabajo)
@@ -416,12 +416,18 @@

 static void ToolbarTownClick(Window *w)
 {
-	PopupMainToolbMenu(w, TBN_TOWNDIRECTORY, STR_TOWN_MENU_TOWN_DIRECTORY, 1);
+
+	PopupMainToolbMenu(w, TBN_TOWNDIRECTORY, STR_TOWN_MENU_TOWN_DIRECTORY, _settings_game.economy.found_new_towns ? 2 : 1);
+
+	SndPlayFx(SND_15_BEEP);
 }

 static void MenuClickTown(int index)
 {
-	ShowTownDirectory();
+	switch (index) {
+		case 0: ShowTownDirectory();   break;
+		case 1: if (_settings_game.economy.found_new_towns) ShowBuildTownWindow(); break;
+	}
 }

 /* --- Subidies button menu --- */
Index: src/lang/english.txt
===================================================================
--- src/lang/english.txt	(revisi¢n: 17460)
+++ src/lang/english.txt	(copia de trabajo)
@@ -363,6 +363,7 @@
 STR_MAP_MENU_SIGN_LIST                                          :Sign list
 ############ range for town menu starts, yet the town directory is shown in the map menu in the scenario editor
 STR_TOWN_MENU_TOWN_DIRECTORY                                    :Town directory
+STR_TOWN_MENU_FOUND_TOWN                                        :Found new town
 ############ both ranges ends here

 ############ range for subsidies menu starts
@@ -764,6 +765,8 @@
 STR_NEWS_INDUSTRY_CLOSURE_SUPPLY_PROBLEMS                       :{BIGFONT}{BLACK}Supply problems cause {STRING2} to announce imminent closure!
 STR_NEWS_INDUSTRY_CLOSURE_LACK_OF_TREES                         :{BIGFONT}{BLACK}Lack of nearby trees causes {STRING2} to announce imminent closure!

+STR_NEWS_TOWN_FOUND_NEW                                         :{BIGFONT}{BLACK}{TOWN} has been founded!{}{}Citizens of the new town thank {RAW_STRING} for building funds!
+
 STR_NEWS_EURO_INTRODUCTION                                      :{BIGFONT}{BLACK}European Monetary Union!{}{}The Euro is introduced as the sole currency for everyday transactions in your country!
 STR_NEWS_BEGIN_OF_RECESSION                                     :{BIGFONT}{BLACK}World Recession!{}{}Financial experts fear worst as economy slumps!
 STR_NEWS_END_OF_RECESSION                                       :{BIGFONT}{BLACK}Recession Over!{}{}Upturn in trade gives confidence to industries as economy strengthens!
@@ -1253,6 +1256,7 @@
 STR_CONFIG_SETTING_LARGER_TOWNS_DISABLED                        :{LTBLUE}Proportion of towns that will become cities: {ORANGE}None
 STR_CONFIG_SETTING_CITY_SIZE_MULTIPLIER                         :{LTBLUE}Initial city size multiplier: {ORANGE}{STRING1}
 STR_CONFIG_SETTING_MODIFIED_ROAD_REBUILD                        :{LTBLUE}Remove absurd road-elements during the road construction: {ORANGE}{STRING1}
+STR_CONFIG_SETTING_TOWN_BUILD_NEW                               :{LTBLUE}Allow founding new towns

 STR_CONFIG_SETTING_GUI                                          :{ORANGE}Interface
 STR_CONFIG_SETTING_CONSTRUCTION                                 :{ORANGE}Construction
@@ -2022,6 +2026,7 @@

 # Town generation window (SE)
 STR_FOUND_TOWN_CAPTION                                          :{WHITE}Town Generation
+STR_FOUND_TOWN_INGAME_CAPTION                                   :{WHITE}Found New Town
 STR_FOUND_TOWN_NEW_TOWN_BUTTON                                  :{BLACK}New Town
 STR_FOUND_TOWN_NEW_TOWN_TOOLTIP                                 :{BLACK}Construct new town
 STR_FOUND_TOWN_RANDOM_TOWN_BUTTON                               :{BLACK}Random Town
Index: src/settings_gui.cpp
===================================================================
--- src/settings_gui.cpp	(revisi¢n: 17460)
+++ src/settings_gui.cpp	(copia de trabajo)
@@ -1291,6 +1291,7 @@
 	SettingEntry("economy.town_growth_rate"),
 	SettingEntry("economy.larger_towns"),
 	SettingEntry("economy.initial_city_size"),
+	SettingEntry("economy.found_new_towns"),
 };
 /** Towns sub-page */
 static SettingsPage _settings_economy_towns_page = {_settings_economy_towns, lengthof(_settings_economy_towns)};
Index: src/town.h
===================================================================
--- src/town.h	(revisi¢n: 17460)
+++ src/town.h	(copia de trabajo)
@@ -214,6 +214,7 @@
 uint GetMaskOfTownActions(int *nump, CompanyID cid, const Town *t);
 bool GenerateTowns(TownLayout layout);
 bool GenerateTownName(uint32 *townnameparts);
+int GetNewTownConstructionCost();

 /**
  * Calculate a hash value from a tile position
Index: src/table/pricebase.h
===================================================================
--- src/table/pricebase.h	(revisi¢n: 17460)
+++ src/table/pricebase.h	(copia de trabajo)
@@ -59,4 +59,5 @@
 	{   1600, PCAT_RUNNING     }, ///< roadveh_running
 	{   5600, PCAT_RUNNING     }, ///< ship_running
 	{1000000, PCAT_CONSTRUCTION}, ///< build_industry
+	{2500000, PCAT_CONSTRUCTION}, ///< found_town
 };
Index: src/table/settings.h
===================================================================
--- src/table/settings.h	(revisi¢n: 17460)
+++ src/table/settings.h	(copia de trabajo)
@@ -16,6 +16,7 @@
 static bool InvalidateDetailsWindow(int32 p1);
 static bool InvalidateStationBuildWindow(int32 p1);
 static bool InvalidateBuildIndustryWindow(int32 p1);
+static bool CloseFoundTownGUI(int32 p1);
 static bool CloseSignalGUI(int32 p1);
 static bool InvalidateTownViewWindow(int32 p1);
 static bool DeleteSelectStationWindow(int32 p1);
@@ -432,6 +433,7 @@
 	 SDT_CONDVAR(GameSettings, economy.larger_towns,                 SLE_UINT8, 54, SL_MAX_VERSION, 0, D0,    4,     0,     255, 1, STR_CONFIG_SETTING_LARGER_TOWNS,           NULL),
 	 SDT_CONDVAR(GameSettings, economy.initial_city_size,            SLE_UINT8, 56, SL_MAX_VERSION, 0, 0,     2,     1,      10, 1, STR_CONFIG_SETTING_CITY_SIZE_MULTIPLIER,   NULL),
 	SDT_CONDBOOL(GameSettings, economy.mod_road_rebuild,                        77, SL_MAX_VERSION, 0, 0, false,                    STR_CONFIG_SETTING_MODIFIED_ROAD_REBUILD,  NULL),
+	SDT_CONDBOOL(GameSettings, economy.found_new_towns,                        128, SL_MAX_VERSION, 0, 0,  true,                    STR_CONFIG_SETTING_TOWN_BUILD_NEW,         CloseFoundTownGUI),

 	SDT_CONDNULL(1, 0, 106), // previously ai-new setting.
 	    SDT_BOOL(GameSettings, ai.ai_in_multiplayer,                                                0, 0, true,                     STR_CONFIG_SETTING_AI_IN_MULTIPLAYER,      NULL),
Index: src/town_cmd.cpp
===================================================================
--- src/town_cmd.cpp	(revisi¢n: 17460)
+++ src/town_cmd.cpp	(copia de trabajo)
@@ -1469,13 +1469,15 @@
 /**
  * Does the actual town creation.
  *
- * @param t The town
- * @param tile Where to put it
+ * @param t             The town
+ * @param tile          Position of the town
  * @param townnameparts The town name
- * @param size_mode How the size should be determined
- * @param size Parameter for size determination
+ * @param size          Parameter for size determination
+ * @param city          Determines if the town to create is a city
+ * @param found_town    True if we are founding a town ingame
+ * @param layout        Layout of the city
  */
-static void DoCreateTown(Town *t, TileIndex tile, uint32 townnameparts, TownSize size, bool city, TownLayout layout)
+static void DoCreateTown(Town *t, TileIndex tile, uint32 townnameparts, TownSize size, bool city, bool found_town, TownLayout layout)
 {
 	t->xy = tile;
 	t->num_houses = 0;
@@ -1530,6 +1532,7 @@
 	int x = (int)size * 16 + 3;
 	if (size == TS_RANDOM) x = (Random() & 0xF) + 8;
 	if (city) x *= _settings_game.economy.initial_city_size;
+	if (found_town) x = 8; // Towns founded ingame are slightly bigger than small sized towns.

 	t->num_houses += x;
 	UpdateTownRadius(t);
@@ -1543,6 +1546,17 @@
 	UpdateTownRadius(t);
 	UpdateTownMaxPass(t);
 	UpdateAirportsNoise();
+
+	if (found_town) {
+		char company_name[MAX_LENGTH_COMPANY_NAME_BYTES];
+		SetDParam(0, _current_company);
+		GetString(company_name, STR_COMPANY_NAME, lastof(company_name));
+		char *cn = strdup(company_name);
+		SetDParam(0, t->index);
+		SetDParamStr(1, cn);
+
+		AddNewsItem(STR_NEWS_TOWN_FOUND_NEW, NS_GENERAL, NR_TOWN, t->index, NR_NONE, UINT32_MAX, cn);
+	}
 }

 /**
@@ -1570,21 +1584,23 @@
 	return CommandCost();
 }

+int GetNewTownConstructionCost()
+{
+	return _price.found_town;
+};
+
 /** Create a new town.
  * This obviously only works in the scenario editor. Function not removed
  * as it might be possible in the future to fund your own town :)
  * @param tile coordinates where town is built
  * @param flags type of operation
  * @param p1  0..1 size of the town (@see TownSize)
- *               2 true iff it should be a city
+ *               2 true if it should be a city
  *            3..5 town road layout (@see TownLayout)
  * @param p2 town name parts
  */
 CommandCost CmdBuildTown(TileIndex tile, DoCommandFlag flags, uint32 p1, uint32 p2, const char *text)
 {
-	/* Only in the scenario editor */
-	if (_game_mode != GM_EDITOR) return CMD_ERROR;
-
 	TownSize size = (TownSize)GB(p1, 0, 2);
 	bool city = HasBit(p1, 2);
 	TownLayout layout = (TownLayout)GB(p1, 3, 3);
@@ -1607,11 +1623,11 @@
 		Town *t = new Town(tile);
 		_generating_world = true;
 		UpdateNearestTownForRoadTiles(true);
-		DoCreateTown(t, tile, townnameparts, size, city, layout);
+		DoCreateTown(t, tile, townnameparts, size, city, _game_mode != GM_EDITOR, layout);
 		UpdateNearestTownForRoadTiles(false);
 		_generating_world = false;
 	}
-	return CommandCost();
+	return CommandCost(EXPENSES_OTHER, GetNewTownConstructionCost());
 }

 /**
@@ -1752,7 +1768,7 @@
 		/* Allocate a town struct */
 		Town *t = new Town(tile);

-		DoCreateTown(t, tile, townnameparts, size, city, layout);
+		DoCreateTown(t, tile, townnameparts, size, city, false, layout);

 		/* if the population is still 0 at the point, then the
 		 * placement is so bad it couldn't grow at all */
Index: src/command.cpp
===================================================================
--- src/command.cpp	(revisi¢n: 17460)
+++ src/command.cpp	(copia de trabajo)
@@ -296,7 +296,7 @@
 	{CmdSellShareInCompany,                         0}, // CMD_SELL_SHARE_IN_COMPANY
 	{CmdBuyCompany,                                 0}, // CMD_BUY_COMANY

-	{CmdBuildTown,                        CMD_OFFLINE}, // CMD_BUILD_TOWN
+	{CmdBuildTown,                                  0}, // CMD_BUILD_TOWN
 	{CmdRenameTown,                        CMD_SERVER}, // CMD_RENAME_TOWN
 	{CmdDoTownAction,                               0}, // CMD_DO_TOWN_ACTION

Index: src/settings_type.h
===================================================================
--- src/settings_type.h	(revisi¢n: 17460)
+++ src/settings_type.h	(copia de trabajo)
@@ -328,6 +328,7 @@
 	bool   allow_town_roads;                 ///< towns are allowed to build roads (always allowed when generating world / in SE)
 	bool   station_noise_level;              ///< build new airports when the town noise level is still within accepted limits
 	uint16 town_noise_population[3];         ///< population to base decision on noise evaluation (@see town_council_tolerance)
+	bool   found_new_towns;                  ///< allow new towns to be built
 };

 /** Settings related to stations. */
Index: src/town_gui.cpp
===================================================================
--- src/town_gui.cpp	(revisi¢n: 17460)
+++ src/town_gui.cpp	(copia de trabajo)
@@ -806,6 +806,7 @@
 	TSEW_SIZE_LARGE,
 	TSEW_SIZE_RANDOM,
 	TSEW_CITY,
+	TSEW_FOUND_COST,
 	TSEW_TOWNLAYOUT,
 	TSEW_LAYOUT_ORIGINAL,
 	TSEW_LAYOUT_BETTER,
@@ -851,6 +852,8 @@
 		NWidget(NWID_SPACER), SetMinimalSize(0, 3),
 		NWidget(WWT_TEXTBTN, COLOUR_GREY, TSEW_CITY), SetPadding(0, 2, 0, 2), SetMinimalSize(156, 12), SetFill(true, false),
 										SetDataTip(STR_FOUND_TOWN_CITY, STR_FOUND_TOWN_CITY_TOOLTIP), SetFill(true, false),
+		/* Founding cost */
+		NWidget(WWT_LABEL, COLOUR_GREY, TSEW_FOUND_COST), SetPadding(0, 2, 2, 2), SetMinimalSize(156, 12), SetFill(1, 0),
 		/* Town roads selection. */
 		NWidget(NWID_HORIZONTAL),
 			NWidget(NWID_SPACER), SetFill(true, false),
@@ -887,6 +890,9 @@
 		this->InitNested(desc, window_number);
 		town_layout = _settings_game.economy.town_layout;
 		city = false;
+		if (_game_mode != GM_EDITOR) {
+			this->nested_array[TSEW_CAPTION]->SetDataTip(STR_FOUND_TOWN_INGAME_CAPTION, STR_TOOLTIP_WINDOW_TITLE_DRAG_THIS);
+		}
 		this->UpdateButtons();
 	}

@@ -910,6 +916,41 @@
 		this->DrawWidgets();
 	}

+	virtual void DrawWidget(const Rect &r, int widget) const
+	{
+		if (_game_mode != GM_EDITOR) {
+			switch (widget) {
+				case TSEW_FOUND_COST:
+					SetDParam(0, GetNewTownConstructionCost());
+					DrawString(r.left, r.right, r.top, STR_FUND_INDUSTRY_INDUSTRY_BUILD_COST, TC_FROMSTRING, SA_CENTER);
+					break;
+			}
+		}
+	}
+
+	/* This function hides some of the widgets depending on game state */
+	virtual void UpdateWidgetSize(int widget, Dimension *size, const Dimension &padding, Dimension *resize)
+	{
+		Dimension d = {0, 0};
+
+		if (_game_mode != GM_EDITOR) {
+			switch (widget) {
+				case TSEW_RANDOMTOWN:
+				case TSEW_MANYRANDOMTOWNS:
+				case TSEW_TOWNSIZE:
+				case TSEW_SIZE_SMALL:
+				case TSEW_SIZE_MEDIUM:
+				case TSEW_SIZE_LARGE:
+				case TSEW_SIZE_RANDOM:
+				case TSEW_CITY:
+					*size = d;
+					break;
+			}
+		} else if (widget == TSEW_FOUND_COST) {
+			*size = d;
+		}
+	}
+
 	virtual void OnClick(Point pt, int widget)
 	{
 		switch (widget) {
Index: src/economy.cpp
===================================================================
--- src/economy.cpp	(revisi¢n: 17460)
+++ src/economy.cpp	(copia de trabajo)
@@ -673,6 +673,7 @@
 	InvalidateWindowClasses(WC_REPLACE_VEHICLE);
 	InvalidateWindowClasses(WC_VEHICLE_DETAILS);
 	InvalidateWindow(WC_PAYMENT_RATES, 0);
+	InvalidateWindow(WC_FOUND_TOWN, 0);
 }

 static void CompaniesPayInterest()
Index: src/saveload/saveload.cpp
===================================================================
--- src/saveload/saveload.cpp	(revisi¢n: 17460)
+++ src/saveload/saveload.cpp	(copia de trabajo)
@@ -48,7 +48,7 @@

 #include "saveload_internal.h"

-extern const uint16 SAVEGAME_VERSION = 127;
+extern const uint16 SAVEGAME_VERSION = 128;

 SavegameType _savegame_type; ///< type of savegame we are loading

Index: src/saveload/economy_sl.cpp
===================================================================
--- src/saveload/economy_sl.cpp	(revisi¢n: 17460)
+++ src/saveload/economy_sl.cpp	(copia de trabajo)
@@ -19,8 +19,10 @@
 static void Load_PRIC()
 {
 	int vt = CheckSavegameVersion(65) ? SLE_FILE_I32 : SLE_FILE_I64;
-	SlArray(NULL, NUM_PRICES, vt | SLE_VAR_NULL);
-	SlArray(NULL, NUM_PRICES, SLE_FILE_U16 | SLE_VAR_NULL);
+	/* Since 128, the number of base prices increased in one. */
+	/* To keep compatibility with older games, a hardcoded value of 49 is used */
+	SlArray(NULL, 49, vt | SLE_VAR_NULL);
+	SlArray(NULL, 49, SLE_FILE_U16 | SLE_VAR_NULL);
 }

 /** Cargo payment rates in pre 126 savegames */
Index: src/economy_type.h
===================================================================
--- src/economy_type.h	(revisi¢n: 17460)
+++ src/economy_type.h	(copia de trabajo)
@@ -107,10 +107,11 @@
 	Money roadveh_running;
 	Money ship_running;
 	Money build_industry;
+	Money found_town;
 };

 enum {
-	NUM_PRICES = 49,
+	NUM_PRICES = 50,
 };

 assert_compile(NUM_PRICES * sizeof(Money) == sizeof(Prices));
