# HG changeset patch
# User HackaLittleBit
# Date 1460733196 -3600
#      Fri Apr 15 16:13:16 2016 +0100
# Branch trunk
# Node ID dca752e0cb6cb52f029c4e7f91f31ca7fbb0e2c5
# Parent  a6f153938926e07064f745dd7f648543668316d5
Change: Print debug info to console.

diff -r a6f153938926 -r dca752e0cb6c src/debug.h
--- a/src/debug.h	Tue Apr 12 18:03:11 2016 +0100
+++ b/src/debug.h	Fri Apr 15 16:13:16 2016 +0100
@@ -14,6 +14,14 @@
 
 #include "cpu.h"
 
+/* Masks to to show output in bits */
+#define BYTE_PATTERN "%d%d%d%d.%d%d%d%d"
+#define SHORT_PATTERN BYTE_PATTERN "." BYTE_PATTERN
+#define LONG_PATTERN SHORT_PATTERN "." SHORT_PATTERN
+#define BYTE_TO_BITS(uint8) (uint8 & 0x80 ? 1 : 0), (uint8 & 0x40 ? 1 : 0), (uint8 & 0x20 ? 1 : 0), (uint8 & 0x10 ? 1 : 0), (uint8 & 0x08 ? 1 : 0), (uint8 & 0x04 ? 1 : 0), (uint8 & 0x02 ? 1 : 0), (uint8 & 0x01 ? 1 : 0)
+#define SHORT_TO_BITS(uint16) BYTE_TO_BITS(uint16 >> 8), BYTE_TO_BITS(uint16)
+#define LONG_TO_BITS(uint32) SHORT_TO_BITS(uint32 >> 16), SHORT_TO_BITS(uint32)
+
 /* Debugging messages policy:
  * These should be the severities used for direct DEBUG() calls
  * maximum debugging level should be 10 if really deep, deep
diff -r a6f153938926 -r dca752e0cb6c src/misc_gui.cpp
--- a/src/misc_gui.cpp	Tue Apr 12 18:03:11 2016 +0100
+++ b/src/misc_gui.cpp	Fri Apr 15 16:13:16 2016 +0100
@@ -26,6 +26,7 @@
 #include "core/geometry_func.hpp"
 #include "newgrf_debug.h"
 #include "zoom_func.h"
+#include "console_func.h"
 
 #include "widgets/misc_widget.h"
 
@@ -117,22 +118,18 @@
 	{
 		this->InitNested();
 
-#if defined(_DEBUG)
-#	define LANDINFOD_LEVEL 0
-#else
-#	define LANDINFOD_LEVEL 1
-#endif
-		DEBUG(misc, LANDINFOD_LEVEL, "TILE: %#x (%i,%i)", tile, TileX(tile), TileY(tile));
-		DEBUG(misc, LANDINFOD_LEVEL, "type   = %#x", _m[tile].type);
-		DEBUG(misc, LANDINFOD_LEVEL, "height = %#x", _m[tile].height);
-		DEBUG(misc, LANDINFOD_LEVEL, "m1     = %#x", _m[tile].m1);
-		DEBUG(misc, LANDINFOD_LEVEL, "m2     = %#x", _m[tile].m2);
-		DEBUG(misc, LANDINFOD_LEVEL, "m3     = %#x", _m[tile].m3);
-		DEBUG(misc, LANDINFOD_LEVEL, "m4     = %#x", _m[tile].m4);
-		DEBUG(misc, LANDINFOD_LEVEL, "m5     = %#x", _m[tile].m5);
-		DEBUG(misc, LANDINFOD_LEVEL, "m6     = %#x", _me[tile].m6);
-		DEBUG(misc, LANDINFOD_LEVEL, "m7     = %#x", _me[tile].m7);
-#undef LANDINFOD_LEVEL
+		/* Use console command 'debuglevel map=1' or 'debuglevel 1' to see tile information*/
+		if (_debug_map_level >= 1) {
+			IConsolePrintF(CC_DEFAULT, "----");
+			IConsolePrintF(CC_DEFAULT, "Tile = %#x    Coordinates:    X = %i,    Y = %i,    Z = %i,    Type = %#x", tile, TileX(tile), TileY(tile), GetTileZ(tile), GetTileType(tile));
+			IConsolePrintF(CC_DEFAULT, "m1 = " BYTE_PATTERN ",    %#x", BYTE_TO_BITS(_m[(tile)].m1), _m[(tile)].m1);
+			IConsolePrintF(CC_DEFAULT, "m2 = " SHORT_PATTERN ",    %#x", SHORT_TO_BITS(_m[(tile)].m2), _m[(tile)].m2);
+			IConsolePrintF(CC_DEFAULT, "m3 = " BYTE_PATTERN ",    %#x", BYTE_TO_BITS(_m[(tile)].m3), _m[(tile)].m3);
+			IConsolePrintF(CC_DEFAULT, "m4 = " BYTE_PATTERN ",    %#x", BYTE_TO_BITS(_m[(tile)].m4), _m[(tile)].m4);
+			IConsolePrintF(CC_DEFAULT, "m5 = " BYTE_PATTERN ",    %#x", BYTE_TO_BITS(_m[(tile)].m5), _m[(tile)].m5);
+			IConsolePrintF(CC_DEFAULT, "m6 = " BYTE_PATTERN ",    %#x", BYTE_TO_BITS(_me[(tile)].m6), _me[(tile)].m6);
+			IConsolePrintF(CC_DEFAULT, "m7 = " BYTE_PATTERN ",    %#x", BYTE_TO_BITS(_me[(tile)].m7), _me[(tile)].m7);
+		}
 	}
 
 	virtual void OnInit()
