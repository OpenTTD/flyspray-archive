Index: src/lang/english.txt
===================================================================
--- src/lang/english.txt	(revision 22854)
+++ src/lang/english.txt	(working copy)
@@ -274,7 +274,7 @@
 STR_SORT_BY_MODEL                                               :Model
 STR_SORT_BY_VALUE                                               :Value
 STR_SORT_BY_LENGTH                                              :Length
-STR_SORT_BY_LIFE_TIME                                           :Remaining life time
+STR_SORT_BY_LIFE_TIME                                           :Remaining lifetime
 STR_SORT_BY_TIMETABLE_DELAY                                     :Timetable delay
 STR_SORT_BY_FACILITY                                            :Station type
 STR_SORT_BY_WAITING                                             :Waiting cargo value
@@ -3198,12 +3198,15 @@
 STR_ORDER_SERVICE_TOOLTIP                                       :{BLACK}Skip this order unless a service is needed
 
 STR_ORDER_CONDITIONAL_VARIABLE_TOOLTIP                          :{BLACK}Vehicle data to base jumping on
+
+# Conditional order variables, must follow order of OrderConditionVariable enum
 STR_ORDER_CONDITIONAL_LOAD_PERCENTAGE                           :Load percentage
 STR_ORDER_CONDITIONAL_RELIABILITY                               :Reliability
 STR_ORDER_CONDITIONAL_MAX_SPEED                                 :Maximum speed
-STR_ORDER_CONDITIONAL_AGE                                       :Vehicle age (years)
+STR_ORDER_CONDITIONAL_AGE                                       :Age (years)
 STR_ORDER_CONDITIONAL_REQUIRES_SERVICE                          :Requires service
 STR_ORDER_CONDITIONAL_UNCONDITIONALLY                           :Always
+STR_ORDER_CONDITIONAL_REMAINING_LIFETIME                        :Remaining lifetime (years)
 
 STR_ORDER_CONDITIONAL_COMPARATOR_TOOLTIP                        :{BLACK}How to compare the vehicle data to the given value
 STR_ORDER_CONDITIONAL_COMPARATOR_EQUALS                         :is equal to
Index: src/order_cmd.cpp
===================================================================
--- src/order_cmd.cpp	(revision 22854)
+++ src/order_cmd.cpp	(working copy)
@@ -1799,12 +1799,13 @@
 	uint16 value = order->GetConditionValue();
 
 	switch (order->GetConditionVariable()) {
-		case OCV_LOAD_PERCENTAGE:  skip_order = OrderConditionCompare(occ, CalcPercentVehicleFilled(v, NULL), value); break;
-		case OCV_RELIABILITY:      skip_order = OrderConditionCompare(occ, ToPercent16(v->reliability),       value); break;
-		case OCV_MAX_SPEED:        skip_order = OrderConditionCompare(occ, v->GetDisplayMaxSpeed() * 10 / 16, value); break;
-		case OCV_AGE:              skip_order = OrderConditionCompare(occ, v->age / DAYS_IN_LEAP_YEAR,        value); break;
-		case OCV_REQUIRES_SERVICE: skip_order = OrderConditionCompare(occ, v->NeedsServicing(),               value); break;
-		case OCV_UNCONDITIONALLY:  skip_order = true; break;
+		case OCV_LOAD_PERCENTAGE:    skip_order = OrderConditionCompare(occ, CalcPercentVehicleFilled(v, NULL), value); break;
+		case OCV_RELIABILITY:        skip_order = OrderConditionCompare(occ, ToPercent16(v->reliability),       value); break;
+		case OCV_MAX_SPEED:          skip_order = OrderConditionCompare(occ, v->GetDisplayMaxSpeed() * 10 / 16, value); break;
+		case OCV_AGE:                skip_order = OrderConditionCompare(occ, v->age / DAYS_IN_LEAP_YEAR,        value); break;
+		case OCV_REQUIRES_SERVICE:   skip_order = OrderConditionCompare(occ, v->NeedsServicing(),               value); break;
+		case OCV_UNCONDITIONALLY:    skip_order = true; break;
+		case OCV_REMAINING_LIFETIME: skip_order = OrderConditionCompare(occ, max(v->max_age - v->age + DAYS_IN_LEAP_YEAR - 1, 0) / DAYS_IN_LEAP_YEAR, value); break;
 		default: NOT_REACHED();
 	}
 
Index: src/order_gui.cpp
===================================================================
--- src/order_gui.cpp	(revision 22854)
+++ src/order_gui.cpp	(working copy)
@@ -139,11 +139,24 @@
 	STR_ORDER_CONDITIONAL_RELIABILITY,
 	STR_ORDER_CONDITIONAL_MAX_SPEED,
 	STR_ORDER_CONDITIONAL_AGE,
+	STR_ORDER_CONDITIONAL_REMAINING_LIFETIME,
 	STR_ORDER_CONDITIONAL_REQUIRES_SERVICE,
 	STR_ORDER_CONDITIONAL_UNCONDITIONALLY,
 	INVALID_STRING_ID,
 };
 
+static OrderConditionVariable IndexToOrderConditionVariable(int index)
+{
+	assert(index >= 0 && index < lengthof(_order_conditional_variable));
+	return (OrderConditionVariable)(_order_conditional_variable[index] - STR_ORDER_CONDITIONAL_LOAD_PERCENTAGE);
+}
+
+static int OrderConditionVariableToIndex(OrderConditionVariable ocv)
+{
+	for (int i = 0; i < lengthof(_order_conditional_variable); ++i) if (_order_conditional_variable[i] - STR_ORDER_CONDITIONAL_LOAD_PERCENTAGE == ocv) return i;
+	NOT_REACHED();
+}
+
 static const StringID _order_conditional_condition[] = {
 	STR_ORDER_CONDITIONAL_COMPARATOR_EQUALS,
 	STR_ORDER_CONDITIONAL_COMPARATOR_NOT_EQUALS,
@@ -295,7 +308,7 @@
 			} else {
 				OrderConditionComparator occ = order->GetConditionComparator();
 				SetDParam(0, (occ == OCC_IS_TRUE || occ == OCC_IS_FALSE) ? STR_ORDER_CONDITIONAL_TRUE_FALSE : STR_ORDER_CONDITIONAL_NUM);
-				SetDParam(2, STR_ORDER_CONDITIONAL_LOAD_PERCENTAGE + order->GetConditionVariable());
+				SetDParam(2, _order_conditional_variable[OrderConditionVariableToIndex(order->GetConditionVariable())]);
 				SetDParam(3, STR_ORDER_CONDITIONAL_COMPARATOR_EQUALS + occ);
 
 				uint value = order->GetConditionValue();
@@ -996,7 +1009,7 @@
 					}
 					OrderConditionVariable ocv = order->GetConditionVariable();
 					/* Set the strings for the dropdown boxes. */
-					this->GetWidget<NWidgetCore>(ORDER_WIDGET_COND_VARIABLE)->widget_data   = _order_conditional_variable[order == NULL ? 0 : ocv];
+					this->GetWidget<NWidgetCore>(ORDER_WIDGET_COND_VARIABLE)->widget_data   = _order_conditional_variable[order == NULL ? 0 : OrderConditionVariableToIndex(ocv)];
 					this->GetWidget<NWidgetCore>(ORDER_WIDGET_COND_COMPARATOR)->widget_data = _order_conditional_condition[order == NULL ? 0 : order->GetConditionComparator()];
 					this->SetWidgetDisabledState(ORDER_WIDGET_COND_COMPARATOR, ocv == OCV_UNCONDITIONALLY);
 					this->SetWidgetDisabledState(ORDER_WIDGET_COND_VALUE, ocv == OCV_REQUIRES_SERVICE || ocv == OCV_UNCONDITIONALLY);
@@ -1226,7 +1239,7 @@
 				break;
 
 			case ORDER_WIDGET_COND_VARIABLE:
-				ShowDropDownMenu(this, _order_conditional_variable, this->vehicle->GetOrder(this->OrderGetSel())->GetConditionVariable(), ORDER_WIDGET_COND_VARIABLE, 0, 0);
+				ShowDropDownMenu(this, _order_conditional_variable, OrderConditionVariableToIndex(this->vehicle->GetOrder(this->OrderGetSel())->GetConditionVariable()), ORDER_WIDGET_COND_VARIABLE, 0, 0);
 				break;
 
 			case ORDER_WIDGET_COND_COMPARATOR: {
@@ -1264,6 +1277,7 @@
 				case OCV_RELIABILITY:
 				case OCV_LOAD_PERCENTAGE:
 					value = Clamp(value, 0, 100);
+					break;
 
 				default:
 					break;
@@ -1302,7 +1316,7 @@
 				break;
 
 			case ORDER_WIDGET_COND_VARIABLE:
-				DoCommandP(this->vehicle->tile, this->vehicle->index + (this->OrderGetSel() << 20), MOF_COND_VARIABLE | index << 4,  CMD_MODIFY_ORDER | CMD_MSG(STR_ERROR_CAN_T_MODIFY_THIS_ORDER));
+				DoCommandP(this->vehicle->tile, this->vehicle->index + (this->OrderGetSel() << 20), MOF_COND_VARIABLE | IndexToOrderConditionVariable(index) << 4,  CMD_MODIFY_ORDER | CMD_MSG(STR_ERROR_CAN_T_MODIFY_THIS_ORDER));
 				break;
 
 			case ORDER_WIDGET_COND_COMPARATOR:
Index: src/order_type.h
===================================================================
--- src/order_type.h	(revision 22854)
+++ src/order_type.h	(working copy)
@@ -110,12 +110,13 @@
  * Variables (of a vehicle) to 'cause' skipping on.
  */
 enum OrderConditionVariable {
-	OCV_LOAD_PERCENTAGE,  ///< Skip based on the amount of load
-	OCV_RELIABILITY,      ///< Skip based on the reliability
-	OCV_MAX_SPEED,        ///< Skip based on the maximum speed
-	OCV_AGE,              ///< Skip based on the age
-	OCV_REQUIRES_SERVICE, ///< Skip when the vehicle requires service
-	OCV_UNCONDITIONALLY,  ///< Always skip
+	OCV_LOAD_PERCENTAGE,    ///< Skip based on the amount of load
+	OCV_RELIABILITY,        ///< Skip based on the reliability
+	OCV_MAX_SPEED,          ///< Skip based on the maximum speed
+	OCV_AGE,                ///< Skip based on the age
+	OCV_REQUIRES_SERVICE,   ///< Skip when the vehicle requires service
+	OCV_UNCONDITIONALLY,    ///< Always skip
+	OCV_REMAINING_LIFETIME, ///< Skip based on the remaining lifetime
 	OCV_END
 };
 
