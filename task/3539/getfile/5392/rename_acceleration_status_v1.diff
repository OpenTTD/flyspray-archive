Index: src/train.h
===================================================================
--- src/train.h	(revision 18839)
+++ src/train.h	(working copy)
@@ -94,9 +94,9 @@
 };
 
 /** What type of acceleration should we do? */
-enum AccelType {
-	AM_ACCEL, ///< We want to go faster, if possible ofcourse
-	AM_BRAKE  ///< We want to stop
+enum AccelStatus {
+	AS_ACCEL, ///< We want to go faster, if possible ofcourse
+	AS_BRAKE  ///< We want to stop
 };
 
 /**
@@ -444,9 +444,9 @@
 	 * Checks the current acceleration status of this vehicle.
 	 * @return Acceleration status.
 	 */
-	FORCEINLINE AccelType GetAccelerationStatus() const
+	FORCEINLINE AccelStatus GetAccelerationStatus() const
 	{
-		return (this->vehstatus & VS_STOPPED) || HasBit(this->flags, VRF_REVERSING) || HasBit(this->flags, VRF_TRAIN_STUCK) ? AM_BRAKE : AM_ACCEL;
+		return (this->vehstatus & VS_STOPPED) || HasBit(this->flags, VRF_REVERSING) || HasBit(this->flags, VRF_TRAIN_STUCK) ? AS_BRAKE : AS_ACCEL;
 	}
 
 	/**
Index: src/train_cmd.cpp
===================================================================
--- src/train_cmd.cpp	(revision 18839)
+++ src/train_cmd.cpp	(working copy)
@@ -527,7 +527,7 @@
 	resistance *= 4; //[N]
 
 	/* This value allows to know if the vehicle is accelerating or braking. */
-	AccelType mode = this->GetAccelerationStatus();
+	AccelStatus mode = this->GetAccelerationStatus();
 
 	const int max_te = this->tcache.cached_max_te; // [N]
 	int force;
@@ -536,17 +536,17 @@
 			force = power / speed; //[N]
 			force *= 22;
 			force /= 10;
-			if (mode == AM_ACCEL && force > max_te) force = max_te;
+			if (mode == AS_ACCEL && force > max_te) force = max_te;
 		} else {
 			force = power / 25;
 		}
 	} else {
 		/* "kickoff" acceleration */
-		force = (mode == AM_ACCEL && !maglev) ? min(max_te, power) : power;
+		force = (mode == AS_ACCEL && !maglev) ? min(max_te, power) : power;
 		force = max(force, (mass * 8) + resistance);
 	}
 
-	if (mode == AM_ACCEL) {
+	if (mode == AS_ACCEL) {
 		return (force - resistance) / (mass * 2);
 	} else {
 		return min(-force - resistance, -10000) / mass;
@@ -2941,7 +2941,7 @@
 
 	switch (_settings_game.vehicle.train_acceleration_model) {
 		default: NOT_REACHED();
-		case TAM_ORIGINAL: accel = this->acceleration * (this->GetAccelerationStatus() == AM_BRAKE) ? -4 : 2; break;
+		case TAM_ORIGINAL: accel = this->acceleration * (this->GetAccelerationStatus() == AS_BRAKE) ? -4 : 2; break;
 		case TAM_REALISTIC:
 			this->max_speed = this->GetCurrentMaxSpeed();
 			accel = this->GetAcceleration();
