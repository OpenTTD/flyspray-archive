Index: src/lang/english.txt
===================================================================
--- src/lang/english.txt	(Revision 10081)
+++ src/lang/english.txt	(Arbeitskopie)
@@ -1199,9 +1199,6 @@
 STR_HEADING_FOR_WAYPOINT                                        :{LTBLUE}Heading for {WAYPOINT}
 STR_HEADING_FOR_WAYPOINT_VEL                                    :{LTBLUE}Heading for {WAYPOINT}, {VELOCITY}
 
-STR_GO_TO_WAYPOINT                                              :Go via {WAYPOINT}
-STR_GO_NON_STOP_TO_WAYPOINT                                     :Go non-stop via {WAYPOINT}
-
 STR_WAYPOINTNAME_CITY                                           :Waypoint {TOWN}
 STR_WAYPOINTNAME_CITY_SERIAL                                    :Waypoint {TOWN} #{COMMA}
 STR_LANDINFO_WAYPOINT                                           :Waypoint
@@ -2587,25 +2584,32 @@
 STR_8801_CITIZENS_CELEBRATE_FIRST                               :{BLACK}{BIGFONT}Citizens celebrate . . .{}First train arrives at {STATION}!
 STR_8802_DETAILS                                                :{WHITE}{STRING1} (Details)
 STR_8803_TRAIN_IN_THE_WAY                                       :{WHITE}Train in the way
-STR_8804                                                        :{SETX 10}{COMMA}: {STRING1} {STRING1}
-STR_8805                                                        :{RIGHTARROW}{SETX 10}{COMMA}: {STRING1} {STRING1}
-STR_8806_GO_TO                                                  :Go to {STATION}
-STR_8807_GO_TO_TRANSFER                                         :Go to {STATION} (Transfer and take cargo)
-STR_8808_GO_TO_UNLOAD                                           :Go to {STATION} (Unload)
-STR_8809_GO_TO_TRANSFER_UNLOAD                                  :Go to {STATION} (Transfer and leave empty)
-STR_880A_GO_TO_LOAD                                             :Go to {STATION} (Load)
-STR_880B_GO_TO_TRANSFER_LOAD                                    :Go to {STATION} (Transfer and wait for full load)
-STR_880C_GO_NON_STOP_TO                                         :Go non-stop to {STATION}
-STR_880D_GO_TO_NON_STOP_TRANSFER                                :Go non-stop to {STATION} (Transfer and take cargo)
-STR_880E_GO_NON_STOP_TO_UNLOAD                                  :Go non-stop to {STATION} (Unload)
-STR_880F_GO_TO_NON_STOP_TRANSFER_UNLOAD                         :Go non-stop to {STATION} (Transfer and leave empty)
-STR_8810_GO_NON_STOP_TO_LOAD                                    :Go non-stop to {STATION} (Load)
-STR_8811_GO_TO_NON_STOP_TRANSFER_LOAD                           :Go non-stop to {STATION} (Transfer and wait for full load)
-STR_GO_TO_TRAIN_DEPOT                                           :Go to {TOWN} Train Depot
-STR_SERVICE_AT_TRAIN_DEPOT                                      :Service at {TOWN} Train Depot
-STR_880F_GO_NON_STOP_TO_TRAIN_DEPOT                             :Go non-stop to {TOWN} Train Depot
-STR_SERVICE_NON_STOP_AT_TRAIN_DEPOT                             :Service non-stop at {TOWN} Train Depot
 
+##### New Orders display
+STR_8804                                                        :{SETX 10}{COMMA}: {STRING2}
+STR_8805                                                        :{RIGHTARROW}{SETX 10}{COMMA}: {STRING2}
+
+STR_ORDER_GO_TO                                                 :Go to {STRING2} {STRING}
+STR_ORDER_GO_NON_STOP_TO                                        :Go non-stop to {STRING2} {STRING}
+STR_ORDER_GO_VIA                                                :Go via {STRING2} {STRING}
+STR_ORDER_GO_NON_STOP_VIA                                       :Go non-stop via {STRING2} {STRING}
+
+STR_ORDER_TARGET_STATION                                        :{STATION}
+STR_ORDER_TARGET_HANGAR                                         :{STATION} Hangar
+STR_ORDER_TARGET_ROADVEH_DEPOT                                  :{TOWN} Road Vehicle Depot
+STR_ORDER_TARGET_SHIPYARD                                       :{TOWN} Shipyard
+STR_ORDER_TARGET_TRAIN_DEPOT                                    :{TOWN} Train Depot
+STR_ORDER_TARGET_WAYPOINT                                       :{WAYPOINT}
+
+STR_ORDER_ACTION_FULL_LOAD                                      :(Load)
+STR_ORDER_ACTION_UNLOAD                                         :(Unload)
+STR_ORDER_ACTION_TRANSFER                                       :(Transfer and take cargo)
+STR_ORDER_ACTION_TRANSFER_FULL_LOAD                             :(Transfer and wait for load)
+STR_ORDER_ACTION_TRANSFER_UNLOAD                                :(Transfer and leave empty)
+STR_ORDER_ACTION_SERVICE                                        :(Service)
+STR_ORDER_ACTION_REFIT                                          :(Refit to {STRING})
+##### New Orders display
+
 STR_HEADING_FOR_TRAIN_DEPOT                                     :{ORANGE}Heading for {TOWN} Train Depot
 STR_HEADING_FOR_TRAIN_DEPOT_VEL                                 :{ORANGE}Heading for {TOWN} Train Depot, {VELOCITY}
 STR_HEADING_FOR_TRAIN_DEPOT_SERVICE                             :{LTBLUE}Service at {TOWN} Train Depot
@@ -2792,8 +2796,6 @@
 STR_9035_RENAME_ROAD_VEHICLE_TYPE                               :{BLACK}Rename road vehicle type
 STR_9036_RENAME_ROAD_VEHICLE_TYPE                               :{WHITE}Rename road vehicle type
 STR_9037_CAN_T_RENAME_ROAD_VEHICLE                              :{WHITE}Can't rename road vehicle type...
-STR_9038_GO_TO_ROADVEH_DEPOT                                    :Go to {TOWN} Road Vehicle Depot
-STR_SERVICE_AT_ROADVEH_DEPOT                                    :Service at {TOWN} Road Vehicle Depot
 
 STR_REFIT_ROAD_VEHICLE_TO_CARRY                                 :{BLACK}Refit road vehicle to carry a different cargo type
 STR_REFIT_ROAD_VEHICLE                                          :{BLACK}Refit road vehicle
@@ -2869,8 +2871,6 @@
 STR_9840_NEW_CAPACITY_COST_OF_REFIT                             :{BLACK}New capacity: {GOLD}{CARGO}{}{BLACK}Cost of refit: {GOLD}{CURRENCY}
 STR_9841_CAN_T_REFIT_SHIP                                       :{WHITE}Can't refit ship...
 STR_9842_REFITTABLE                                             :(refittable)
-STR_GO_TO_SHIP_DEPOT                                            :Go to {TOWN} Ship Depot
-SERVICE_AT_SHIP_DEPOT                                           :Service at {TOWN} Ship Depot
 
 ##id 0xA000
 STR_A000_AIRPORTS                                               :{WHITE}Airports
@@ -2941,8 +2941,6 @@
 STR_A040_SELECT_CARGO_TYPE_TO_CARRY                             :{GOLD}Select cargo type to carry:
 STR_A041_NEW_CAPACITY_COST_OF_REFIT                             :{BLACK}New capacity: {GOLD}{STRING1}{}{BLACK}Cost of refit: {GOLD}{CURRENCY}
 STR_A042_CAN_T_REFIT_AIRCRAFT                                   :{WHITE}Can't refit aircraft...
-STR_GO_TO_AIRPORT_HANGAR                                        :Go to {STATION} Hangar
-SERVICE_AT_AIRPORT_HANGAR                                       :Service at {STATION} Hangar
 
 ##id 0xB000
 STR_B000_ZEPPELIN_DISASTER_AT                                   :{BLACK}{BIGFONT}Zeppelin disaster at {STATION}!
Index: src/order_gui.cpp
===================================================================
--- src/order_gui.cpp	(Revision 10081)
+++ src/order_gui.cpp	(Arbeitskopie)
@@ -86,24 +86,6 @@
 	return (sel <= v->num_orders && sel >= 0) ? sel : INVALID_ORDER;
 }
 
-static StringID StationOrderStrings[] = {
-	STR_8806_GO_TO,
-	STR_8807_GO_TO_TRANSFER,
-	STR_8808_GO_TO_UNLOAD,
-	STR_8809_GO_TO_TRANSFER_UNLOAD,
-	STR_880A_GO_TO_LOAD,
-	STR_880B_GO_TO_TRANSFER_LOAD,
-	STR_NULL,
-	STR_NULL,
-	STR_880C_GO_NON_STOP_TO,
-	STR_880D_GO_TO_NON_STOP_TRANSFER,
-	STR_880E_GO_NON_STOP_TO_UNLOAD,
-	STR_880F_GO_TO_NON_STOP_TRANSFER_UNLOAD,
-	STR_8810_GO_NON_STOP_TO_LOAD,
-	STR_8811_GO_TO_NON_STOP_TRANSFER_LOAD,
-	STR_NULL
-};
-
 static void DrawOrdersWindow(Window *w)
 {
 	const Vehicle *v;
@@ -180,9 +162,11 @@
 
 	y = 15;
 
+	/* Draw the current visible orders */
 	i = w->vscroll.pos;
 	order = GetVehicleOrder(v, i);
 	while (order != NULL) {
+		/* Draw the current order with the triangle */
 		str = (v->cur_order_index == i) ? STR_8805 : STR_8804;
 		SetDParam(3, STR_EMPTY);
 
@@ -190,57 +174,126 @@
 			SetDParam(1, 6);
 
 			switch (order->type) {
-				case OT_GOTO_STATION:
-					SetDParam(1, StationOrderStrings[order->flags]);
-					SetDParam(2, order->dest);
-					break;
+				case OT_GOTO_STATION: {
+					/* Goto cases:
+					 * @li: go non-stop to (don't stop at intermediate stations)
+					 * @li: go via (don't stop at the target station)
+					 * @li: go to (normal behaviour)
+					 */
+					if (HASBIT(order->flags, OFB_NON_STOP)) {
+						SetDParam(1, (_patches.new_nonstop == true) ? STR_ORDER_GO_VIA : STR_ORDER_GO_NON_STOP_TO);
+					} else {
+						SetDParam(1, STR_ORDER_GO_TO);
+					}
 
-				case OT_GOTO_DEPOT: {
-					StringID s = STR_NULL;
+					/* Target */
+					SetDParam(2, STR_ORDER_TARGET_STATION);
+					SetDParam(3, order->dest);
 
-					if (v->type == VEH_AIRCRAFT) {
-						s = STR_GO_TO_AIRPORT_HANGAR;
-						SetDParam(2, order->dest);
+					/* Action cases:
+					 * @li: transfer & full load
+					 * @li: transfer & unload
+					 * @li: transfer
+					 * @li: full load
+					 * @li: unload
+					 * @li: normal behavior
+					 */
+					if (HASBIT(order->flags, OFB_TRANSFER)) {
+						if (HASBIT(order->flags, OFB_FULL_LOAD)) {
+							SetDParam(5, STR_ORDER_ACTION_TRANSFER_FULL_LOAD);
+						} else if (HASBIT(order->flags, OFB_UNLOAD)) {
+							SetDParam(5, STR_ORDER_ACTION_TRANSFER_UNLOAD);
+						} else {
+							SetDParam(5, STR_ORDER_ACTION_TRANSFER);
+						}
 					} else {
-						SetDParam(2, GetDepot(order->dest)->town_index);
-
-						switch (v->type) {
-							case VEH_TRAIN: s = (order->flags & OF_NON_STOP) ? STR_880F_GO_NON_STOP_TO_TRAIN_DEPOT : STR_GO_TO_TRAIN_DEPOT; break;
-							case VEH_ROAD:  s = STR_9038_GO_TO_ROADVEH_DEPOT; break;
-							case VEH_SHIP:  s = STR_GO_TO_SHIP_DEPOT; break;
-							default: break;
+						if (HASBIT(order->flags, OFB_FULL_LOAD)) {
+							SetDParam(5, STR_ORDER_ACTION_FULL_LOAD);
+						} else if (HASBIT(order->flags, OFB_UNLOAD)) {
+							SetDParam(5, STR_ORDER_ACTION_UNLOAD);
+						} else {
+							SetDParam(5, STR_EMPTY);
 						}
 					}
 
-					if (order->flags & OF_FULL_LOAD) s++; /* service at */
+					break;
+				}
 
-					SetDParam(1, s);
-					if (order->refit_cargo < NUM_CARGO) {
-						SetDParam(3, STR_REFIT_ORDER);
-						SetDParam(4, GetCargo(order->refit_cargo)->name);
+				case OT_GOTO_DEPOT: {
+					/* Goto cases:
+					 * @li: go non-stop to (don't stop at intermediate stations)
+					 * @li: go to (normal behaviour)
+					 */
+					SetDParam(1, HASBIT(order->flags, OFB_NON_STOP) ? STR_ORDER_GO_NON_STOP_TO : STR_ORDER_GO_TO);
+
+					/* Target differs per veh->type */
+					switch (v->type) {
+						case VEH_TRAIN:
+							SetDParam(2, STR_ORDER_TARGET_TRAIN_DEPOT);
+							SetDParam(3, GetDepot(order->dest)->town_index);
+							break;
+						case VEH_ROAD:
+							SetDParam(2, STR_ORDER_TARGET_ROADVEH_DEPOT);
+							SetDParam(3, GetDepot(order->dest)->town_index);
+							break;
+						case VEH_SHIP:
+							SetDParam(2, STR_ORDER_TARGET_SHIPYARD);
+							SetDParam(3, GetDepot(order->dest)->town_index);
+							break;
+						case VEH_AIRCRAFT:
+							SetDParam(2, STR_ORDER_TARGET_HANGAR);
+							SetDParam(3, order->dest);
+							break;
+						default: NOT_REACHED();
+					}
+
+					/* Action cases:
+					 * @li: service
+					 * @li: refit to cargo
+					 * @li: normal behavior
+					 */
+					if (HASBIT(order->flags, OFB_FULL_LOAD)) {
+						SetDParam(5, STR_ORDER_ACTION_SERVICE);
+					} else if (order->refit_cargo < NUM_CARGO) {
+						SetDParam(5, STR_ORDER_ACTION_REFIT);
+						SetDParam(6, GetCargo(order->refit_cargo)->name);
 					} else {
-						SetDParam(3, STR_EMPTY);
+						SetDParam(5, STR_EMPTY);
 					}
+
 					break;
 				}
 
-				case OT_GOTO_WAYPOINT:
-					SetDParam(1, (order->flags & OF_NON_STOP) ? STR_GO_NON_STOP_TO_WAYPOINT : STR_GO_TO_WAYPOINT);
+				case OT_GOTO_WAYPOINT: {
+					/* Goto cases:
+					 * @li: go via (don't stop at the target station)
+					 * @li: go non-stop via (don't stop at intermediate and the target station)
+					 */
+					SetDParam(1, HASBIT(order->flags, OFB_NON_STOP) ? STR_ORDER_GO_NON_STOP_VIA : STR_ORDER_GO_VIA);
+
+					/* Target */
+					SetDParam(2, STR_ORDER_TARGET_WAYPOINT);
+					SetDParam(3, order->dest);
+
+					/* No actions possible for this type */
+					SetDParam(5, STR_EMPTY);
+
+					break;
+				}
+
+				case OT_DUMMY:
+					SetDParam(1, STR_INVALID_ORDER);
 					SetDParam(2, order->dest);
 					break;
 
 				default: break;
 			}
 
+			/* Draw selected order white instead of black */
 			color = (i == WP(w,order_d).sel) ? 0xC : 0x10;
 			SetDParam(0, i + 1);
-			if (order->type != OT_DUMMY) {
-				DrawString(2, y, str, color);
-			} else {
-				SetDParam(1, STR_INVALID_ORDER);
-				SetDParam(2, order->dest);
-				DrawString(2, y, str, color);
-			}
+			DrawString(2, y, str, color);
+
 			y += 10;
 		}
 
@@ -248,6 +301,7 @@
 		order = order->next;
 	}
 
+	/* Draw the information line */
 	if (i - w->vscroll.pos < w->vscroll.cap) {
 		str = shared_orders ? STR_END_OF_SHARED_ORDERS : STR_882A_END_OF_ORDERS;
 		color = (i == WP(w,order_d).sel) ? 0xC : 0x10;
