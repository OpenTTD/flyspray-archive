Index: src/lang/english.txt
===================================================================
--- src/lang/english.txt	(revision 11755)
+++ src/lang/english.txt	(working copy)
@@ -2764,6 +2764,7 @@
 STR_TIMETABLE_RESET_LATENESS_TOOLTIP                            :{BLACK}Reset the lateness counter, so the vehicle will be on time
 STR_SERVICE_HINT                                                :{BLACK}Skip this order unless a service is needed
 STR_VEHICLE_INFO_COST_WEIGHT_SPEED_POWER                        :{BLACK}Cost: {CURRENCY} Weight: {WEIGHT_S}{}Speed: {VELOCITY}  Power: {POWER}{}Running Cost: {CURRENCY}/yr{}Capacity: {CARGO}
+STR_VEHICLE_INFO_COST_WEIGHT_SPEED_POWER_MAX_TE                 :{BLACK}Cost: {CURRENCY} Weight: {WEIGHT_S}{}Speed: {VELOCITY}  Power: {POWER}  Max. T.E.: {7:FORCE}{}Running Cost: {CURRENCY}/yr{}Capacity: {CARGO}
 STR_885C_BROKEN_DOWN                                            :{RED}Broken down
 STR_885D_AGE_RUNNING_COST_YR                                    :{BLACK}Age: {LTBLUE}{STRING2}{BLACK}   Running Cost: {LTBLUE}{CURRENCY}/yr
 STR_VEHICLE_INFO_WEIGHT_POWER_MAX_SPEED                         :{BLACK}Weight: {LTBLUE}{WEIGHT_S}  {BLACK}Power: {LTBLUE}{POWER}{BLACK} Max. speed: {LTBLUE}{VELOCITY}
Index: src/engine_gui.cpp
===================================================================
--- src/engine_gui.cpp	(revision 11755)
+++ src/engine_gui.cpp	(working copy)
@@ -85,7 +85,7 @@
 
 		width = w->width;
 		dei->engine_proc(width >> 1, 100, engine, 0);
-		dei->info_proc(engine, width >> 1, 130, width - 52);
+		dei->info_proc(engine, width >> 1, 130, width - 2);
 		break;
 	}
 
@@ -125,6 +125,7 @@
 	SetDParam(2, rvi->max_speed * 10 / 16);
 	SetDParam(3, rvi->power << multihead);
 	SetDParam(1, rvi->weight << multihead);
+	SetDParam(7, (rvi->weight << multihead) * 10 * rvi->tractive_effort / 256);
 
 	SetDParam(4, rvi->running_cost_base * _price.running_rail[rvi->running_cost_class] >> 8 << multihead);
 
@@ -134,7 +135,8 @@
 	} else {
 		SetDParam(5, CT_INVALID);
 	}
-	DrawStringMultiCenter(x, y, STR_VEHICLE_INFO_COST_WEIGHT_SPEED_POWER, maxw);
+
+	DrawStringMultiCenter(x, y, _patches.realistic_acceleration ? STR_VEHICLE_INFO_COST_WEIGHT_SPEED_POWER_MAX_TE : STR_VEHICLE_INFO_COST_WEIGHT_SPEED_POWER, maxw);
 }
 
 static void DrawAircraftEngineInfo(EngineID engine, int x, int y, int maxw)
@@ -199,5 +201,5 @@
 
 	dei->engine_proc(w->width >> 1, 88, engine, 0);
 	GfxFillRect(25, 56, w->width - 56, 112, PALETTE_TO_STRUCT_GREY | (1 << USE_COLORTABLE));
-	dei->info_proc(engine, w->width >> 1, 129, w->width - 52);
+	dei->info_proc(engine, w->width >> 1, 129, w->width - 2);
 }
