Only in trunkos2: .deps
Only in trunk: .svn
diff -ur trunk/Makefile trunkos2/Makefile
--- trunk/Makefile	2006-12-09 11:44:28.000000000 +1030
+++ trunkos2/Makefile	2006-12-09 16:39:32.000000000 +1030
@@ -255,16 +255,26 @@
 # Executable file extension
 ifdef WIN32
 EXE=.exe
+endif
+
+ifdef OS2
+EXE=.exe
 else
 EXE=
 endif
 
+
 # Set output executable names
+ifdef OS2
+TTD=openttd.exe
+ENDIAN_CHECK=endian_check.exe
+STRGEN=strgen/strgen.exe
+else
 TTD=openttd$(EXE)
 ENDIAN_CHECK=endian_check$(EXE)
 STRGEN=strgen/strgen$(EXE)
 OSXAPP="OpenTTD.app"
-
+endif
 ifdef RELEASE
 REV:=$(RELEASE)
 else
Only in trunkos2: Makefile.config
Only in trunk/ai: .svn
Only in trunkos2/ai: ai.o
Only in trunk/ai/default: .svn
Only in trunkos2/ai/default: default.o
Only in trunk/ai/trolly: .svn
Only in trunkos2/ai/trolly: build.o
Only in trunkos2/ai/trolly: pathfinder.o
Only in trunkos2/ai/trolly: shared.o
Only in trunkos2/ai/trolly: trolly.o
Only in trunkos2: aircraft_cmd.o
Only in trunkos2: aircraft_gui.o
Only in trunkos2: airport.o
Only in trunkos2: airport_gui.o
Only in trunkos2: aystar.o
Only in trunkos2: bmp.o
Only in trunkos2: bridge_gui.o
Only in trunkos2: bridge_map.o
Only in trunkos2: build.log
Only in trunkos2: build_vehicle_gui.o
Only in trunkos2: callback_table.o
Only in trunkos2: clear_cmd.o
Only in trunkos2: command.o
Only in trunkos2: conf.cmd
diff -ur trunk/configure trunkos2/configure
--- trunk/configure	2006-12-09 11:44:28.000000000 +1030
+++ trunkos2/configure	2006-12-09 11:46:56.000000000 +1030
@@ -20,7 +20,7 @@
 	echo " --host-cxx          Sets the C++ host-compiler          []"
 	echo " --os                Sets the OS. Listens to:            [detected]"
 	echo "                        UNIX, OSX, FREEBSD, MORPHOS"
-	echo "                        BEOS, SUNOS, CYGWIN, MINGW"
+	echo "                        BEOS, SUNOS, CYGWIN, MINGW, OS2"
 	echo " --windres           Sets the windres (Windows)          [windres]"
 	echo " --force-le          Force LE platform                   [no]"
 	echo " --force-be          Force BE platform                   [no]"
@@ -277,6 +277,9 @@
 		BEOS)
 			PARAM="$PARAM BEOS=1 UNIX=1"
 			;;
+		OS2)
+			PARAM="$PARAM OS2=1 UNIX=1"
+			;;
 		SUNOS)
 			PARAM="$PARAM SUNOS=1 UNIX=1"
 			;;
Only in trunkos2: configure.log
Only in trunkos2: console.o
diff -ur trunk/console_cmds.c trunkos2/console_cmds.c
--- trunk/console_cmds.c	2006-12-09 11:44:28.000000000 +1030
+++ trunkos2/console_cmds.c	2006-12-09 16:54:24.000000000 +1030
@@ -187,7 +187,7 @@
 	if (argc == 2) {
 		char buf[200];
 
-		snprintf(buf, lengthof(buf), "%s%s%s.sav", _path.save_dir, PATHSEP, argv[1]);
+		snprintf(buf, lengthof(buf), "%s%s%s.sav", __path.save_dir, PATHSEP, argv[1]);
 		IConsolePrint(_icolour_def, "Saving map...");
 
 		if (SaveOrLoad(buf, SL_SAVE) != SL_OK) {
Only in trunkos2: console_cmds.o
Only in trunkos2: currency.o
Only in trunk/data: .svn
Only in trunkos2: date.o
Only in trunkos2: debug.o
Only in trunkos2: dedicated.o
Only in trunkos2: depot.o
Only in trunkos2: depot_gui.o
Only in trunkos2: disaster_cmd.o
Only in trunkos2: dock_gui.o
Only in trunk/docs: .svn
diff -ur trunk/driver.c trunkos2/driver.c
--- trunk/driver.c	2006-12-09 11:44:28.000000000 +1030
+++ trunkos2/driver.c	2006-12-09 17:05:24.000000000 +1030
@@ -45,7 +45,7 @@
 #ifdef __BEOS__
 	M("bemidi",  "BeOS MIDI Driver",        &_bemidi_music_driver),
 #endif
-#ifdef __OS2__
+#if defined(__OS2__)&&!defined(__INNOTEK_LIBC__)
 	M("os2",     "OS/2 Music Driver",       &_os2_music_driver),
 #endif
 #ifdef WIN32_ENABLE_DIRECTMUSIC_SUPPORT
Only in trunkos2: driver.o
Only in trunkos2: dummy_land.o
Only in trunkos2: economy.o
Only in trunkos2: elrail.o
Only in trunkos2: endian_check
Only in trunkos2: endian_check.exe
Only in trunkos2: endian_host.h
Only in trunkos2: endian_target.h
Only in trunkos2: engine.o
Only in trunkos2: engine_gui.o
diff -ur trunk/fileio.c trunkos2/fileio.c
--- trunk/fileio.c	2006-12-09 11:44:32.000000000 +1030
+++ trunkos2/fileio.c	2006-12-09 16:54:32.000000000 +1030
@@ -117,19 +117,19 @@
 	FILE *f;
 	char buf[MAX_PATH];
 
-	snprintf(buf, lengthof(buf), "%s%s", _path.data_dir, filename);
+	snprintf(buf, lengthof(buf), "%s%s", __path.data_dir, filename);
 
 	f = fopen(buf, "rb");
 #if !defined(WIN32)
 	if (f == NULL) {
-		strtolower(buf + strlen(_path.data_dir) - 1);
+		strtolower(buf + strlen(__path.data_dir) - 1);
 		f = fopen(buf, "rb");
 
 #if defined SECOND_DATA_DIR
 		// tries in the 2nd data directory
 		if (f == NULL) {
-			snprintf(buf, lengthof(buf), "%s%s", _path.second_data_dir, filename);
-			strtolower(buf + strlen(_path.second_data_dir) - 1);
+			snprintf(buf, lengthof(buf), "%s%s", __path.second_data_dir, filename);
+			strtolower(buf + strlen(__path.second_data_dir) - 1);
 			f = fopen(buf, "rb");
 		}
 #endif
@@ -143,7 +143,7 @@
 {
 	FILE *f = FioFOpenFile(filename);
 
-	if (f == NULL) error("Cannot open file '%s%s'", _path.data_dir, filename);
+	if (f == NULL) error("Cannot open file '%s%s'", __path.data_dir, filename);
 
 	FioCloseFile(slot); // if file was opened before, close it
 	_fio.handles[slot] = f;
Only in trunkos2: fileio.o
diff -ur trunk/fios.c trunkos2/fios.c
--- trunk/fios.c	2006-12-09 11:44:28.000000000 +1030
+++ trunkos2/fios.c	2006-12-09 16:54:40.000000000 +1030
@@ -324,7 +324,7 @@
 
 	if (_fios_save_path == NULL) {
 		_fios_save_path = malloc(MAX_PATH);
-		ttd_strlcpy(_fios_save_path, _path.save_dir, MAX_PATH);
+		ttd_strlcpy(_fios_save_path, __path.save_dir, MAX_PATH);
 	}
 
 	_fios_path = _fios_save_path;
@@ -372,7 +372,7 @@
 
 	if (_fios_scn_path == NULL) {
 		_fios_scn_path = malloc(MAX_PATH);
-		ttd_strlcpy(_fios_scn_path, _path.scenario_dir, MAX_PATH);
+		ttd_strlcpy(_fios_scn_path, __path.scenario_dir, MAX_PATH);
 	}
 
 	_fios_path = _fios_scn_path;
@@ -403,7 +403,7 @@
 
 	if (_fios_hmap_path == NULL) {
 		_fios_hmap_path = malloc(MAX_PATH);
-		strcpy(_fios_hmap_path, _path.heightmap_dir);
+		strcpy(_fios_hmap_path, __path.heightmap_dir);
 	}
 
 	_fios_path = _fios_hmap_path;
Only in trunkos2: fios.o
Only in trunkos2: fontcache.o
Only in trunkos2: genworld.o
Only in trunkos2: genworld_gui.o
Only in trunkos2: gfx.o
diff -ur trunk/gfxinit.c trunkos2/gfxinit.c
--- trunk/gfxinit.c	2006-12-09 11:44:28.000000000 +1030
+++ trunkos2/gfxinit.c	2006-12-09 16:54:48.000000000 +1030
@@ -111,12 +111,12 @@
 	char buf[MAX_PATH];
 
 	// open file
-	snprintf(buf, lengthof(buf), "%s%s", _path.data_dir, file.filename);
+	snprintf(buf, lengthof(buf), "%s%s", __path.data_dir, file.filename);
 	f = fopen(buf, "rb");
 
 #if !defined(WIN32)
 	if (f == NULL) {
-		strtolower(buf + strlen(_path.data_dir) - 1);
+		strtolower(buf + strlen(__path.data_dir) - 1);
 		f = fopen(buf, "rb");
 	}
 #endif
Only in trunkos2: gfxinit.o
Only in trunkos2: graph_gui.o
Only in trunkos2: heightmap.o
Only in trunkos2: helpers.o
Only in trunkos2: industry_cmd.o
Only in trunkos2: industry_gui.o
Only in trunkos2: intro_gui.o
Only in trunkos2: landscape.o
Only in trunk/lang: .svn
Only in trunkos2/lang: english.lng
Only in trunkos2/lang: lang
Only in trunk/lang/unfinished: .svn
Only in trunkos2: main_gui.o
Only in trunk/makefiledir: .svn
diff -ur trunk/makefiledir/Makefile.config_writer trunkos2/makefiledir/Makefile.config_writer
--- trunk/makefiledir/Makefile.config_writer	2006-12-09 11:44:30.000000000 +1030
+++ trunkos2/makefiledir/Makefile.config_writer	2006-12-09 16:41:46.000000000 +1030
@@ -84,6 +84,7 @@
 	$(call CONFIG_LINE,FREEBSD:=$(FREEBSD))
 	$(call CONFIG_LINE,MORPHOS:=$(MORPHOS))
 	$(call CONFIG_LINE,BEOS:=$(BEOS))
+	$(call CONFIG_LINE,OS2:=$(OS2))
 	$(call CONFIG_LINE,SUNOS:=$(SUNOS))
 	$(call CONFIG_LINE,CYGWIN:=$(CYGWIN))
 	$(call CONFIG_LINE,MINGW:=$(MINGW))
Only in trunkos2: map.o
Only in trunkos2: md5.o
Only in trunk/media: .svn
Only in trunkos2: mersenne.o
Only in trunkos2: minilzo.o
Only in trunkos2: misc.o
Only in trunkos2: misc_cmd.o
diff -ur trunk/misc_gui.c trunkos2/misc_gui.c
--- trunk/misc_gui.c	2006-12-09 11:44:30.000000000 +1030
+++ trunkos2/misc_gui.c	2006-12-09 16:54:56.000000000 +1030
@@ -1346,20 +1346,20 @@
 		switch (_saveload_mode) {
 			case SLD_SAVE_GAME:
 			case SLD_LOAD_GAME:
-				ttd_strlcpy(&o_dir.name[0], _path.save_dir, sizeof(o_dir.name));
+				ttd_strlcpy(&o_dir.name[0], __path.save_dir, sizeof(o_dir.name));
 				break;
 
 			case SLD_SAVE_SCENARIO:
 			case SLD_LOAD_SCENARIO:
-				ttd_strlcpy(&o_dir.name[0], _path.scenario_dir, sizeof(o_dir.name));
+				ttd_strlcpy(&o_dir.name[0], __path.scenario_dir, sizeof(o_dir.name));
 				break;
 
 			case SLD_LOAD_HEIGHTMAP:
-				ttd_strlcpy(&o_dir.name[0], _path.heightmap_dir, sizeof(o_dir.name));
+				ttd_strlcpy(&o_dir.name[0], __path.heightmap_dir, sizeof(o_dir.name));
 				break;
 
 			default:
-				ttd_strlcpy(&o_dir.name[0], _path.personal_dir, sizeof(o_dir.name));
+				ttd_strlcpy(&o_dir.name[0], __path.personal_dir, sizeof(o_dir.name));
 		}
 		break;
 		}
Only in trunkos2: misc_gui.o
Only in trunkos2: mixer.o
Only in trunk/music: .svn
Only in trunkos2/music: extmidi.o
Only in trunkos2/music: null_m.o
Only in trunkos2: music.o
diff -ur trunk/music_gui.c trunkos2/music_gui.c
--- trunk/music_gui.c	2006-12-09 11:44:22.000000000 +1030
+++ trunkos2/music_gui.c	2006-12-09 16:55:02.000000000 +1030
@@ -90,7 +90,7 @@
 {
 	char filename[256];
 	snprintf(filename, sizeof(filename), "%s%s",
-		_path.gm_dir, origin_songs_specs[_music_wnd_cursong - 1].filename);
+		__path.gm_dir, origin_songs_specs[_music_wnd_cursong - 1].filename);
 	_music_driver->play_song(filename);
 }
 
@@ -109,7 +109,7 @@
 	do {
 		if (_playlists[msf.playlist][i] != 0) {  // Don't evaluate playlist terminator
 			snprintf(filename, sizeof(filename),  "%s%s",
-				_path.gm_dir, origin_songs_specs[(_playlists[msf.playlist][i]) - 1].filename);
+				__path.gm_dir, origin_songs_specs[(_playlists[msf.playlist][i]) - 1].filename);
 
 			/* we are now checking for the existence of that file prior
 			 * to add it to the list of available songs */
Only in trunkos2: music_gui.o
Only in trunkos2: namegen.o
Only in trunkos2: network.o
diff -ur trunk/network_client.c trunkos2/network_client.c
--- trunk/network_client.c	2006-12-09 11:44:28.000000000 +1030
+++ trunkos2/network_client.c	2006-12-09 16:55:08.000000000 +1030
@@ -457,7 +457,7 @@
 	// First packet, init some stuff
 	if (maptype == MAP_PACKET_START) {
 		// The name for the temp-map
-		snprintf(filename, lengthof(filename), "%s%snetwork_client.tmp",  _path.autosave_dir, PATHSEP);
+		snprintf(filename, lengthof(filename), "%s%snetwork_client.tmp",  __path.autosave_dir, PATHSEP);
 
 		file_pointer = fopen(filename, "wb");
 		if (file_pointer == NULL) {
Only in trunkos2: network_client.o
diff -ur trunk/network_core.h trunkos2/network_core.h
--- trunk/network_core.h	2006-12-09 11:44:30.000000000 +1030
+++ trunkos2/network_core.h	2006-12-09 16:47:16.000000000 +1030
@@ -64,7 +64,7 @@
 #		include <arpa/inet.h>
 #		include <net/if.h>
 // According to glibc/NEWS, <ifaddrs.h> appeared in glibc-2.3.
-#		if !defined(__sgi__) && !defined(SUNOS) && !defined(__MORPHOS__) && !defined(__BEOS__) \
+#		if !defined(__sgi__) && !defined(SUNOS) && !defined(__MORPHOS__) && !defined(__BEOS__) && !defined(__INNOTEK_LIBC__) \
 		   && !(defined(__GLIBC__) && (__GLIBC__ <= 2) && (__GLIBC_MINOR__ <= 2)) && !defined(__dietlibc__)
 // If for any reason ifaddrs.h does not exist on your system, comment out
 //   the following two lines and an alternative way will be used to fetch
@@ -90,7 +90,7 @@
 #	include <netdb.h>
 #endif // UNIX
 
-#ifdef __BEOS__
+#if defined(__BEOS__)
 	typedef int socklen_t;
 #endif
 
@@ -118,7 +118,9 @@
 #	define INADDR_NONE 0xffffffff
 
 typedef int socklen_t;
+#ifndef __INNOTEK_LIBC__
 typedef unsigned long in_addr_t;
+#endif /* __INNOTEK_LIBC__ */
 #endif // OS/2
 
 // MorphOS and Amiga stuff
Only in trunkos2: network_data.o
Only in trunkos2: network_gamelist.o
Only in trunkos2: network_gui.o
diff -ur trunk/network_server.c trunkos2/network_server.c
--- trunk/network_server.c	2006-12-09 11:44:32.000000000 +1030
+++ trunkos2/network_server.c	2006-12-09 16:55:14.000000000 +1030
@@ -281,7 +281,7 @@
 		Packet *p;
 
 		// Make a dump of the current game
-		snprintf(filename, lengthof(filename), "%s%snetwork_server.tmp",  _path.autosave_dir, PATHSEP);
+		snprintf(filename, lengthof(filename), "%s%snetwork_server.tmp",  __path.autosave_dir, PATHSEP);
 		if (SaveOrLoad(filename, SL_SAVE) != SL_OK) error("network savedump failed");
 
 		file_pointer = fopen(filename, "rb");
Only in trunkos2: network_server.o
Only in trunkos2: network_udp.o
Only in trunkos2: newgrf.o
Only in trunkos2: newgrf_cargo.o
diff -ur trunk/newgrf_config.c trunkos2/newgrf_config.c
--- trunk/newgrf_config.c	2006-12-09 11:44:30.000000000 +1030
+++ trunkos2/newgrf_config.c	2006-12-09 16:55:22.000000000 +1030
@@ -39,7 +39,7 @@
 	size_t len;
 
 	/* open the file */
-	snprintf(filename, lengthof(filename), "%s%s", _path.data_dir, config->filename);
+	snprintf(filename, lengthof(filename), "%s%s", __path.data_dir, config->filename);
 	f = fopen(filename, "rb");
 	if (f == NULL) return false;
 
@@ -176,7 +176,7 @@
 		} else if (sb.st_mode & S_IFREG) {
 			/* File */
 			char *ext = strrchr(filename, '.');
-			char *file = filename + strlen(_path.data_dir) + 1; // Crop base path
+			char *file = filename + strlen(__path.data_dir) + 1; // Crop base path
 
 			/* If no extension or extension isn't .grf, skip the file */
 			if (ext == NULL) continue;
@@ -226,7 +226,7 @@
 	_all_grfs = NULL;
 
 	DEBUG(grf, 1) ("[GRF] Scanning for NewGRFs");
-	num = ScanPath(_path.data_dir);
+	num = ScanPath(__path.data_dir);
 	DEBUG(grf, 1) ("[GRF] Scan complete, found %d files", num);
 }
 
Only in trunkos2: newgrf_config.o
Only in trunkos2: newgrf_engine.o
Only in trunkos2: newgrf_gui.o
Only in trunkos2: newgrf_sound.o
Only in trunkos2: newgrf_spritegroup.o
Only in trunkos2: newgrf_station.o
Only in trunkos2: newgrf_text.o
Only in trunkos2: news_gui.o
Only in trunkos2: npf.o
Only in trunkos2: oldloader.o
Only in trunkos2: oldpool.o
Only in trunkos2: openttd
diff -ur trunk/openttd.c trunkos2/openttd.c
--- trunk/openttd.c	2006-12-09 11:44:30.000000000 +1030
+++ trunkos2/openttd.c	2006-12-09 16:55:26.000000000 +1030
@@ -289,10 +289,10 @@
 	SetupColorsAndInitialWindow();
 
 	// Generate a world.
-	snprintf(filename, lengthof(filename), "%sopntitle.dat",  _path.data_dir);
+	snprintf(filename, lengthof(filename), "%sopntitle.dat",  __path.data_dir);
 #if defined SECOND_DATA_DIR
 	if (SaveOrLoad(filename, SL_LOAD) != SL_OK) {
-		snprintf(filename, lengthof(filename), "%sopntitle.dat",  _path.second_data_dir);
+		snprintf(filename, lengthof(filename), "%sopntitle.dat",  __path.second_data_dir);
 	}
 #endif
 	if (SaveOrLoad(filename, SL_LOAD) != SL_OK) {
@@ -890,7 +890,7 @@
 		const Player *p = GetPlayer(_local_player);
 		char* s = buf;
 
-		s += snprintf(buf, lengthof(buf), "%s%s", _path.autosave_dir, PATHSEP);
+		s += snprintf(buf, lengthof(buf), "%s%s", __path.autosave_dir, PATHSEP);
 
 		SetDParam(0, p->name_1);
 		SetDParam(1, p->name_2);
@@ -898,7 +898,7 @@
 		s = GetString(s, STR_4004, lastof(buf));
 		strecpy(s, ".sav", lastof(buf));
 	} else { /* generate a savegame name and number according to _patches.max_num_autosaves */
-		snprintf(buf, lengthof(buf), "%s%sautosave%d.sav", _path.autosave_dir, PATHSEP, _autosave_ctr);
+		snprintf(buf, lengthof(buf), "%s%sautosave%d.sav", __path.autosave_dir, PATHSEP, _autosave_ctr);
 
 		_autosave_ctr++;
 		if (_autosave_ctr >= _patches.max_num_autosaves) {
Only in trunkos2: openttd.exe
Only in trunkos2: openttd.o
Only in trunk/openttd.xcode: .svn
Only in trunkos2: order_cmd.o
Only in trunkos2: order_gui.o
Only in trunk/os: .svn
Only in trunk/os/debian: .svn
Only in trunk/os/debian/patches: .svn
Only in trunk/os/linux: .svn
Only in trunk/os/macosx: .svn
Only in trunk/os/morphos: .svn
Only in trunk/os/morphos/icons: .svn
Only in trunk/os/os2: .svn
Only in trunk/os/win32: .svn
Only in trunk/os/win32/installer: .svn
diff -ur trunk/os2.c trunkos2/os2.c
--- trunk/os2.c	2006-12-09 11:44:28.000000000 +1030
+++ trunkos2/os2.c	2006-12-09 16:55:36.000000000 +1030
@@ -134,11 +134,11 @@
 {
 	char *s;
 
-	_path.game_data_dir = malloc(MAX_PATH);
-	ttd_strlcpy(_path.game_data_dir, GAME_DATA_DIR, MAX_PATH);
+	__path.game_data_dir = malloc(MAX_PATH);
+	ttd_strlcpy(__path.game_data_dir, GAME_DATA_DIR, MAX_PATH);
 	#if defined SECOND_DATA_DIR
-	_path.second_data_dir = malloc(MAX_PATH);
-	ttd_strlcpy(_path.second_data_dir, SECOND_DATA_DIR, MAX_PATH);
+	__path.second_data_dir = malloc(MAX_PATH);
+	ttd_strlcpy(__path.second_data_dir, SECOND_DATA_DIR, MAX_PATH);
 	#endif
 
 #if defined(USE_HOMEDIR)
@@ -150,59 +150,59 @@
 			if (pw != NULL) homedir = pw->pw_dir;
 		}
 
-		_path.personal_dir = str_fmt("%s" PATHSEP "%s", homedir, PERSONAL_DIR);
+		__path.personal_dir = str_fmt("%s" PATHSEP "%s", homedir, PERSONAL_DIR);
 	}
 
 #else /* not defined(USE_HOMEDIR) */
 
-	_path.personal_dir = malloc(MAX_PATH);
-	ttd_strlcpy(_path.personal_dir, PERSONAL_DIR, MAX_PATH);
+	__path.personal_dir = malloc(MAX_PATH);
+	ttd_strlcpy(__path.personal_dir, PERSONAL_DIR, MAX_PATH);
 
 	// check if absolute or relative path
-	s = strchr(_path.personal_dir, '\\');
+	s = strchr(__path.personal_dir, '\\');
 
 	// add absolute path
-	if (s == NULL || _path.personal_dir != s) {
-		getcwd(_path.personal_dir, MAX_PATH);
-		s = strchr(_path.personal_dir, 0);
+	if (s == NULL || __path.personal_dir != s) {
+		getcwd(__path.personal_dir, MAX_PATH);
+		s = strchr(__path.personal_dir, 0);
 		*s++ = '\\';
 		ttd_strlcpy(s, PERSONAL_DIR, MAX_PATH);
 	}
 
 #endif /* defined(USE_HOMEDIR) */
 
-	s = strchr(_path.personal_dir, 0);
+	s = strchr(__path.personal_dir, 0);
 
 	// append a / ?
 	if (s[-1] != '\\') strcpy(s, "\\");
 
-	_path.save_dir = str_fmt("%ssave", _path.personal_dir);
-	_path.autosave_dir = str_fmt("%s\\autosave", _path.save_dir);
-	_path.scenario_dir = str_fmt("%sscenario", _path.personal_dir);
-	_path.heightmap_dir = str_fmt("%sscenario\\heightmap", _path.personal_dir);
-	_path.gm_dir = str_fmt("%sgm\\", _path.game_data_dir);
-	_path.data_dir = str_fmt("%sdata\\", _path.game_data_dir);
+	__path.save_dir = str_fmt("%ssave", __path.personal_dir);
+	__path.autosave_dir = str_fmt("%s\\autosave", __path.save_dir);
+	__path.scenario_dir = str_fmt("%sscenario", __path.personal_dir);
+	__path.heightmap_dir = str_fmt("%sscenario\\heightmap", __path.personal_dir);
+	__path.gm_dir = str_fmt("%sgm\\", __path.game_data_dir);
+	__path.data_dir = str_fmt("%sdata\\", __path.game_data_dir);
 
 	if (_config_file == NULL)
-		_config_file = str_fmt("%sopenttd.cfg", _path.personal_dir);
+		_config_file = str_fmt("%sopenttd.cfg", __path.personal_dir);
 
-	_highscore_file = str_fmt("%shs.dat", _path.personal_dir);
-	_log_file = str_fmt("%sopenttd.log", _path.personal_dir);
+	_highscore_file = str_fmt("%shs.dat", __path.personal_dir);
+	_log_file = str_fmt("%sopenttd.log", __path.personal_dir);
 
 #if defined CUSTOM_LANG_DIR
 	// sets the search path for lng files to the custom one
-	_path.lang_dir = malloc( MAX_PATH );
-	ttd_strlcpy( _path.lang_dir, CUSTOM_LANG_DIR, MAX_PATH);
+	__path.lang_dir = malloc( MAX_PATH );
+	ttd_strlcpy( __path.lang_dir, CUSTOM_LANG_DIR, MAX_PATH);
 #else
-	_path.lang_dir = str_fmt("%slang\\", _path.game_data_dir);
+	__path.lang_dir = str_fmt("%slang\\", __path.game_data_dir);
 #endif
 
 	// create necessary folders
-	mkdir(_path.personal_dir);
-	mkdir(_path.save_dir);
-	mkdir(_path.autosave_dir);
-	mkdir(_path.scenario_dir);
-	mkdir(_path.heightmap_dir);
+	mkdir(__path.personal_dir);
+	mkdir(__path.save_dir);
+	mkdir(__path.autosave_dir);
+	mkdir(__path.scenario_dir);
+	mkdir(__path.heightmap_dir);
 }
 
 /**
Only in trunkos2: os_timer.o
Only in trunkos2: pathfind.o
Only in trunkos2: player_gui.o
Only in trunkos2: players.o
Only in trunkos2: queue.o
Only in trunkos2: rail.o
Only in trunkos2: rail_cmd.o
Only in trunkos2: rail_gui.o
Only in trunkos2: rev.c
Only in trunkos2: rev.o
Only in trunkos2: road_cmd.o
Only in trunkos2: road_gui.o
Only in trunkos2: road_map.o
Only in trunkos2: roadveh_cmd.o
Only in trunkos2: roadveh_gui.o
Only in trunkos2: save
diff -ur trunk/saveload.c trunkos2/saveload.c
--- trunk/saveload.c	2006-12-09 11:44:30.000000000 +1030
+++ trunkos2/saveload.c	2006-12-09 16:55:42.000000000 +1030
@@ -1649,7 +1649,7 @@
 void DoExitSave(void)
 {
 	char buf[200];
-	snprintf(buf, sizeof(buf), "%s%sexit.sav", _path.autosave_dir, PATHSEP);
+	snprintf(buf, sizeof(buf), "%s%sexit.sav", __path.autosave_dir, PATHSEP);
 	SaveOrLoad(buf, SL_SAVE);
 }
 
Only in trunkos2: saveload.o
Only in trunk/scenario: .svn
Only in trunk/scenario/heightmap: .svn
diff -ur trunk/screenshot.c trunkos2/screenshot.c
--- trunk/screenshot.c	2006-12-09 11:44:30.000000000 +1030
+++ trunkos2/screenshot.c	2006-12-09 16:55:46.000000000 +1030
@@ -512,7 +512,7 @@
 
 	serial = 0;
 	for (;;) {
-		snprintf(filename, sizeof(filename), "%s%s", _path.personal_dir, _screenshot_name);
+		snprintf(filename, sizeof(filename), "%s%s", __path.personal_dir, _screenshot_name);
 		if (!FileExists(filename))
 			break;
 		sprintf(base, " #%d.%s", ++serial, ext);
Only in trunkos2: screenshot.o
Only in trunk/scripts: .svn
Only in trunkos2: sdl.o
Only in trunkos2: settings.o
Only in trunkos2: settings_gui.o
Only in trunkos2: ship_cmd.o
Only in trunkos2: ship_gui.o
Only in trunkos2: signs.o
Only in trunkos2: smallmap_gui.o
Only in trunk/sound: .svn
Only in trunkos2/sound: null_s.o
Only in trunkos2/sound: sdl_s.o
Only in trunkos2: sound.o
Only in trunkos2: spritecache.o
Only in trunkos2: station_cmd.o
Only in trunkos2: station_gui.o
Only in trunkos2: station_map.o
Only in trunk/strgen: .svn
Only in trunkos2/strgen: strgen.exe
Only in trunkos2: string.o
diff -ur trunk/strings.c trunkos2/strings.c
--- trunk/strings.c	2006-12-09 11:44:30.000000000 +1030
+++ trunkos2/strings.c	2006-12-09 16:55:54.000000000 +1030
@@ -1138,7 +1138,7 @@
 	char *s;
 
 	{
-		char *lang = str_fmt("%s%s", _path.lang_dir, _dynlang.ent[lang_index].file);
+		char *lang = str_fmt("%s%s", __path.lang_dir, _dynlang.ent[lang_index].file);
 		lang_pack = ReadFileToMem(lang, &len, 200000);
 		free(lang);
 	}
@@ -1225,7 +1225,7 @@
 	struct dirent *dirent;
 	int num = 0;
 
-	dir = opendir(_path.lang_dir);
+	dir = opendir(__path.lang_dir);
 	if (dir != NULL) {
 		while ((dirent = readdir(dir)) != NULL) {
 			const char *d_name = FS2OTTD(dirent->d_name);
@@ -1271,7 +1271,7 @@
 	for (i = m = 0; i != n; i++) {
 		size_t j;
 
-		char *s = str_fmt("%s%s", _path.lang_dir, files[i]);
+		char *s = str_fmt("%s%s", __path.lang_dir, files[i]);
 		in = fopen(s, "rb");
 		free(s);
 		if (in == NULL ||
Only in trunkos2: strings.o
Only in trunkos2: subsidy_gui.o
Only in trunk/table: .svn
Only in trunkos2/table: strings.h
Only in trunkos2: terraform_gui.o
Only in trunkos2: texteff.o
Only in trunkos2: tgp.o
Only in trunkos2: thread.o
Only in trunkos2: tile.o
Only in trunkos2: town_cmd.o
Only in trunkos2: town_gui.o
Only in trunkos2: train_cmd.o
Only in trunkos2: train_gui.o
Only in trunkos2: tree_cmd.o
Only in trunkos2: tunnel_map.o
Only in trunkos2: tunnelbridge_cmd.o
diff -ur trunk/unix.c trunkos2/unix.c
--- trunk/unix.c	2006-12-09 11:44:32.000000000 +1030
+++ trunkos2/unix.c	2006-12-09 16:56:16.000000000 +1030
@@ -169,11 +169,11 @@
 {
 	char *s;
 
-	_path.game_data_dir = malloc(MAX_PATH);
-	ttd_strlcpy(_path.game_data_dir, GAME_DATA_DIR, MAX_PATH);
+	__path.game_data_dir = malloc(MAX_PATH);
+	ttd_strlcpy(__path.game_data_dir, GAME_DATA_DIR, MAX_PATH);
 	#if defined SECOND_DATA_DIR
-	_path.second_data_dir = malloc(MAX_PATH);
-	ttd_strlcpy(_path.second_data_dir, SECOND_DATA_DIR, MAX_PATH);
+	__path.second_data_dir = malloc(MAX_PATH);
+	ttd_strlcpy(__path.second_data_dir, SECOND_DATA_DIR, MAX_PATH);
 	#endif
 
 #if defined(USE_HOMEDIR)
@@ -185,59 +185,59 @@
 			if (pw != NULL) homedir = pw->pw_dir;
 		}
 
-		_path.personal_dir = str_fmt("%s" PATHSEP "%s", homedir, PERSONAL_DIR);
+		__path.personal_dir = str_fmt("%s" PATHSEP "%s", homedir, PERSONAL_DIR);
 	}
 
 #else /* not defined(USE_HOMEDIR) */
 
-	_path.personal_dir = malloc(MAX_PATH);
-	ttd_strlcpy(_path.personal_dir, PERSONAL_DIR, MAX_PATH);
+	__path.personal_dir = malloc(MAX_PATH);
+	ttd_strlcpy(__path.personal_dir, PERSONAL_DIR, MAX_PATH);
 
 	// check if absolute or relative path
-	s = strchr(_path.personal_dir, '/');
+	s = strchr(__path.personal_dir, '/');
 
 	// add absolute path
-	if (s == NULL || _path.personal_dir != s) {
-		getcwd(_path.personal_dir, MAX_PATH);
-		s = strchr(_path.personal_dir, 0);
+	if (s == NULL || __path.personal_dir != s) {
+		getcwd(__path.personal_dir, MAX_PATH);
+		s = strchr(__path.personal_dir, 0);
 		*s++ = '/';
 		ttd_strlcpy(s, PERSONAL_DIR, MAX_PATH);
 	}
 
 #endif /* defined(USE_HOMEDIR) */
 
-	s = strchr(_path.personal_dir, 0);
+	s = strchr(__path.personal_dir, 0);
 
 	// append a / ?
 	if (s[-1] != '/') strcpy(s, "/");
 
-	_path.save_dir = str_fmt("%ssave", _path.personal_dir);
-	_path.autosave_dir = str_fmt("%s/autosave", _path.save_dir);
-	_path.scenario_dir = str_fmt("%sscenario", _path.personal_dir);
-	_path.heightmap_dir = str_fmt("%sscenario/heightmap", _path.personal_dir);
-	_path.gm_dir = str_fmt("%sgm/", _path.game_data_dir);
-	_path.data_dir = str_fmt("%sdata/", _path.game_data_dir);
+	__path.save_dir = str_fmt("%ssave", __path.personal_dir);
+	__path.autosave_dir = str_fmt("%s/autosave", __path.save_dir);
+	__path.scenario_dir = str_fmt("%sscenario", __path.personal_dir);
+	__path.heightmap_dir = str_fmt("%sscenario/heightmap", __path.personal_dir);
+	__path.gm_dir = str_fmt("%sgm/", __path.game_data_dir);
+	__path.data_dir = str_fmt("%sdata/", __path.game_data_dir);
 
 	if (_config_file == NULL)
-		_config_file = str_fmt("%sopenttd.cfg", _path.personal_dir);
+		_config_file = str_fmt("%sopenttd.cfg", __path.personal_dir);
 
-	_highscore_file = str_fmt("%shs.dat", _path.personal_dir);
-	_log_file = str_fmt("%sopenttd.log", _path.personal_dir);
+	_highscore_file = str_fmt("%shs.dat", __path.personal_dir);
+	_log_file = str_fmt("%sopenttd.log", __path.personal_dir);
 
 #if defined CUSTOM_LANG_DIR
 	// sets the search path for lng files to the custom one
-	_path.lang_dir = malloc( MAX_PATH );
-	ttd_strlcpy( _path.lang_dir, CUSTOM_LANG_DIR, MAX_PATH);
+	__path.lang_dir = malloc( MAX_PATH );
+	ttd_strlcpy( __path.lang_dir, CUSTOM_LANG_DIR, MAX_PATH);
 #else
-	_path.lang_dir = str_fmt("%slang/", _path.game_data_dir);
+	__path.lang_dir = str_fmt("%slang/", __path.game_data_dir);
 #endif
 
 	// create necessary folders
-	mkdir(_path.personal_dir, 0755);
-	mkdir(_path.save_dir, 0755);
-	mkdir(_path.autosave_dir, 0755);
-	mkdir(_path.scenario_dir, 0755);
-	mkdir(_path.heightmap_dir, 0755);
+	mkdir(__path.personal_dir, 0755);
+	mkdir(__path.save_dir, 0755);
+	mkdir(__path.autosave_dir, 0755);
+	mkdir(__path.scenario_dir, 0755);
+	mkdir(__path.heightmap_dir, 0755);
 }
 
 bool InsertTextBufferClipboard(Textbuf *tb)
Only in trunkos2: unix.o
Only in trunkos2: unmovable_cmd.o
diff -ur trunk/variables.h trunkos2/variables.h
--- trunk/variables.h	2006-12-09 11:44:30.000000000 +1030
+++ trunkos2/variables.h	2006-12-09 17:02:00.000000000 +1030
@@ -262,7 +262,7 @@
 	char *second_data_dir;
 } Paths;
 
-VARDEF Paths _path;
+VARDEF Paths __path;
 
 // NOSAVE: Used in palette animations only, not really important.
 VARDEF int _timer_counter;
Only in trunkos2: vehicle.o
Only in trunkos2: vehicle_gui.o
Only in trunk/video: .svn
Only in trunkos2/video: dedicated_v.o
Only in trunkos2/video: null_v.o
Only in trunkos2/video: sdl_v.o
Only in trunkos2: viewport.o
Only in trunkos2: water_cmd.o
Only in trunkos2: waypoint.o
Only in trunkos2: widget.o
diff -ur trunk/win32.c trunkos2/win32.c
--- trunk/win32.c	2006-12-09 11:44:30.000000000 +1030
+++ trunkos2/win32.c	2006-12-09 16:56:22.000000000 +1030
@@ -911,7 +911,7 @@
 	char *s, *cfg;
 	wchar_t path[MAX_PATH];
 
-	_path.personal_dir = _path.game_data_dir = cfg = malloc(MAX_PATH);
+	__path.personal_dir = __path.game_data_dir = cfg = malloc(MAX_PATH);
 	GetCurrentDirectoryW(MAX_PATH - 1, path);
 	convert_from_fs(path, cfg, MAX_PATH);
 
@@ -919,25 +919,25 @@
 	s = strchr(cfg, '\0');
 	if (s[-1] != '\\') strcpy(s, "\\");
 
-	_path.save_dir = str_fmt("%ssave", cfg);
-	_path.autosave_dir = str_fmt("%s\\autosave", _path.save_dir);
-	_path.scenario_dir = str_fmt("%sscenario", cfg);
-	_path.heightmap_dir = str_fmt("%sscenario\\heightmap", cfg);
-	_path.gm_dir = str_fmt("%sgm\\", cfg);
-	_path.data_dir = str_fmt("%sdata\\", cfg);
-	_path.lang_dir = str_fmt("%slang\\", cfg);
+	__path.save_dir = str_fmt("%ssave", cfg);
+	__path.autosave_dir = str_fmt("%s\\autosave", __path.save_dir);
+	__path.scenario_dir = str_fmt("%sscenario", cfg);
+	__path.heightmap_dir = str_fmt("%sscenario\\heightmap", cfg);
+	__path.gm_dir = str_fmt("%sgm\\", cfg);
+	__path.data_dir = str_fmt("%sdata\\", cfg);
+	__path.lang_dir = str_fmt("%slang\\", cfg);
 
 	if (_config_file == NULL)
-		_config_file = str_fmt("%sopenttd.cfg", _path.personal_dir);
+		_config_file = str_fmt("%sopenttd.cfg", __path.personal_dir);
 
-	_highscore_file = str_fmt("%shs.dat", _path.personal_dir);
-	_log_file = str_fmt("%sopenttd.log", _path.personal_dir);
+	_highscore_file = str_fmt("%shs.dat", __path.personal_dir);
+	_log_file = str_fmt("%sopenttd.log", __path.personal_dir);
 
 	// make (auto)save and scenario folder
-	CreateDirectoryW(OTTD2FS(_path.save_dir), NULL);
-	CreateDirectoryW(OTTD2FS(_path.autosave_dir), NULL);
-	CreateDirectoryW(OTTD2FS(_path.scenario_dir), NULL);
-	CreateDirectoryW(OTTD2FS(_path.heightmap_dir), NULL);
+	CreateDirectoryW(OTTD2FS(__path.save_dir), NULL);
+	CreateDirectoryW(OTTD2FS(__path.autosave_dir), NULL);
+	CreateDirectoryW(OTTD2FS(__path.scenario_dir), NULL);
+	CreateDirectoryW(OTTD2FS(__path.heightmap_dir), NULL);
 }
 
 /**
Only in trunkos2: window.o
Only in trunk/yapf: .svn
Only in trunkos2/yapf: follow_track.o
Only in trunkos2/yapf: yapf_common.o
Only in trunkos2/yapf: yapf_rail.o
Only in trunkos2/yapf: yapf_road.o
Only in trunkos2/yapf: yapf_ship.o
