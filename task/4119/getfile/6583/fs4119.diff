Index: vehicle_cmd.cpp
===================================================================
--- vehicle_cmd.cpp	(revision 20786)
+++ vehicle_cmd.cpp	(working copy)
@@ -434,7 +440,7 @@
  * @param tile Tile of the depot where the vehicles are started/stopped (only used for depots)
  * @param flags type of operation
  * @param p1 bitmask
- *   - bit 0 false = start vehicles, true = stop vehicles
+ *   - bit 0 set = start vehicles, unset = stop vehicles
  *   - bit 1 if set, then it's a vehicle list window, not a depot and Tile is ignored in this case
  * @param p2 packed VehicleListIdentifier
  * @param text unused
@@ -443,7 +449,7 @@
 CommandCost CmdMassStartStopVehicle(TileIndex tile, DoCommandFlag flags, uint32 p1, uint32 p2, const char *text)
 {
 	VehicleList list;
-	bool start_stop = HasBit(p1, 0);
+	bool do_start = HasBit(p1, 0);
 	bool vehicle_list_window = HasBit(p1, 1);
 
 	VehicleListIdentifier vli;
@@ -460,7 +466,7 @@
 	for (uint i = 0; i < list.Length(); i++) {
 		const Vehicle *v = list[i];
 
-		if (!!(v->vehstatus & VS_STOPPED) != start_stop) continue;
+		if ((bool)(v->vehstatus & VS_STOPPED) != do_start) continue;
 
 		if (!vehicle_list_window) {
 			if (vli.vtype == VEH_TRAIN) {
Index: depot_gui.cpp
===================================================================
--- depot_gui.cpp	(revision 20786)
+++ depot_gui.cpp	(working copy)
@@ -740,9 +740,11 @@
 				break;
 
 			case DEPOT_WIDGET_STOP_ALL:
-			case DEPOT_WIDGET_START_ALL:
-				DoCommandP(this->window_number, (widget == DEPOT_WIDGET_START_ALL ? (1 << 0) : 0), this->type, CMD_MASS_START_STOP);
-				break;
+			case DEPOT_WIDGET_START_ALL: {
+					VehicleListIdentifier vli(VL_STANDARD, this->type, this->owner);
+					DoCommandP(this->window_number, (widget == DEPOT_WIDGET_START_ALL ? (1 << 0) : 0), vli.Pack(), CMD_MASS_START_STOP);
+					break;
+				}
 
 			case DEPOT_WIDGET_SELL_ALL:
 				/* Only open the confimation window if there are anything to sell */
