Index: src/saveload/afterload.cpp
===================================================================
--- src/saveload/afterload.cpp	(revision 16791)
+++ src/saveload/afterload.cpp	(working copy)
@@ -1888,6 +1888,35 @@
 			}
 		}
 
+		/*
+		 * Delete invalid orders possibly present in old versions (but converted to new savegame)
+		 *
+		 * The first step is making sure all orders are valid; sometimes, when loading old savegames,
+		 * an invalid order was present, but went unnoticed. Make those invalid orders valid again.
+		 */
+		Vehicle *v;
+		FOR_ALL_VEHICLES(v) {
+			if (v->orders.list != NULL && !v->orders.list->IsValid()) {
+				v->orders.list = new (v->orders.list) OrderList(NULL, v);
+			}
+		}
+
+		/* The next step is finding all non-primary vehicles that have an order and remove those orders. */
+		OrderList *ol;
+		FOR_ALL_ORDER_LISTS(ol) {
+			for (Vehicle *v = ol->GetFirstSharedVehicle(); v != NULL; /* nothing */) {
+				Vehicle *u = v;
+				v = v->NextShared();
+				if (u->IsPrimaryVehicle()) continue;
+
+				/* This is not a primary vehicle, why should it have an order?
+				 * ... but sometimes it's in a shared order chain when it doesn't
+				 * even have an order, so make sure it does have an order list */
+				u->orders.list = ol;
+				u->RemoveFromShared();
+			}
+		}
+
 		/* Delete invalid subsidies possibly present in old versions (but converted to new savegame) */
 		for (Subsidy *s = _subsidies; s < endof(_subsidies); s++) {
 			if (s->cargo_type == CT_INVALID) continue;
