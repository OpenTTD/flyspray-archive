Index: src/industry.h
===================================================================
--- src/industry.h	(revision 15078)
+++ src/industry.h	(working copy)
@@ -12,6 +12,7 @@
 #include "economy_type.h"
 #include "map_type.h"
 #include "slope_type.h"
+#include "table/strings.h"
 #include "date_type.h"
 #include "town_type.h"
 #include "industry_type.h"
@@ -235,6 +236,42 @@
 /* industry_cmd.cpp*/
 const IndustrySpec *GetIndustrySpec(IndustryType thistype);    ///< Array of industries data
 const IndustryTileSpec *GetIndustryTileSpec(IndustryGfx gfx);  ///< Array of industry tiles data
+int GetAlternativeIndustryColor (const IndustrySpec *spec);    ///< Returns an alternative color for this industry.
+
+static const int _industry_color_converter_max = 26;
+
+static const int _industry_color_converter[_industry_color_converter_max][4] = {
+    /* Type, Original, LCD, Fancy */
+    { STR_4802_COAL_MINE,             215, 215, 181 },
+    { STR_4803_POWER_STATION,         184, 184, 184 },
+    { STR_4804_SAWMILL,               194, 194, 80 },
+    { STR_4805_FOREST,                86,  87,  87 },
+    { STR_4806_OIL_REFINERY,          191, 191, 153 },
+    { STR_4807_OIL_RIG,               152, 152, 151 },
+    { STR_4808_FACTORY,               174, 174, 170 },
+	{ STR_4809_PRINTING_WORKS,        174, 174, 96 },
+	{ STR_480A_STEEL_MILL,            10,  10,  174 },
+	{ STR_480B_FARM,                  48,  48,  177 },
+    { STR_480C_COPPER_ORE_MINE,       10, 10,  48 },
+	{ STR_480D_OIL_WELLS,             152, 152, 151 },
+	{ STR_480E_BANK,                  15,  15,  23 },
+	{ STR_4812_BANK,                  15,  15,  23 },
+	{ STR_480F_FOOD_PROCESSING_PLANT, 55, 53, 174 },
+	{ STR_4810_PAPER_MILL,            10, 10, 80 },
+	{ STR_4811_GOLD_MINE,             194, 194, 21 },
+	{ STR_4813_DIAMOND_MINE,          184, 184, 21 },
+	{ STR_4814_IRON_ORE_MINE,         55, 53, 137 },
+	{ STR_4815_FRUIT_PLANTATION,      86, 87 ,170 },
+	{ STR_4816_RUBBER_PLANTATION,     39, 39, 173 },
+	{ STR_4817_WATER_SUPPLY,          37, 37, 15 },
+	{ STR_4818_WATER_TOWER,           208, 208, 15 },
+	{ STR_4819_FACTORY,               174, 174, 170 },
+	{ STR_481A_FARM,                  48,  48,  177 },
+	{ STR_481B_LUMBER_MILL,           194, 194, 194 }
+};
+
+
+
 void ResetIndustries();
 void PlantRandomFarmField(const Industry *i);
 
Index: src/industry_cmd.cpp
===================================================================
--- src/industry_cmd.cpp	(revision 15078)
+++ src/industry_cmd.cpp	(working copy)
@@ -133,6 +133,21 @@
 	return &_industry_tile_specs[gfx];
 }
 
+/**
+ * Returns an alternative industry color.
+ */
+int GetAlternativeIndustryColor (const IndustrySpec *spec) {
+	int ic;
+
+	for (ic=0;ic<_industry_color_converter_max;ic++) {
+		if (_industry_color_converter[ic][0] == spec->name) {
+			return _industry_color_converter[ic][_settings_client.gui.industry_colors+1];
+		}
+	}
+
+	return spec->map_colour;
+}
+
 Industry::~Industry()
 {
 	if (CleaningPool()) return;
Index: src/industry_gui.cpp
===================================================================
--- src/industry_gui.cpp	(revision 15078)
+++ src/industry_gui.cpp	(working copy)
@@ -224,7 +224,7 @@
 			/* Draw the name of the industry in white is selected, otherwise, in orange */
 			DrawStringTruncated(20, y + offset, indsp->name, selected ? TC_WHITE : TC_ORANGE, max_width - 25);
 			GfxFillRect(x,     y + 1 + offset,  x + 10, y + 7 + offset, selected ? 15 : 0);
-			GfxFillRect(x + 1, y + 2 + offset,  x +  9, y + 6 + offset, indsp->map_colour);
+			GfxFillRect(x + 1, y + 2 + offset,  x +  9, y + 6 + offset, GetAlternativeIndustryColor(indsp));
 		}
 
 		if (this->selected_type == INVALID_INDUSTRYTYPE) {
Index: src/settings.cpp
===================================================================
--- src/settings.cpp	(revision 15078)
+++ src/settings.cpp	(working copy)
@@ -863,6 +863,13 @@
 	return 0;
 }
 
+static int32 InvalidateSmallMapWindow(int32 p1)
+{
+	/* FOOBAR */
+	InvalidateWindowData(WC_SMALLMAP, 0);
+	return 0;
+}
+
 static int32 CloseSignalGUI(int32 p1)
 {
 	if (p1 == 0) {
@@ -1303,6 +1310,7 @@
 	    SDT_BOOL(GameSettings, economy.inflation,                                                   0, 0,  true,                    STR_CONFIG_PATCHES_INFLATION,              NULL),
 	     SDT_VAR(GameSettings, construction.raw_industry_construction, SLE_UINT8,                   0,MS,     0,     0,       2, 0, STR_CONFIG_PATCHES_RAW_INDUSTRY_CONSTRUCTION_METHOD, InvalidateBuildIndustryWindow),
 	    SDT_BOOL(GameSettings, economy.multiple_industry_per_town,                                  0, 0, false,                    STR_CONFIG_PATCHES_MULTIPINDTOWN,          NULL),
+		SDTC_VAR(              gui.industry_colors,                  SLE_UINT8, S, MS, 0, 0, 2, 0, STR_CONFIG_PATCHES_INDUSTRY_COLORS,                InvalidateSmallMapWindow),
 	    SDT_BOOL(GameSettings, economy.same_industry_close,                                         0, 0, false,                    STR_CONFIG_PATCHES_SAMEINDCLOSE,           NULL),
 	    SDT_BOOL(GameSettings, economy.bribe,                                                       0, 0,  true,                    STR_CONFIG_PATCHES_BRIBE,                  NULL),
 	SDT_CONDBOOL(GameSettings, economy.exclusive_rights,                        79, SL_MAX_VERSION, 0, 0,  true,                    STR_CONFIG_PATCHES_ALLOW_EXCLUSIVE,        NULL),
Index: src/settings_gui.cpp
===================================================================
--- src/settings_gui.cpp	(revision 15078)
+++ src/settings_gui.cpp	(working copy)
@@ -1102,6 +1102,7 @@
 	PatchEntry("construction.raw_industry_construction"),
 	PatchEntry("economy.multiple_industry_per_town"),
 	PatchEntry("economy.same_industry_close"),
+	PatchEntry("gui.industry_colors"),
 	PatchEntry("game_creation.oil_refinery_limit"),
 };
 /** Industries sub-page */
Index: src/settings_type.h
===================================================================
--- src/settings_type.h	(revision 15078)
+++ src/settings_type.h	(working copy)
@@ -91,7 +91,7 @@
 	bool   station_dragdrop;                 ///< whether drag and drop is enabled for stations
 	bool   station_show_coverage;            ///< whether to highlight coverage area
 	bool   persistent_buildingtools;            ///< keep the building tools active after usage
-
+	byte   industry_colors;				     ///< use better visible industry colors
 	uint16 console_backlog_timeout;          ///< the minimum amount of time items should be in the console backlog before they will be removed in ~3 seconds granularity.
 	uint16 console_backlog_length;           ///< the minimum amount of items in the console backlog before items will be removed.
 #ifdef ENABLE_NETWORK
Index: src/smallmap_gui.cpp
===================================================================
--- src/smallmap_gui.cpp	(revision 15078)
+++ src/smallmap_gui.cpp	(working copy)
@@ -161,7 +161,13 @@
 		indsp = GetIndustrySpec(i);
 		if (indsp->enabled) {
 			_legend_from_industries[j].legend = indsp->name;
-			_legend_from_industries[j].colour = indsp->map_colour;
+
+			if (_settings_client.gui.industry_colors == 0) {
+				_legend_from_industries[j].colour = indsp->map_colour;
+			} else {
+				_legend_from_industries[j].colour = GetAlternativeIndustryColor(indsp);
+			}
+
 			_legend_from_industries[j].type = i;
 			_legend_from_industries[j].show_on_map = true;
 			_legend_from_industries[j].col_break = false;
@@ -373,7 +379,13 @@
 	if (t == MP_INDUSTRY) {
 		/* If industry is allowed to be seen, use its color on the map */
 		if (_legend_from_industries[_industry_to_list_pos[GetIndustryByTile(tile)->type]].show_on_map) {
-			return GetIndustrySpec(GetIndustryByTile(tile)->type)->map_colour * 0x01010101;
+
+			if (_settings_client.gui.industry_colors == 0) {
+				return GetIndustrySpec(GetIndustryByTile(tile)->type)->map_colour * 0x01010101;
+			} else {
+				return GetAlternativeIndustryColor(GetIndustrySpec(GetIndustryByTile(tile)->type)) * 0x01010101;
+			}
+			
 		} else {
 			/* otherwise, return the color of the clear tiles, which will make it disappear */
 			return ApplyMask(MKCOLOR(0x54545454), &_smallmap_vehicles_andor[MP_CLEAR]);
@@ -1057,6 +1069,11 @@
 	{
 		if (delta.x != 0 && this->map_type == SMT_INDUSTRY) this->ResizeLegend();
 	}
+
+	virtual void OnInvalidateData(int data = 0)
+	{
+		BuildIndustriesLegend();
+	}
 };
 
 SmallMapWindow::SmallMapType SmallMapWindow::map_type = SMT_CONTOUR;
Index: src/lang/english.txt
===================================================================
--- src/lang/english.txt	(revision 15078)
+++ src/lang/english.txt	(working copy)
@@ -1140,6 +1140,11 @@
 STR_CONFIG_PATCHES_DEFAULT_RAIL_TYPE_FIRST                      :First available
 STR_CONFIG_PATCHES_DEFAULT_RAIL_TYPE_LAST                       :Last available
 STR_CONFIG_PATCHES_DEFAULT_RAIL_TYPE_MOST_USED                  :Most used
+STR_CONFIG_PATCHES_INDUSTRY_COLORS                              :{LTBLUE}Industry colors: {ORANGE}{STRING1}
+STR_CONFIG_PATCHES_INDUSTRY_COLOR1                              :Classic
+STR_CONFIG_PATCHES_INDUSTRY_COLOR2                              :LCD
+STR_CONFIG_PATCHES_INDUSTRY_COLOR3                              :Fancy
+
 STR_CONFIG_PATCHES_SHOW_TRACK_RESERVATION                       :{LTBLUE}Show reserved tracks: {ORANGE}{STRING1}
 STR_CONFIG_PATCHES_PERSISTENT_BUILDINGTOOLS                     :{LTBLUE}Keep building tools active after usage: {ORANGE}{STRING1}
 
