From 3b89dbe5f99da6914f58ba876e4a2c20fcb89dbc Mon Sep 17 00:00:00 2001
From: Henry Wilson <m3henry@googlemail.com>
Date: Sun, 31 Dec 2017 00:38:30 +0000
Subject: [PATCH 18/31] _tcp_connectors ~> std::vector

---
 src/network/core/tcp_connect.cpp | 14 +++++++-------
 1 file changed, 7 insertions(+), 7 deletions(-)

diff --git a/src/network/core/tcp_connect.cpp b/src/network/core/tcp_connect.cpp
index 2dc789882..7d3e42c4f 100644
--- a/src/network/core/tcp_connect.cpp
+++ b/src/network/core/tcp_connect.cpp
@@ -21,7 +21,7 @@
 #include "../../safeguards.h"
 
 /** List of connections that are currently being created */
-static SmallVector<TCPConnecter *,  1> _tcp_connecters;
+static std::vector<TCPConnecter *> _tcp_connecters;
 
 /**
  * Create a new connecter for the given address
@@ -34,7 +34,7 @@ TCPConnecter::TCPConnecter(const NetworkAddress &address) :
 	sock(INVALID_SOCKET),
 	address(address)
 {
-	*_tcp_connecters.Append() = this;
+	_tcp_connecters.push_back(this);
 	if (!ThreadObject::New(TCPConnecter::ThreadEntry, this, &this->thread, "ottd:tcp")) {
 		this->Connect();
 	}
@@ -68,22 +68,22 @@ void TCPConnecter::Connect()
  */
 /* static */ void TCPConnecter::CheckCallbacks()
 {
-	for (TCPConnecter **iter = _tcp_connecters.Begin(); iter < _tcp_connecters.End(); /* nothing */) {
+	for (auto iter = _tcp_connecters.begin(); iter < _tcp_connecters.end(); /* nothing */) {
 		TCPConnecter *cur = *iter;
 		if ((cur->connected || cur->aborted) && cur->killed) {
-			_tcp_connecters.Erase(iter);
+			Erase(_tcp_connecters, iter);
 			if (cur->sock != INVALID_SOCKET) closesocket(cur->sock);
 			delete cur;
 			continue;
 		}
 		if (cur->connected) {
-			_tcp_connecters.Erase(iter);
+			Erase(_tcp_connecters, iter);
 			cur->OnConnect(cur->sock);
 			delete cur;
 			continue;
 		}
 		if (cur->aborted) {
-			_tcp_connecters.Erase(iter);
+			Erase(_tcp_connecters, iter);
 			cur->OnFailure();
 			delete cur;
 			continue;
@@ -95,7 +95,7 @@ void TCPConnecter::Connect()
 /** Kill all connection attempts. */
 /* static */ void TCPConnecter::KillAll()
 {
-	for (TCPConnecter **iter = _tcp_connecters.Begin(); iter != _tcp_connecters.End(); iter++) (*iter)->killed = true;
+	for (auto &c : _tcp_connecters) c->killed = true;
 }
 
 #endif /* ENABLE_NETWORK */
-- 
2.14.1

