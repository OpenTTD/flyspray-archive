Index: src/lang/english.txt
===================================================================
--- src/lang/english.txt	(revision 14342)
+++ src/lang/english.txt	(working copy)
@@ -380,6 +380,7 @@
 STR_SORT_BY_MODEL                                               :Model
 STR_SORT_BY_VALUE                                               :Value
 STR_SORT_BY_LENGTH                                              :Length
+STR_SORT_BY_TIME_TO_LIVE                                        :Remaining life time
 STR_SORT_BY_FACILITY                                            :Station type
 STR_SORT_BY_WAITING                                             :Waiting cargo value
 STR_SORT_BY_RATING_MAX                                          :Cargo rating
Index: src/vehicle_gui.cpp
===================================================================
--- src/vehicle_gui.cpp	(revision 14342)
+++ src/vehicle_gui.cpp	(working copy)
@@ -57,6 +57,7 @@
 static GUIVehicleList::SortFunction VehicleModelSorter;
 static GUIVehicleList::SortFunction VehicleValueSorter;
 static GUIVehicleList::SortFunction VehicleLengthSorter;
+static GUIVehicleList::SortFunction VehicleTimeToLiveSorter;
 
 GUIVehicleList::SortFunction* const BaseVehicleListWindow::vehicle_sorter_funcs[] = {
 	&VehicleNumberSorter,
@@ -70,6 +71,7 @@
 	&VehicleModelSorter,
 	&VehicleValueSorter,
 	&VehicleLengthSorter,
+	&VehicleTimeToLiveSorter,
 };
 
 const StringID BaseVehicleListWindow::vehicle_sorter_names[] = {
@@ -84,6 +86,7 @@
 	STR_SORT_BY_MODEL,
 	STR_SORT_BY_VALUE,
 	STR_SORT_BY_LENGTH,
+	STR_SORT_BY_TIME_TO_LIVE,
 	INVALID_STRING_ID
 };
 
@@ -629,6 +632,13 @@
 	return (r != 0) ? r : VehicleNumberSorter(a, b);
 }
 
+/** Sort vehicles by the time they can still live */
+static int CDECL VehicleTimeToLiveSorter(const Vehicle* const *a, const Vehicle* const *b)
+{
+	int r = ClampToI32(((*a)->max_age - (*a)->age) - ((*b)->max_age - (*b)->age));
+	return (r != 0) ? r : VehicleNumberSorter(a, b);
+}
+
 void InitializeGUI()
 {
 	MemSetT(&_sorting, 0);
