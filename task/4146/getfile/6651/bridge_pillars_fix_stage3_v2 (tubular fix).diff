Index: src/tunnelbridge_cmd.cpp
===================================================================
--- src/tunnelbridge_cmd.cpp	(revision 20896)
+++ src/tunnelbridge_cmd.cpp	(working copy)
@@ -875,6 +875,7 @@
 	const byte *p = tileh_bits[axis];
 	bool draw_odd_pillar = false;
 	bool cantilever_pillars_fix = false;
+	bool tubular_pillars_fix = false;
 
 	switch(type) {
 		case 0: case 1: case 2: case 9: // wooden, girder and concrete bridges
@@ -889,6 +889,6 @@
		case 6: case 7: case 8: // cantilever bridges
 			cantilever_pillars_fix = true;
 			break;

 
 		default:;
 	}
@@ -891,6 +891,9 @@
 		case 6: case 7: case 8: // cantilever bridges
 			cantilever_pillars_fix = true;
 			break;
+		case 10: case 11: case 12: //tubular bridges
+			tubular_pillars_fix = true;
+			break;
 
 		default:;
 	}
@@ -967,6 +971,24 @@
 		}
 	}
 
+	if (tubular_pillars_fix) {
+		/* draw second (front and back facing) pillars next to first */
+		for (int cur_z = z_bridge; cur_z >= front_height; cur_z -= TILE_HEIGHT) {
+			DRAW_PILLAR(image, x, y, cur_z, 0);
+		}
+		for (int cur_z = z_back; cur_z >= back_height; cur_z -= TILE_HEIGHT) {
+			DRAW_PILLAR(image, x_back, y_back, cur_z, 0);
+		}
+
+		if (axis == AXIS_X) {
+			x -= 2;
+			x_back -= 2;
+		}	else {
+			y -= 2;
+			y_back -= 2;
+		}
+  }
+
 	for (int cur_z = z_bridge; cur_z >= front_height; cur_z -= TILE_HEIGHT) {
 		DRAW_PILLAR(image, x, y, cur_z, 0);
 	}
