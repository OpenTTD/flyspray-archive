
Index: src/ai/api/ai_town.hpp
===================================================================
--- src/ai/api/ai_town.hpp	(revision 12185)
+++ src/ai/api/ai_town.hpp	(working copy)
@@ -23,7 +23,7 @@
 	 * @return the maximum town index.
 	 * @post return value is always non-negative.
 	 */
-	TownID GetMaxTownID();
+	static TownID GetMaxTownID();
 
 	/**
 	 * Gets the number of towns. This is different than GetMaxTownID()
@@ -31,7 +31,7 @@
 	 * @return the number of towns.
 	 * @post return value is always non-negative.
 	 */
-	int32 GetTownCount();
+	static int32 GetTownCount();
 
 	/**
 	 * Checks whether the given town index is valid.
Index: src/ai/api/ai_town.hpp.sq
===================================================================
--- src/ai/api/ai_town.hpp.sq	(revision 12185)
+++ src/ai/api/ai_town.hpp.sq	(working copy)
@@ -15,13 +15,12 @@
 	SQAITown.AddConstructor<void (AITown::*)(), 1>(engine, "x");
 
 	SQAITown.DefSQStaticMethod(engine, &AITown::GetClassName,  "GetClassName",  1, "x");
+	SQAITown.DefSQStaticMethod(engine, &AITown::GetMaxTownID,  "GetMaxTownID",  1, "x");
+	SQAITown.DefSQStaticMethod(engine, &AITown::GetTownCount,  "GetTownCount",  1, "x");
 	SQAITown.DefSQStaticMethod(engine, &AITown::IsValidTown,   "IsValidTown",   2, "xi");
 	SQAITown.DefSQStaticMethod(engine, &AITown::GetName,       "GetName",       2, "xi");
 	SQAITown.DefSQStaticMethod(engine, &AITown::GetPopulation, "GetPopulation", 2, "xi");
 	SQAITown.DefSQStaticMethod(engine, &AITown::GetLocation,   "GetLocation",   2, "xi");
 
-	SQAITown.DefSQMethod(engine, &AITown::GetMaxTownID, "GetMaxTownID", 1, "x");
-	SQAITown.DefSQMethod(engine, &AITown::GetTownCount, "GetTownCount", 1, "x");
-
 	SQAITown.PostRegister(engine);
 }
