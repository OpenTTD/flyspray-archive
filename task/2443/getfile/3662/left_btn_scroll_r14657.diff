diff -ur old_src/clear_cmd.cpp src/clear_cmd.cpp
--- old_src/clear_cmd.cpp	2008-12-06 21:17:01.000000000 +0200
+++ src/clear_cmd.cpp	2008-12-06 22:02:42.000000000 +0200
@@ -310,9 +310,10 @@
 	} while (--i);
 }
 
-static void ClickTile_Clear(TileIndex tile)
+static bool ClickTile_Clear(TileIndex tile)
 {
 	/* not used */
+	return false;
 }
 
 static TrackStatus GetTileTrackStatus_Clear(TileIndex tile, TransportType mode, uint sub_mode, DiagDirection side)
diff -ur old_src/dummy_land.cpp src/dummy_land.cpp
--- old_src/dummy_land.cpp	2008-12-06 21:17:01.000000000 +0200
+++ src/dummy_land.cpp	2008-12-06 21:58:00.000000000 +0200
@@ -54,9 +54,10 @@
 	/* not used */
 }
 
-static void ClickTile_Dummy(TileIndex tile)
+static bool ClickTile_Dummy(TileIndex tile)
 {
 	/* not used */
+	return false;
 }
 
 static void ChangeTileOwner_Dummy(TileIndex tile, Owner old_owner, Owner new_owner)
diff -ur old_src/industry_cmd.cpp src/industry_cmd.cpp
--- old_src/industry_cmd.cpp	2008-12-06 21:17:01.000000000 +0200
+++ src/industry_cmd.cpp	2008-12-06 22:23:31.000000000 +0200
@@ -834,9 +834,10 @@
 	}
 }
 
-static void ClickTile_Industry(TileIndex tile)
+static bool ClickTile_Industry(TileIndex tile)
 {
 	ShowIndustryViewWindow(GetIndustryIndex(tile));
+	return true;
 }
 
 static TrackStatus GetTileTrackStatus_Industry(TileIndex tile, TransportType mode, uint sub_mode, DiagDirection side)
diff -ur old_src/landscape.cpp src/landscape.cpp
--- old_src/landscape.cpp	2008-12-06 21:17:01.000000000 +0200
+++ src/landscape.cpp	2008-12-06 22:20:08.000000000 +0200
@@ -519,9 +519,9 @@
 	_tile_type_procs[GetTileType(tile)]->animate_tile_proc(tile);
 }
 
-void ClickTile(TileIndex tile)
+bool ClickTile(TileIndex tile)
 {
-	_tile_type_procs[GetTileType(tile)]->click_tile_proc(tile);
+	return _tile_type_procs[GetTileType(tile)]->click_tile_proc(tile);
 }
 
 void GetTileDesc(TileIndex tile, TileDesc *td)
diff -ur old_src/lang/english.txt src/lang/english.txt
--- old_src/lang/english.txt	2008-12-06 21:17:01.000000000 +0200
+++ src/lang/english.txt	2008-12-06 21:45:01.000000000 +0200
@@ -1125,6 +1125,8 @@
 STR_CONFIG_PATCHES_RIGHT_MOUSE_BTN_EMU_CONTROL                  :Control-click
 STR_CONFIG_PATCHES_RIGHT_MOUSE_BTN_EMU_OFF                      :Off
 
+STR_CONFIG_PATCHES_LEFT_MOUSE_BTN_SCROLLING                     :{LTBLUE}Left-click scrolling: {ORANGE}{STRING1}
+
 STR_CONFIG_PATCHES_PAUSE_ON_NEW_GAME                            :{LTBLUE}Automatically pause when starting a new game: {ORANGE}{STRING1}
 STR_CONFIG_PATCHES_ADVANCED_VEHICLE_LISTS                       :{LTBLUE}Use the advanced vehicle list: {ORANGE}{STRING1}
 STR_CONFIG_PATCHES_ADVANCED_VEHICLE_LISTS_OFF                   :Off
diff -ur old_src/rail_cmd.cpp src/rail_cmd.cpp
--- old_src/rail_cmd.cpp	2008-12-06 21:17:01.000000000 +0200
+++ src/rail_cmd.cpp	2008-12-06 21:49:17.000000000 +0200
@@ -2332,12 +2332,12 @@
 	return CombineTrackStatus(TrackBitsToTrackdirBits(trackbits), red_signals);
 }
 
-static void ClickTile_Track(TileIndex tile)
+static bool ClickTile_Track(TileIndex tile)
 {
 	switch (GetRailTileType(tile)) {
-		case RAIL_TILE_DEPOT:    ShowDepotWindow(tile, VEH_TRAIN);            break;
-		case RAIL_TILE_WAYPOINT: ShowWaypointWindow(GetWaypointByTile(tile)); break;
-		default: break;
+		case RAIL_TILE_DEPOT:    ShowDepotWindow(tile, VEH_TRAIN);            return true;
+		case RAIL_TILE_WAYPOINT: ShowWaypointWindow(GetWaypointByTile(tile)); return true;
+		default: return false;
 	}
 }
 
Vain hakemistossa src/: rev.cpp
diff -ur old_src/road_cmd.cpp src/road_cmd.cpp
--- old_src/road_cmd.cpp	2008-12-06 21:17:01.000000000 +0200
+++ src/road_cmd.cpp	2008-12-06 21:54:56.000000000 +0200
@@ -1430,9 +1430,13 @@
 	}
 }
 
-static void ClickTile_Road(TileIndex tile)
+static bool ClickTile_Road(TileIndex tile)
 {
-	if (IsRoadDepot(tile)) ShowDepotWindow(tile, VEH_ROAD);
+	if (IsRoadDepot(tile)) 	{
+	ShowDepotWindow(tile, VEH_ROAD);
+	return true;
+	}
+	return false;
 }
 
 /* Converts RoadBits to TrackBits */
diff -ur old_src/settings.cpp src/settings.cpp
--- old_src/settings.cpp	2008-12-06 21:17:01.000000000 +0200
+++ src/settings.cpp	2008-12-06 21:40:17.000000000 +0200
@@ -1423,6 +1423,7 @@
 	 SDTC_BOOL(gui.autoscroll,                           S,  0, false,                        STR_CONFIG_PATCHES_AUTOSCROLL,                  NULL),
 	 SDTC_BOOL(gui.reverse_scroll,                       S,  0, false,                        STR_CONFIG_PATCHES_REVERSE_SCROLLING,           NULL),
 	 SDTC_BOOL(gui.smooth_scroll,                        S,  0, false,                        STR_CONFIG_PATCHES_SMOOTH_SCROLLING,            NULL),
+	 SDTC_BOOL(gui.left_mouse_btn_scrolling,             S,  0, false,                        STR_CONFIG_PATCHES_LEFT_MOUSE_BTN_SCROLLING,    NULL),
 	 SDTC_BOOL(gui.measure_tooltip,                      S,  0, false,                        STR_CONFIG_PATCHES_MEASURE_TOOLTIP,             NULL),
 	  SDTC_VAR(gui.errmsg_duration,           SLE_UINT8, S,  0,     5,        0,       20, 0, STR_CONFIG_PATCHES_ERRMSG_DURATION,             NULL),
 	  SDTC_VAR(gui.toolbar_pos,               SLE_UINT8, S, MS,     0,        0,        2, 0, STR_CONFIG_PATCHES_TOOLBAR_POS,                 v_PositionMainToolbar),
diff -ur old_src/settings_gui.cpp src/settings_gui.cpp
--- old_src/settings_gui.cpp	2008-12-06 21:17:01.000000000 +0200
+++ src/settings_gui.cpp	2008-12-06 21:46:44.000000000 +0200
@@ -614,6 +614,7 @@
 	"gui.default_rail_type",
 	"gui.always_build_infrastructure",
 	"gui.show_track_reservation",
+	"gui.left_mouse_btn_scrolling",
 };
 
 static const char *_patches_construction[] = {
diff -ur old_src/settings_type.h src/settings_type.h
--- old_src/settings_type.h	2008-12-06 21:17:01.000000000 +0200
+++ src/settings_type.h	2008-12-06 22:02:12.000000000 +0200
@@ -66,6 +66,7 @@
 	uint8  right_mouse_btn_emulation;        ///< should we emulate right mouse clicking?
 	uint8  scrollwheel_scrolling;            ///< scrolling using the scroll wheel?
 	uint8  scrollwheel_multiplier;           ///< how much 'wheel' per incoming event from the OS?
+	bool   left_mouse_btn_scrolling;         ///< left mouse button scroll
 	bool   pause_on_newgame;                 ///< whether to start new games paused or not
 	bool   enable_signal_gui;                ///< show the signal GUI when the signal button is pressed
 	Year   ending_year;                      ///< end of the game (just show highscore)
diff -ur old_src/station_cmd.cpp src/station_cmd.cpp
--- old_src/station_cmd.cpp	2008-12-06 21:17:01.000000000 +0200
+++ src/station_cmd.cpp	2008-12-06 21:51:10.000000000 +0200
@@ -2569,13 +2569,14 @@
 }
 
 
-static void ClickTile_Station(TileIndex tile)
+static bool ClickTile_Station(TileIndex tile)
 {
 	if (IsHangar(tile)) {
 		ShowDepotWindow(tile, VEH_AIRCRAFT);
 	} else {
 		ShowStationViewWindow(GetStationIndex(tile));
 	}
+	return true;
 }
 
 static VehicleEnterTileStatus VehicleEnter_Station(Vehicle *v, TileIndex tile, int x, int y)
diff -ur old_src/tile_cmd.h src/tile_cmd.h
--- old_src/tile_cmd.h	2008-12-06 21:17:01.000000000 +0200
+++ src/tile_cmd.h	2008-12-06 21:42:42.000000000 +0200
@@ -103,7 +103,7 @@
  * @param b    Destination array of produced cargo
  */
 typedef void GetProducedCargoProc(TileIndex tile, CargoID *b);
-typedef void ClickTileProc(TileIndex tile);
+typedef bool ClickTileProc(TileIndex tile);
 typedef void AnimateTileProc(TileIndex tile);
 typedef void TileLoopProc(TileIndex tile);
 typedef void ChangeTileOwnerProc(TileIndex tile, Owner old_owner, Owner new_owner);
@@ -155,7 +155,7 @@
 void GetAcceptedCargo(TileIndex tile, AcceptedCargo ac);
 void ChangeTileOwner(TileIndex tile, Owner old_owner, Owner new_owner);
 void AnimateTile(TileIndex tile);
-void ClickTile(TileIndex tile);
+bool ClickTile(TileIndex tile);
 void GetTileDesc(TileIndex tile, TileDesc *td);
 
 #endif /* TILE_CMD_H */
diff -ur old_src/town_cmd.cpp src/town_cmd.cpp
--- old_src/town_cmd.cpp	2008-12-06 21:17:01.000000000 +0200
+++ src/town_cmd.cpp	2008-12-06 21:51:48.000000000 +0200
@@ -522,9 +522,10 @@
  * Dummy tile callback function for handling tile clicks in towns
  * @param tile unused
  */
-static void ClickTile_Town(TileIndex tile)
+static bool ClickTile_Town(TileIndex tile)
 {
 	/* not used */
+	return false;
 }
 
 static CommandCost ClearTile_Town(TileIndex tile, byte flags)
diff -ur old_src/tree_cmd.cpp src/tree_cmd.cpp
--- old_src/tree_cmd.cpp	2008-12-06 21:17:01.000000000 +0200
+++ src/tree_cmd.cpp	2008-12-06 21:55:39.000000000 +0200
@@ -744,9 +744,10 @@
 	}
 }
 
-static void ClickTile_Trees(TileIndex tile)
+static bool ClickTile_Trees(TileIndex tile)
 {
 	/* not used */
+	return false;
 }
 
 static TrackStatus GetTileTrackStatus_Trees(TileIndex tile, TransportType mode, uint sub_mode, DiagDirection side)
diff -ur old_src/tunnelbridge_cmd.cpp src/tunnelbridge_cmd.cpp
--- old_src/tunnelbridge_cmd.cpp	2008-12-06 21:17:01.000000000 +0200
+++ src/tunnelbridge_cmd.cpp	2008-12-06 21:59:11.000000000 +0200
@@ -1282,9 +1282,10 @@
 	}
 }
 
-static void ClickTile_TunnelBridge(TileIndex tile)
+static bool ClickTile_TunnelBridge(TileIndex tile)
 {
 	/* not used */
+	return false;
 }
 
 
diff -ur old_src/unmovable_cmd.cpp src/unmovable_cmd.cpp
--- old_src/unmovable_cmd.cpp	2008-12-06 21:17:01.000000000 +0200
+++ src/unmovable_cmd.cpp	2008-12-06 22:18:03.000000000 +0200
@@ -355,9 +355,13 @@
 	return 0;
 }
 
-static void ClickTile_Unmovable(TileIndex tile)
+static bool ClickTile_Unmovable(TileIndex tile)
 {
-	if (IsCompanyHQ(tile)) ShowCompany(GetTileOwner(tile));
+	if (IsCompanyHQ(tile)) {
+	ShowCompany(GetTileOwner(tile));
+	return true;
+	}
+	return false;
 }
 
 
diff -ur old_src/viewport.cpp src/viewport.cpp
--- old_src/viewport.cpp	2008-12-06 21:17:01.000000000 +0200
+++ src/viewport.cpp	2008-12-06 22:23:05.000000000 +0200
@@ -1986,11 +1986,12 @@
 }
 
 
-static void CheckClickOnLandscape(const ViewPort *vp, int x, int y)
+static bool CheckClickOnLandscape(const ViewPort *vp, int x, int y)
 {
 	Point pt = TranslateXYToTileCoord(vp, x, y);
 
-	if (pt.x != -1) ClickTile(TileVirtXY(pt.x, pt.y));
+	if (pt.x != -1) return ClickTile(TileVirtXY(pt.x, pt.y));
+	return true;
 }
 
 
@@ -2018,21 +2019,23 @@
 	Nop  // Disaster vehicles
 };
 
-void HandleViewportClicked(const ViewPort *vp, int x, int y)
+bool HandleViewportClicked(const ViewPort *vp, int x, int y)
 {
 	const Vehicle *v;
 
-	if (CheckClickOnTown(vp, x, y)) return;
-	if (CheckClickOnStation(vp, x, y)) return;
-	if (CheckClickOnSign(vp, x, y)) return;
-	if (CheckClickOnWaypoint(vp, x, y)) return;
+	if (CheckClickOnTown(vp, x, y)) return true;
+	if (CheckClickOnStation(vp, x, y)) return true;
+	if (CheckClickOnSign(vp, x, y)) return true;
+	if (CheckClickOnWaypoint(vp, x, y)) return true;
 	CheckClickOnLandscape(vp, x, y);
 
 	v = CheckClickOnVehicle(vp, x, y);
 	if (v != NULL) {
 		DEBUG(misc, 2, "Vehicle %d (index %d) at %p", v->unitnumber, v->index, v);
 		_on_vehicle_click_proc[v->type](v);
+		return true;
 	}
+	return CheckClickOnLandscape(vp, x, y);
 }
 
 Vehicle *CheckMouseOverVehicle()
diff -ur old_src/viewport_func.h src/viewport_func.h
--- old_src/viewport_func.h	2008-12-06 21:17:01.000000000 +0200
+++ src/viewport_func.h	2008-12-06 21:18:07.000000000 +0200
@@ -43,7 +43,7 @@
 void StartSpriteCombine();
 void EndSpriteCombine();
 
-void HandleViewportClicked(const ViewPort *vp, int x, int y);
+bool HandleViewportClicked(const ViewPort *vp, int x, int y);
 void PlaceObject();
 void SetRedErrorSquare(TileIndex tile);
 void SetTileSelectSize(int w, int h);
diff -ur old_src/water_cmd.cpp src/water_cmd.cpp
--- old_src/water_cmd.cpp	2008-12-06 21:17:01.000000000 +0200
+++ src/water_cmd.cpp	2008-12-06 22:19:27.000000000 +0200
@@ -1204,13 +1204,15 @@
 	return CombineTrackStatus(TrackBitsToTrackdirBits(ts), TRACKDIR_BIT_NONE);
 }
 
-static void ClickTile_Water(TileIndex tile)
+static bool ClickTile_Water(TileIndex tile)
 {
 	if (GetWaterTileType(tile) == WATER_TILE_DEPOT) {
 		TileIndex tile2 = GetOtherShipDepotTile(tile);
 
 		ShowDepotWindow(tile < tile2 ? tile : tile2, VEH_SHIP);
+		return true;
 	}
+	return false;
 }
 
 static void ChangeTileOwner_Water(TileIndex tile, Owner old_owner, Owner new_owner)
diff -ur old_src/window.cpp src/window.cpp
--- old_src/window.cpp	2008-12-06 21:17:01.000000000 +0200
+++ src/window.cpp	2008-12-06 22:31:03.000000000 +0200
@@ -1565,7 +1565,7 @@
 
 	Window *w = FindWindowFromPt(_cursor.pos.x, _cursor.pos.y);
 
-	if (!(_right_button_down || scrollwheel_scrolling) || w == NULL) {
+	if (!(_right_button_down || scrollwheel_scrolling || (_settings_client.gui.left_mouse_btn_scrolling && _left_button_down)) || w == NULL) {
 		_cursor.fix_at = false;
 		_scrolling_viewport = false;
 		return true;
@@ -1579,7 +1579,7 @@
 	}
 
 	Point delta;
-	if (_settings_client.gui.reverse_scroll) {
+	if (_settings_client.gui.reverse_scroll || (_settings_client.gui.left_mouse_btn_scrolling && _left_button_down)) {
 		delta.x = -_cursor.delta.x;
 		delta.y = -_cursor.delta.y;
 	} else {
@@ -1898,8 +1898,12 @@
 					return;
 				}
 
-				if (_thd.place_mode == VHM_NONE) {
-					HandleViewportClicked(vp, x, y);
+				if (_thd.place_mode == VHM_NONE) { 
+					if ((!HandleViewportClicked(vp, x, y)) && !(w->flags4 & WF_DISABLE_VP_SCROLL) && 
+						_settings_client.gui.left_mouse_btn_scrolling) {
+						_scrolling_viewport = true;
+						_cursor.fix_at = false;
+					}
 				} else {
 					PlaceObject();
 				}
