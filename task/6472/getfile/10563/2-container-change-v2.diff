diff --git a/src/linkgraph/demands.cpp b/src/linkgraph/demands.cpp
index 767bec2..f4afbab 100644
--- a/src/linkgraph/demands.cpp
+++ b/src/linkgraph/demands.cpp
@@ -2,11 +2,11 @@
 
 #include "../stdafx.h"
 #include "demands.h"
-#include <list>
+#include <queue>
 
 #include "../safeguards.h"
 
-typedef std::list<NodeID> NodeList;
+typedef std::queue<NodeID> NodeList;
 
 /**
  * Scale various things according to symmetric/asymmetric distribution.
@@ -172,11 +172,11 @@ void DemandCalculator::CalcDemand(LinkGraphJob &job, Tscaler scaler)
 	for (NodeID node = 0; node < job.Size(); node++) {
 		scaler.AddNode(job[node]);
 		if (job[node].Supply() > 0) {
-			supplies.push_back(node);
+			supplies.push(node);
 			num_supplies++;
 		}
 		if (job[node].Demand() > 0) {
-			demands.push_back(node);
+			demands.push(node);
 			num_demands++;
 		}
 	}
@@ -191,17 +191,17 @@ void DemandCalculator::CalcDemand(LinkGraphJob &job, Tscaler scaler)
 
 	while (!supplies.empty() && !demands.empty()) {
 		NodeID from_id = supplies.front();
-		supplies.pop_front();
+		supplies.pop();
 
 		for (uint i = 0; i < num_demands; ++i) {
 			assert(!demands.empty());
 			NodeID to_id = demands.front();
-			demands.pop_front();
+			demands.pop();
 			if (from_id == to_id) {
 				/* Only one node with supply and demand left */
 				if (demands.empty() && supplies.empty()) return;
 
-				demands.push_back(to_id);
+				demands.push(to_id);
 				continue;
 			}
 
@@ -236,7 +236,7 @@ void DemandCalculator::CalcDemand(LinkGraphJob &job, Tscaler scaler)
 			scaler.SetDemands(job, from_id, to_id, demand_forw);
 
 			if (scaler.HasDemandLeft(job[to_id])) {
-				demands.push_back(to_id);
+				demands.push(to_id);
 			} else {
 				num_demands--;
 			}
@@ -245,7 +245,7 @@ void DemandCalculator::CalcDemand(LinkGraphJob &job, Tscaler scaler)
 		}
 
 		if (job[from_id].UndeliveredSupply() != 0) {
-			supplies.push_back(from_id);
+			supplies.push(from_id);
 		} else {
 			num_supplies--;
 		}
diff --git a/src/linkgraph/linkgraph_gui.h b/src/linkgraph/linkgraph_gui.h
index fcf8181..1e306a4 100644
--- a/src/linkgraph/linkgraph_gui.h
+++ b/src/linkgraph/linkgraph_gui.h
@@ -17,7 +17,7 @@
 #include "../widget_type.h"
 #include "linkgraph_base.h"
 #include <map>
-#include <list>
+#include <vector>
 
 /**
  * Properties of a link between two stations.
@@ -39,7 +39,7 @@ class LinkGraphOverlay {
 public:
 	typedef std::map<StationID, LinkProperties> StationLinkMap;
 	typedef std::map<StationID, StationLinkMap> LinkMap;
-	typedef std::list<std::pair<StationID, uint> > StationSupplyList;
+	typedef std::vector<std::pair<StationID, uint> > StationSupplyList;
 
 	static const uint8 LINK_COLOURS[];
 
diff --git a/src/linkgraph/refresh.h b/src/linkgraph/refresh.h
index 496729d..6687b8a 100644
--- a/src/linkgraph/refresh.h
+++ b/src/linkgraph/refresh.h
@@ -14,7 +14,7 @@
 
 #include "../cargo_type.h"
 #include "../vehicle_base.h"
-#include <list>
+#include <vector>
 #include <map>
 #include <set>
 
@@ -79,7 +79,7 @@ protected:
 		bool operator<(const Hop &other) const;
 	};
 
-	typedef std::list<RefitDesc> RefitList;
+	typedef std::vector<RefitDesc> RefitList;
 	typedef std::map<CargoID, uint> CapacitiesMap;
 	typedef std::set<Hop> HopSet;
 
