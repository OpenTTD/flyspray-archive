Index: src/timetable_cmd.cpp
===================================================================
--- src/timetable_cmd.cpp	(revision 13061)
+++ src/timetable_cmd.cpp	(working copy)
@@ -129,15 +129,6 @@
 			/* Start autofilling the timetable, which clears all the current
 			 * timings and clears the "timetable has started" bit. */
 			SetBit(v->vehicle_flags, VF_AUTOFILL_TIMETABLE);
-			ClrBit(v->vehicle_flags, VF_TIMETABLE_STARTED);
-
-			for (Order *order = GetVehicleOrder(v, 0); order != NULL; order = order->next) {
-				order->wait_time = 0;
-				order->travel_time = 0;
-			}
-
-			v->current_order.wait_time = 0;
-			v->current_order.travel_time = 0;
 		} else {
 			ClrBit(v->vehicle_flags, VF_AUTOFILL_TIMETABLE);
 		}
@@ -159,15 +150,6 @@
 
 	if (!_patches.timetabling) return;
 
-	/* Make sure the timetable only starts when the vehicle reaches the first
-	 * order, not when travelling from the depot to the first station. */
-	if (v->cur_order_index == 0 && !HasBit(v->vehicle_flags, VF_TIMETABLE_STARTED)) {
-		SetBit(v->vehicle_flags, VF_TIMETABLE_STARTED);
-		return;
-	}
-
-	if (!HasBit(v->vehicle_flags, VF_TIMETABLE_STARTED)) return;
-
 	if (HasBit(v->vehicle_flags, VF_AUTOFILL_TIMETABLE)) {
 		if (timetabled == 0) {
 			/* Round the time taken up to the nearest day, as this will avoid
@@ -177,10 +159,6 @@
 
 			ChangeTimetable(v, v->cur_order_index, time_taken, travelling);
 			return;
-		} else if (v->cur_order_index == 0) {
-			/* Otherwise if we're at the beginning and it already has a value,
-			 * assume that autofill is finished and turn it off again. */
-			ClrBit(v->vehicle_flags, VF_AUTOFILL_TIMETABLE);
 		}
 	}
 
