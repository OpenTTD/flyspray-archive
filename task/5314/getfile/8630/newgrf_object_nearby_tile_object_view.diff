diff -r c20a1c41b555 src/newgrf_object.cpp
--- a/src/newgrf_object.cpp	Mon Oct 01 19:43:10 2012 +0000
+++ b/src/newgrf_object.cpp	Tue Oct 02 17:37:00 2012 +0100
@@ -231,6 +231,24 @@
 	return Object::GetTypeCount(idx) << 16 | min(GetClosestObject(tile, idx, current), 0xFFFF);
 }
 
+/**
+ * Get the view of the object at the offset given by the parameter
+ * @param parameter the offset from the current tile of the tile to query
+ * @param tile TileIndex of the current tile
+ * @return the view of the object at the offset
+ */
+static uint32 GetObjectViewAtOffset(uint32 parameter, TileIndex tile) 
+{
+	if (parameter != 0) tile = GetNearbyTile(parameter, tile); // only perform if it is required
+
+	if(IsTileType(tile, MP_OBJECT)) {
+		const Object *o = Object::GetByTile(tile);
+		return o->view;
+	}
+
+	return 0xFF;
+}
+
 /** Used by the resolver to get values for feature 0F deterministic spritegroups. */
 static uint32 ObjectGetVariable(const ResolverObject *object, byte variable, uint32 parameter, bool *available)
 {
@@ -254,6 +272,7 @@
 			case 0x61:
 			case 0x62:
 			case 0x64:
+			case 0x65:
 				break;
 
 			/* Allow these, but find the closest town. */
@@ -340,6 +359,9 @@
 
 		/* Count of object, distance of closest instance */
 		case 0x64: return GetCountAndDistanceOfClosestInstance(parameter, object->grffile->grfid, tile, o);
+
+		/* Get view of object at offset param */
+		case 0x65: return GetObjectViewAtOffset(parameter, tile);
 	}
 
 unhandled:
