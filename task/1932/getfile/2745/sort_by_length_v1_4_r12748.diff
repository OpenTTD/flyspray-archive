Index: src/group_gui.cpp
===================================================================
--- src/group_gui.cpp	(revision 12733)
+++ src/group_gui.cpp	(working copy)
@@ -429,7 +429,11 @@
 			}
 
 			/* Set text of sort by dropdown */
-			w->widget[GRP_WIDGET_SORT_BY_DROPDOWN].data = _vehicle_sort_listing[gv->l.sort_type];
+			if (gv->vehicle_type == VEH_TRAIN || gv->vehicle_type == VEH_ROAD) {
+				w->widget[GRP_WIDGET_SORT_BY_DROPDOWN].data = _train_road_sort_listing[gv->l.sort_type];
+			} else {
+				w->widget[GRP_WIDGET_SORT_BY_DROPDOWN].data = _vehicle_sort_listing[gv->l.sort_type];
+			}
 
 			DrawWindowWidgets(w);
 
@@ -524,7 +528,11 @@
 					break;
 
 				case GRP_WIDGET_SORT_BY_DROPDOWN: // Select sorting criteria dropdown menu
-					ShowDropDownMenu(w, _vehicle_sort_listing, gv->l.sort_type,  GRP_WIDGET_SORT_BY_DROPDOWN, 0, 0);
+					if (gv->vehicle_type == VEH_TRAIN || gv->vehicle_type == VEH_ROAD) {
+						ShowDropDownMenu(w, _train_road_sort_listing, gv->l.sort_type,  GRP_WIDGET_SORT_BY_DROPDOWN, 0, 0);
+					} else {
+						ShowDropDownMenu(w, _vehicle_sort_listing, gv->l.sort_type,  GRP_WIDGET_SORT_BY_DROPDOWN, 0, 0);
+					}
 					return;
 
 				case GRP_WIDGET_ALL_VEHICLES: // All vehicles button
Index: src/lang/english.txt
===================================================================
--- src/lang/english.txt	(revision 12733)
+++ src/lang/english.txt	(working copy)
@@ -378,6 +378,7 @@
 STR_SORT_BY_MAX_SPEED                                           :Maximum speed
 STR_SORT_BY_MODEL                                               :Model
 STR_SORT_BY_VALUE                                               :Value
+STR_SORT_BY_LENGTH                                              :Length
 STR_SORT_BY_FACILITY                                            :Station type
 STR_SORT_BY_WAITING                                             :Waiting cargo value
 STR_SORT_BY_RATING_MAX                                          :Cargo rating
Index: src/vehicle_gui.cpp
===================================================================
--- src/vehicle_gui.cpp	(revision 12733)
+++ src/vehicle_gui.cpp	(working copy)
@@ -71,6 +71,7 @@
 static VehicleSortListingTypeFunction VehicleMaxSpeedSorter;
 static VehicleSortListingTypeFunction VehicleModelSorter;
 static VehicleSortListingTypeFunction VehicleValueSorter;
+static VehicleSortListingTypeFunction VehicleLengthSorter;
 
 static VehicleSortListingTypeFunction* const _vehicle_sorter[] = {
 	&VehicleNumberSorter,
@@ -83,6 +84,7 @@
 	&VehicleMaxSpeedSorter,
 	&VehicleModelSorter,
 	&VehicleValueSorter,
+	&VehicleLengthSorter,
 };
 
 const StringID _vehicle_sort_listing[] = {
@@ -99,6 +101,21 @@
 	INVALID_STRING_ID
 };
 
+const StringID _train_road_sort_listing[] = {
+	STR_SORT_BY_NUMBER,
+	STR_SORT_BY_DROPDOWN_NAME,
+	STR_SORT_BY_AGE,
+	STR_SORT_BY_PROFIT_THIS_YEAR,
+	STR_SORT_BY_PROFIT_LAST_YEAR,
+	STR_SORT_BY_TOTAL_CAPACITY_PER_CARGOTYPE,
+	STR_SORT_BY_RELIABILITY,
+	STR_SORT_BY_MAX_SPEED,
+	STR_SORT_BY_MODEL,
+	STR_SORT_BY_VALUE,
+	STR_SORT_BY_LENGTH,
+	INVALID_STRING_ID
+};
+
 void RebuildVehicleLists()
 {
 	Window* const *wz;
@@ -697,6 +714,30 @@
 	return (_internal_sort_order & 1) ? -r : r;
 }
 
+static int CDECL VehicleLengthSorter(const void *a, const void *b)
+{
+	const Vehicle* va = *(const Vehicle**)a;
+	const Vehicle* vb = *(const Vehicle**)b;
+	const Vehicle *u;
+	int r;
+	int vacounter = 0, vbcounter = 0;
+
+	if (va->type == VEH_TRAIN) {
+		r = va->u.rail.cached_total_length - vb->u.rail.cached_total_length;
+	} else if (va->type == VEH_ROAD) { 
+		for (u = va; u != NULL; u = u->Next())vacounter++;
+		for (u = vb; u != NULL; u = u->Next())vbcounter++;
+	}
+
+	r = vacounter - vbcounter;
+
+	}
+
+	VEHICLEUNITNUMBERSORTER(r, va, vb);
+
+	return (_internal_sort_order & 1) ? -r : r;
+}
+
 void InitializeGUI()
 {
 	memset(&_sorting, 0, sizeof(_sorting));
@@ -991,8 +1032,13 @@
 
 	DrawWindowWidgets(w);
 
-	/* draw sorting criteria string */
-	DrawString(85, 15, _vehicle_sort_listing[vl->l.sort_type], TC_BLACK);
+	if (vl->vehicle_type == VEH_TRAIN || vl->vehicle_type == VEH_ROAD) {
+		/* draw sorting criteria string for trains */
+		DrawString(85, 15, _train_road_sort_listing[vl->l.sort_type], TC_BLACK);
+	} else {
+		/* draw sorting criteria string for other vehicles */
+		DrawString(85, 15, _vehicle_sort_listing[vl->l.sort_type], TC_BLACK);
+	}
 	/* draw arrow pointing up/down for ascending/descending sorting */
 	DrawSortButtonState(w, VLW_WIDGET_SORT_ORDER, vl->l.flags & VL_DESC ? SBS_DOWN : SBS_UP);
 
@@ -1060,7 +1106,11 @@
 					SetWindowDirty(w);
 					break;
 				case VLW_WIDGET_SORT_BY_PULLDOWN:/* Select sorting criteria dropdown menu */
-					ShowDropDownMenu(w, _vehicle_sort_listing, vl->l.sort_type, VLW_WIDGET_SORT_BY_PULLDOWN, 0, 0);
+					if(vl->vehicle_type == VEH_TRAIN || vl->vehicle_type == VEH_ROAD) {
+						ShowDropDownMenu(w, _train_road_sort_listing, vl->l.sort_type, VLW_WIDGET_SORT_BY_PULLDOWN, 0, 0);
+					} else {
+						ShowDropDownMenu(w, _vehicle_sort_listing, vl->l.sort_type, VLW_WIDGET_SORT_BY_PULLDOWN, 0, 0);
+					}
 					return;
 				case VLW_WIDGET_LIST: { /* Matrix to show vehicles */
 					uint32 id_v = (e->we.click.pt.y - PLY_WND_PRC__OFFSET_TOP_WIDGET) / w->resize.step_height;
Index: src/vehicle_gui.h
===================================================================
--- src/vehicle_gui.h	(revision 12733)
+++ src/vehicle_gui.h	(working copy)
@@ -24,6 +24,7 @@
 #define PERIODIC_RESORT_DAYS 10
 
 extern const StringID _vehicle_sort_listing[];
+extern const StringID _train_road_sort_listing[];
 
 /** Constants of vehicle view widget indices */
 enum VehicleViewWindowWidgets {
