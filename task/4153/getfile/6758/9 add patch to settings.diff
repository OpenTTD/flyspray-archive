Index: src/lang/english.txt
===================================================================
--- src/lang/english.txt	(revision 21000)
+++ src/lang/english.txt	(working copy)
@@ -1235,6 +1235,7 @@
 STR_CONFIG_SETTING_SHOW_TRACK_RESERVATION                       :{LTBLUE}Show reserved tracks: {ORANGE}{STRING1}
 STR_CONFIG_SETTING_PERSISTENT_BUILDINGTOOLS                     :{LTBLUE}Keep building tools active after usage: {ORANGE}{STRING1}
 STR_CONFIG_SETTING_EXPENSES_LAYOUT                              :{LTBLUE}Group expenses in company finance window: {ORANGE}{STRING1}
+STR_CONFIG_PATCHES_BRIDGE_HIGHLIGHT                             :{LTBLUE}Highlight first valid tile when building bridge: {ORANGE}{STRING1}
 
 STR_CONFIG_SETTING_ALWAYS_BUILD_INFRASTRUCTURE                  :{LTBLUE}Show building tools when no suitable vehicles are available: {ORANGE}{STRING1}
 STR_CONFIG_SETTING_MAX_TRAINS                                   :{LTBLUE}Max trains per player: {ORANGE}{STRING1}
Index: src/settings_gui.cpp
===================================================================
--- src/settings_gui.cpp	(revision 21000)
+++ src/settings_gui.cpp	(working copy)
@@ -1304,6 +1304,7 @@
 	SettingEntry("gui.always_build_infrastructure"),
 	SettingEntry("gui.persistent_buildingtools"),
 	SettingEntry("gui.coloured_news_year"),
+	SettingEntry("gui.bridge_building_highlight"),
 };
 /** Interface subpage */
 static SettingsPage _settings_ui_page = {_settings_ui, lengthof(_settings_ui)};
Index: src/settings_type.h
===================================================================
--- src/settings_type.h	(revision 21000)
+++ src/settings_type.h	(working copy)
@@ -99,6 +99,7 @@
 	bool   station_show_coverage;            ///< whether to highlight coverage area
 	bool   persistent_buildingtools;         ///< keep the building tools active after usage
 	uint8  expenses_layout;                  ///< layout of expenses window
+	bool   bridge_building_highlight;        ///< Highlight when building bridge
 
 	uint16 console_backlog_timeout;          ///< the minimum amount of time items should be in the console backlog before they will be removed in ~3 seconds granularity.
 	uint16 console_backlog_length;           ///< the minimum amount of items in the console backlog before items will be removed.
Index: src/table/settings.h
===================================================================
--- src/table/settings.h	(revision 21000)
+++ src/table/settings.h	(working copy)
@@ -607,6 +607,7 @@
 	 SDTC_BOOL(gui.station_show_coverage,                S,  0, false,                        STR_NULL,                                       NULL),
 	 SDTC_BOOL(gui.persistent_buildingtools,             S,  0,  true,                        STR_CONFIG_SETTING_PERSISTENT_BUILDINGTOOLS,    NULL),
 	 SDTC_BOOL(gui.expenses_layout,                      S,  0, false,                        STR_CONFIG_SETTING_EXPENSES_LAYOUT,             RedrawScreen),
+	 SDTC_BOOL(gui.bridge_building_highlight,            S,  0,  true,                        STR_CONFIG_PATCHES_BRIDGE_HIGHLIGHT,            NULL),
 
 /* For the dedicated build we'll enable dates in logs by default. */
 #ifdef DEDICATED
Index: src/viewport.cpp
===================================================================
--- src/viewport.cpp	(revision 21000)
+++ src/viewport.cpp	(working copy)
@@ -2068,7 +2068,7 @@
 /** highlighting tiles while only going over them with the mouse */
 void VpStartPlaceSizing(TileIndex tile, ViewportPlaceMethod method, ViewportDragDropSelectionProcess process)
 {
-	if (process == DDSP_BUILD_BRIDGE) {
+	if (process == DDSP_BUILD_BRIDGE && _settings_client.gui.bridge_building_highlight) {
 		_thd.bridge_highlight = true;
 		SetRedErrorSquare(GetBridgeHighlightTile(tile, INVALID_DIAGDIR, 0));
 	}
