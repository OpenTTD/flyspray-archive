Index: src/tilehighlight_type.h
===================================================================
--- src/tilehighlight_type.h	(revision 21000)
+++ src/tilehighlight_type.h	(working copy)
@@ -64,6 +64,7 @@
 
 	HighLightStyle place_mode;
 	bool make_square_red;
+	bool bridge_highlight;
 	WindowClass window_class;
 	WindowNumber window_number;
 
Index: src/viewport.cpp
===================================================================
--- src/viewport.cpp	(revision 21000)
+++ src/viewport.cpp	(working copy)
@@ -45,6 +45,7 @@
 #include "window_func.h"
 #include "tilehighlight_func.h"
 #include "window_gui.h"
+#include "bridge.h"
 
 #include "table/strings.h"
 
@@ -934,7 +935,7 @@
 static void DrawTileSelection(const TileInfo *ti)
 {
 	/* Draw a red error square? */
-	bool is_redsq = _thd.redsq == ti->tile;
+	bool is_redsq = _thd.redsq == ti->tile && !_thd.bridge_highlight;
 	if (is_redsq) DrawTileSelectionRect(ti, PALETTE_TILE_RED_PULSATING);
 
 	/* no selection active? */
@@ -993,6 +994,8 @@
 		DrawTileSelectionRect(ti, PALETTE_SEL_TILE_BLUE);
 		return;
 	}
+
+	if (_thd.bridge_highlight && _thd.redsq == ti->tile) DrawTileSelectionRect(ti, PALETTE_SEL_TILE_BLUE);
 }
 
 static void ViewportAddLandscape()
@@ -2018,6 +2021,23 @@
 		/* clear the old selection? */
 		if (_thd.drawstyle) SetSelectionTilesDirty();
 
+		if (_thd.bridge_highlight) {
+			DiagDirection dir = INVALID_DIAGDIR;
+			int x1 = _thd.selstart.x & ~TILE_UNIT_MASK;
+			int y1 = _thd.selstart.y & ~TILE_UNIT_MASK;
+			int x2 = _thd.selend.x   & ~TILE_UNIT_MASK;
+			int y2 = _thd.selend.y   & ~TILE_UNIT_MASK;
+			if (x1 != x2) {
+				dir = (x1 > x2) ? DIAGDIR_NE : DIAGDIR_SW;
+			} else if (y1 != y2) {
+				dir = (y1 > y2) ? DIAGDIR_NW : DIAGDIR_SE;
+			}
+
+			TileIndex tile = TileVirtXY(x1, y1);
+			tile = (tile < MapSize() ? GetBridgeHighlightTile(tile, dir) : INVALID_TILE);
+			SetRedErrorSquare(tile);
+		}
+
 		_thd.drawstyle = _thd.new_drawstyle;
 		_thd.pos = _thd.new_pos;
 		_thd.size = _thd.new_size;
@@ -2045,6 +2065,11 @@
 /** highlighting tiles while only going over them with the mouse */
 void VpStartPlaceSizing(TileIndex tile, ViewportPlaceMethod method, ViewportDragDropSelectionProcess process)
 {
+	if (process == DDSP_BUILD_BRIDGE) {
+		_thd.bridge_highlight = true;
+		SetRedErrorSquare(GetBridgeHighlightTile(tile, INVALID_DIAGDIR));
+	}
+
 	_thd.select_method = method;
 	_thd.select_proc   = process;
 	_thd.selend.x = TileX(tile) * TILE_SIZE;
@@ -2679,6 +2704,10 @@
 		_thd.place_mode = HT_POINT;
 	}
 	SetTileSelectSize(1, 1);
+	if (_thd.bridge_highlight) {
+		_thd.bridge_highlight = false;
+		SetRedErrorSquare(INVALID_TILE);
+	}
 
 	w->OnPlaceMouseUp(_thd.select_method, _thd.select_proc, _thd.selend, TileVirtXY(_thd.selstart.x, _thd.selstart.y), TileVirtXY(_thd.selend.x, _thd.selend.y));
 
