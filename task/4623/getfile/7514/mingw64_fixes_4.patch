Index: src/3rdparty/squirrel/include/squirrel.h
===================================================================
--- src/3rdparty/squirrel/include/squirrel.h	(revision 22273)
+++ src/3rdparty/squirrel/include/squirrel.h	(working copy)
@@ -28,6 +28,7 @@
 		altered from any source distribution.
 
 */
+
 #ifndef _SQUIRREL_H_
 #define _SQUIRREL_H_
 
@@ -54,6 +55,10 @@
 typedef __int64 SQInteger;
 typedef unsigned __int64 SQUnsignedInteger;
 typedef unsigned __int64 SQHash; /*should be the same size of a pointer*/
+#elif defined(_WIN32)
+typedef long long SQInteger;
+typedef unsigned long long SQUnsignedInteger;
+typedef unsigned long long SQHash; /*should be the same size of a pointer*/
 #else
 typedef long SQInteger;
 typedef unsigned long SQUnsignedInteger;
@@ -77,6 +82,8 @@
 #if defined(SQUSEDOUBLE) && !defined(_SQ64)
 #ifdef _MSC_VER
 typedef __int64 SQRawObjectVal; //must be 64bits
+#elif defined(_WIN32)
+typedef long long SQRawObjectVal; //must be 64bits
 #else
 typedef long SQRawObjectVal; //must be 64bits
 #endif
Index: src/os/windows/crashlog_win.cpp
===================================================================
--- src/os/windows/crashlog_win.cpp	(revision 22273)
+++ src/os/windows/crashlog_win.cpp	(working copy)
@@ -243,11 +243,11 @@
 	buffer += seprintf(buffer, last, "Registers:\n");
 #ifdef _M_AMD64
 	buffer += seprintf(buffer, last,
-		" RAX: %.16llX RBX: %.16llX RCX: %.16llX RDX: %.16llX\n"
-		" RSI: %.16llX RDI: %.16llX RBP: %.16llX RSP: %.16llX\n"
-		" R8:  %.16llX R9:  %.16llX R10: %.16llX R11: %.16llX\n"
-		" R12: %.16llX R13: %.16llX R14: %.16llX R15: %.16llX\n"
-		" RIP: %.16llX EFLAGS: %.8X\n",
+		" RAX: %.16I64X RBX: %.16I64X RCX: %.16I64X RDX: %.16I64X\n"
+		" RSI: %.16I64X RDI: %.16I64X RBP: %.16I64X RSP: %.16I64X\n"
+		" R8:  %.16I64X R9:  %.16I64X R10: %.16I64X R11: %.16I64X\n"
+		" R12: %.16I64X R13: %.16I64X R14: %.16I64X R15: %.16I64X\n"
+		" RIP: %.16I64X EFLAGS: %.8lX\n",
 		ep->ContextRecord->Rax,
 		ep->ContextRecord->Rbx,
 		ep->ContextRecord->Rcx,
@@ -548,7 +548,6 @@
 
 /* static */ void CrashLog::InitialiseCrashLog()
 {
-#if defined(_MSC_VER)
 #ifdef _M_AMD64
 	CONTEXT ctx;
 	RtlCaptureContext(&ctx);
@@ -559,13 +558,14 @@
 	 * alignment would be wrong in the called function. */
 	_safe_esp = (void *)(ctx.Rsp - 8);
 #else
+#if defined(_MSC_VER)
 	_asm {
 		mov _safe_esp, esp
 	}
-#endif
 #else
 	asm("movl %esp, __safe_esp");
 #endif
+#endif
 
 	/* SIGABRT is not an unhandled exception, so we need to intercept it. */
 	signal(SIGABRT, CustomAbort);
