Index: src/ground_vehicle.hpp
===================================================================
--- src/ground_vehicle.hpp	(Revision 20902)
+++ src/ground_vehicle.hpp	(Arbeitskopie)
@@ -104,9 +104,9 @@
 	 * @param turned Indicates if the vehicle has turned.
 	 * @return Old height of the vehicle.
 	 */
-	FORCEINLINE byte UpdateInclination(bool new_tile, bool turned)
+	FORCEINLINE int32 UpdateInclination(bool new_tile, bool turned)
 	{
-		byte old_z = this->z_pos;
+		int32 old_z = this->z_pos;
 		this->z_pos = GetSlopeZ(this->x_pos, this->y_pos);
 
 		if (new_tile) {
@@ -121,7 +121,7 @@
 				static const int HALF_TILE_SIZE = TILE_SIZE / 2;
 				static const int INV_TILE_SIZE_MASK = ~(TILE_SIZE - 1);
 
-				byte middle_z = GetSlopeZ((this->x_pos & INV_TILE_SIZE_MASK) | HALF_TILE_SIZE, (this->y_pos & INV_TILE_SIZE_MASK) | HALF_TILE_SIZE);
+				int32 middle_z = GetSlopeZ((this->x_pos & INV_TILE_SIZE_MASK) | HALF_TILE_SIZE, (this->y_pos & INV_TILE_SIZE_MASK) | HALF_TILE_SIZE);
 
 				if (middle_z != this->z_pos) {
 					SetBit(this->gv_flags, (middle_z > old_z) ? GVF_GOINGUP_BIT : GVF_GOINGDOWN_BIT);
Index: src/vehicle.cpp
===================================================================
--- src/vehicle.cpp	(Revision 20902)
+++ src/vehicle.cpp	(Arbeitskopie)
@@ -401,7 +401,7 @@
  */
 static Vehicle *EnsureNoVehicleProcZ(Vehicle *v, void *data)
 {
-	byte z = *(byte*)data;
+	int32 z = *(int32*)data;
 
 	if (v->type == VEH_DISASTER || (v->type == VEH_AIRCRAFT && v->subtype == AIR_SHADOW)) return NULL;
 	if (v->z_pos > z) return NULL;
@@ -416,7 +416,7 @@
  */
 CommandCost EnsureNoVehicleOnGround(TileIndex tile)
 {
-	byte z = GetTileMaxZ(tile);
+	int32 z = GetTileMaxZ(tile);
 
 	/* Value v is not safe in MP games, however, it is used to generate a local
 	 * error message only (which may be different for different machines).
