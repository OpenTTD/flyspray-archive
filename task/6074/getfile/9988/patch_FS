Index: window.cpp
===================================================================
--- window.cpp	(révision 27025)
+++ window.cpp	(copie de travail)
@@ -2742,6 +2742,19 @@
 static void HandleKeyScrolling()
 {
 	/*
+	 * Check that any opened window manage dirkeys
+	*/
+	Window *w;
+	FOR_ALL_WINDOWS_FROM_FRONT(w) {
+		if (w->window_class <= WC_TOOLTIPS ||
+				w->window_class == WC_NEWS_WINDOW) continue;
+
+		if (w->window_class == WC_BUILD_VEHICLE ||
+				w->window_class == WC_ROADVEH_LIST || w->window_class == WC_TRAINS_LIST ||
+				w->window_class == WC_SHIPS_LIST || w->window_class == WC_AIRCRAFT_LIST) return;
+		else break;
+	}
+	/*
 	 * Check that any of the dirkeys is pressed and that the focused window
 	 * doesn't have an edit-box as focused widget.
 	 */
Index: build_vehicle_gui.cpp
===================================================================
--- build_vehicle_gui.cpp	(révision 27025)
+++ build_vehicle_gui.cpp	(copie de travail)
@@ -1326,6 +1326,44 @@
 		}
 	}
 
+	virtual EventState OnKeyPress(WChar key, uint16 keycode)
+	{
+		Window *w;
+		FOR_ALL_WINDOWS_FROM_FRONT(w) {
+			if (w->window_class <= WC_TOOLTIPS ||
+			    w->window_class == WC_NEWS_WINDOW) continue;
+			if (w->window_class != WC_BUILD_VEHICLE) return ES_NOT_HANDLED;
+			else break;
+		}
+		
+		uint engine_index = this->eng_list.FindIndex(this->sel_engine);
+		
+		switch (keycode) {
+			case WKC_UP:
+				if (engine_index > 0) {
+					this->sel_engine = eng_list[engine_index-1];
+					if (!vscroll->IsVisible(engine_index-1)) {
+						this->vscroll->SetPosition(this->vscroll->GetPosition()-1);
+					}
+					this->SetDirty();
+				}
+				return ES_HANDLED;
+			
+			case WKC_DOWN:
+				if (engine_index < eng_list.Length()-1) {
+					this->sel_engine = eng_list[engine_index+1];
+					if (!vscroll->IsVisible(engine_index+1)) {
+						this->vscroll->SetPosition(this->vscroll->GetPosition()+1);
+					}
+					this->SetDirty();
+				}
+				return ES_HANDLED;
+
+		}
+		
+		return ES_NOT_HANDLED;	
+	}
+
 	/**
 	 * Some data on this window has become invalid.
 	 * @param data Information about the changed data.
Index: group_gui.cpp
===================================================================
--- group_gui.cpp	(révision 27025)
+++ group_gui.cpp	(copie de travail)
@@ -31,6 +31,7 @@
 #include "table/sprites.h"
 
 #include "safeguards.h"
+#include "debug.h"
 
 static const int LEVEL_WIDTH = 10; ///< Indenting width of a sub-group in pixels
 
@@ -676,6 +677,40 @@
 		}
 	}
 
+	virtual EventState OnKeyPress(WChar key, uint16 keycode)
+	{
+		Window *w;
+		FOR_ALL_WINDOWS_FROM_FRONT(w) {
+			if (w->window_class <= WC_TOOLTIPS ||
+			    w->window_class == WC_NEWS_WINDOW) continue;
+
+			if (w->window_class != WC_ROADVEH_LIST &&
+				w->window_class != WC_TRAINS_LIST &&
+				w->window_class != WC_SHIPS_LIST &&
+				w->window_class != WC_AIRCRAFT_LIST) return ES_NOT_HANDLED;
+			else break;
+		}
+
+
+		switch (keycode) {
+			case WKC_UP:
+				if (this->vscroll->GetPosition() > 0) {
+					this->vscroll->SetPosition(this->vscroll->GetPosition()-1);
+					this->SetDirty();
+				}
+				return ES_HANDLED;
+
+			case WKC_DOWN:
+				if (this->vscroll->GetPosition()+1 + this->vscroll->GetCapacity() <= this->vscroll->GetCount()) {
+					this->vscroll->SetPosition(this->vscroll->GetPosition()+1);
+					this->SetDirty();
+				}
+				return ES_HANDLED;
+		}
+		
+		return ES_NOT_HANDLED;
+	}
+
 	void OnDragDrop_Group(Point pt, int widget)
 	{
 		const Group *g = Group::Get(this->group_sel);
