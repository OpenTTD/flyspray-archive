Index: src/road.h
===================================================================
--- src/road.h	(Revision 10963)
+++ src/road.h	(Arbeitskopie)
@@ -102,20 +102,68 @@
 DECLARE_ENUM_AS_BIT_SET(RoadBits);
 
 /**
- * Calculate the complement of a RoadBits value
+ * Calculate the negative Roadbits
  *
- * Simply flips all bits in the RoadBits value to get the complement
+ * Simply flips all bits in the RoadBits value to get the negative
  * of the RoadBits.
+ * @notice replacement for old ComplementRoadBits
  *
  * @param r The given RoadBits value
- * @return the complement
+ * @return The negative of the given RoadBits
  */
-static inline RoadBits ComplementRoadBits(RoadBits r)
+static inline RoadBits operator - (RoadBits r)
 {
 	return (RoadBits)(ROAD_ALL ^ r);
 }
 
 /**
+ * Calculate the mirrored RoadBits
+ *
+ * Simply move the bits to their new position.
+ * @notice AXIS_END is used for full mirror.
+ *
+ * @param r The given RoadBits value
+ * @param ax The given mirror Axis
+ * @return the mirrored
+ */
+static inline RoadBits operator % (RoadBits r, Axis ax)
+{
+	switch (ax) {
+		case AXIS_X:
+			return (RoadBits)(GB(r, 0, 1) << 2 | GB(r, 1, 1) << 1 | GB(r, 2, 1) | GB(r, 3, 1) << 3);
+			break;
+		case AXIS_Y:
+			return (RoadBits)(GB(r, 0, 1) | GB(r, 1, 1) << 3 | GB(r, 2, 1) << 2 | GB(r, 3, 1) << 1);
+			break;
+		default: /* Full mirror */
+			return (RoadBits)(GB(r, 2, 2) | GB(r, 0, 2) << 2);
+			break;
+	}
+}
+
+/**
+ * Rotate RoadBits clockwise
+ *
+ * @param r The given RoadBits value
+ * @return the clockwise rotated RoadBits
+ */
+static inline RoadBits operator++ (RoadBits r)
+{
+	return (RoadBits)(GB(r, 0, 1) << 3) | (RoadBits)GB(r, 3, 1);
+}
+
+/**
+ * Rotate RoadBits counter clockwise
+ *
+ * @param r The given RoadBits value
+ * @return the counter clockwise rotated RoadBits
+ */
+static inline RoadBits operator-- (RoadBits r)
+{
+	return (RoadBits)(GB(r, 0, 3) << 1) | (RoadBits)GB(r, 3, 1);
+}
+
+/**
  * Create the road-part which belongs to the given DiagDirection
  *
  * This function returns a RoadBits value which belongs to
Index: src/road_cmd.cpp
===================================================================
--- src/road_cmd.cpp	(Revision 10963)
+++ src/road_cmd.cpp	(Arbeitskopie)
@@ -229,7 +229,7 @@
 		}
 
 		case ROAD_TILE_CROSSING: {
-			if (pieces & ComplementRoadBits(GetCrossingRoadBits(tile))) {
+			if (pieces & -GetCrossingRoadBits(tile)) {
 				return CMD_ERROR;
 			}
 
@@ -400,7 +400,7 @@
 				case ROAD_TILE_CROSSING:
 					if (HASBIT(GetRoadTypes(tile), rt)) return_cmd_error(STR_1007_ALREADY_BUILT);
 					all_bits = GetCrossingRoadBits(tile);
-					if (pieces & ComplementRoadBits(all_bits)) goto do_clear;
+					if (pieces & -all_bits) goto do_clear;
 					break;
 
 				default:
@@ -484,7 +484,7 @@
 
 	if (IsTileType(tile, MP_ROAD)) {
 		/* Don't put the pieces that already exist */
-		pieces &= ComplementRoadBits(existing);
+		pieces &= -existing;
 	}
 
 	cost.AddCost(CountRoadBits(pieces) * _price.build_road);
